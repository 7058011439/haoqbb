// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: protoGameJiuMi.proto

package protocol

import (
	encoding_binary "encoding/binary"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ESpeakChannel int32

const (
	ESpeakChannel_ESpeakChannel_None    ESpeakChannel = 0
	ESpeakChannel_ESpeakChannel_Sys     ESpeakChannel = 1
	ESpeakChannel_ESpeakChannel_Global  ESpeakChannel = 2
	ESpeakChannel_ESpeakChannel_Near    ESpeakChannel = 3
	ESpeakChannel_ESpeakChannel_Private ESpeakChannel = 4
)

var ESpeakChannel_name = map[int32]string{
	0: "ESpeakChannel_None",
	1: "ESpeakChannel_Sys",
	2: "ESpeakChannel_Global",
	3: "ESpeakChannel_Near",
	4: "ESpeakChannel_Private",
}

var ESpeakChannel_value = map[string]int32{
	"ESpeakChannel_None":    0,
	"ESpeakChannel_Sys":     1,
	"ESpeakChannel_Global":  2,
	"ESpeakChannel_Near":    3,
	"ESpeakChannel_Private": 4,
}

func (x ESpeakChannel) String() string {
	return proto.EnumName(ESpeakChannel_name, int32(x))
}

func (ESpeakChannel) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_a1680e55bbb2433d, []int{0}
}

type Enum_Occupation int32

const (
	Enum_Occupation_None      Enum_Occupation = 0
	Enum_Occupation_FisherMan Enum_Occupation = 1
	Enum_Occupation_Cook      Enum_Occupation = 2
	Enum_Occupation_Farmer    Enum_Occupation = 3
	Enum_Occupation_StockMan  Enum_Occupation = 4
	Enum_Occupation_Carpenter Enum_Occupation = 5
	Enum_Occupation_Miner     Enum_Occupation = 6
	Enum_Occupation_Tailor    Enum_Occupation = 7
	Enum_Occupation_Max       Enum_Occupation = 8
)

var Enum_Occupation_name = map[int32]string{
	0: "None",
	1: "FisherMan",
	2: "Cook",
	3: "Farmer",
	4: "StockMan",
	5: "Carpenter",
	6: "Miner",
	7: "Tailor",
	8: "Max",
}

var Enum_Occupation_value = map[string]int32{
	"None":      0,
	"FisherMan": 1,
	"Cook":      2,
	"Farmer":    3,
	"StockMan":  4,
	"Carpenter": 5,
	"Miner":     6,
	"Tailor":    7,
	"Max":       8,
}

func (x Enum_Occupation) String() string {
	return proto.EnumName(Enum_Occupation_name, int32(x))
}

func (Enum_Occupation) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_a1680e55bbb2433d, []int{1}
}

//通用的错误返回码
type Enum_ErrorCode int32

const (
	Enum_ErrorCode_NoUse      Enum_ErrorCode = 0
	Enum_ErrorCode_NoMoney    Enum_ErrorCode = 1
	Enum_ErrorCode_NoEnergy   Enum_ErrorCode = 2
	Enum_ErrorCode_NoItem     Enum_ErrorCode = 3
	Enum_ErrorCode_OtherError Enum_ErrorCode = 4
)

var Enum_ErrorCode_name = map[int32]string{
	0: "NoUse",
	1: "NoMoney",
	2: "NoEnergy",
	3: "NoItem",
	4: "OtherError",
}

var Enum_ErrorCode_value = map[string]int32{
	"NoUse":      0,
	"NoMoney":    1,
	"NoEnergy":   2,
	"NoItem":     3,
	"OtherError": 4,
}

func (x Enum_ErrorCode) String() string {
	return proto.EnumName(Enum_ErrorCode_name, int32(x))
}

func (Enum_ErrorCode) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_a1680e55bbb2433d, []int{2}
}

//------------------------------Mission begin----------------------------------
type Enum_MissionStatus int32

const (
	Enum_MissionStatus_eReady    Enum_MissionStatus = 0
	Enum_MissionStatus_eAccepted Enum_MissionStatus = 1
	Enum_MissionStatus_eComplete Enum_MissionStatus = 2
	Enum_MissionStatus_eEnd      Enum_MissionStatus = 3
)

var Enum_MissionStatus_name = map[int32]string{
	0: "eReady",
	1: "eAccepted",
	2: "eComplete",
	3: "eEnd",
}

var Enum_MissionStatus_value = map[string]int32{
	"eReady":    0,
	"eAccepted": 1,
	"eComplete": 2,
	"eEnd":      3,
}

func (x Enum_MissionStatus) String() string {
	return proto.EnumName(Enum_MissionStatus_name, int32(x))
}

func (Enum_MissionStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_a1680e55bbb2433d, []int{3}
}

type Enum_Mine_EnterCode int32

const (
	Enum_Mine_EnterCode_eMineEnterCode_NoUse      Enum_Mine_EnterCode = 0
	Enum_Mine_EnterCode_eMineEnterCode_OK         Enum_Mine_EnterCode = 1
	Enum_Mine_EnterCode_eMineEnterCode_LackEnergy Enum_Mine_EnterCode = 2
	Enum_Mine_EnterCode_eMineEnterCode_LayerError Enum_Mine_EnterCode = 3
)

var Enum_Mine_EnterCode_name = map[int32]string{
	0: "eMineEnterCode_NoUse",
	1: "eMineEnterCode_OK",
	2: "eMineEnterCode_LackEnergy",
	3: "eMineEnterCode_LayerError",
}

var Enum_Mine_EnterCode_value = map[string]int32{
	"eMineEnterCode_NoUse":      0,
	"eMineEnterCode_OK":         1,
	"eMineEnterCode_LackEnergy": 2,
	"eMineEnterCode_LayerError": 3,
}

func (x Enum_Mine_EnterCode) String() string {
	return proto.EnumName(Enum_Mine_EnterCode_name, int32(x))
}

func (Enum_Mine_EnterCode) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_a1680e55bbb2433d, []int{4}
}

type Enum_Mine_DigCode int32

const (
	Enum_Mine_DigCode_eMineDigCode_NoUse       Enum_Mine_DigCode = 0
	Enum_Mine_DigCode_eMineDigCode_OK          Enum_Mine_DigCode = 1
	Enum_Mine_DigCode_eMineDigCode_LackEnergy  Enum_Mine_DigCode = 2
	Enum_Mine_DigCode_eMineDigCode_UnableDig   Enum_Mine_DigCode = 3
	Enum_Mine_DigCode_eMineDigCode_RepeatDig   Enum_Mine_DigCode = 4
	Enum_Mine_DigCode_eMineDigCode_BagCapError Enum_Mine_DigCode = 5
)

var Enum_Mine_DigCode_name = map[int32]string{
	0: "eMineDigCode_NoUse",
	1: "eMineDigCode_OK",
	2: "eMineDigCode_LackEnergy",
	3: "eMineDigCode_UnableDig",
	4: "eMineDigCode_RepeatDig",
	5: "eMineDigCode_BagCapError",
}

var Enum_Mine_DigCode_value = map[string]int32{
	"eMineDigCode_NoUse":       0,
	"eMineDigCode_OK":          1,
	"eMineDigCode_LackEnergy":  2,
	"eMineDigCode_UnableDig":   3,
	"eMineDigCode_RepeatDig":   4,
	"eMineDigCode_BagCapError": 5,
}

func (x Enum_Mine_DigCode) String() string {
	return proto.EnumName(Enum_Mine_DigCode_name, int32(x))
}

func (Enum_Mine_DigCode) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_a1680e55bbb2433d, []int{5}
}

type Enum_Mine_RewardType int32

const (
	Enum_Mine_RewardType_eMineRewardType_none      Enum_Mine_RewardType = 0
	Enum_Mine_RewardType_eMineRewardType_GiveItem  Enum_Mine_RewardType = 1
	Enum_Mine_RewardType_eMineRewardType_GiveMoney Enum_Mine_RewardType = 2
	Enum_Mine_RewardType_eMineRewardType_BoxItem   Enum_Mine_RewardType = 11
	Enum_Mine_RewardType_eMineRewardType_BoxMoney  Enum_Mine_RewardType = 12
	Enum_Mine_RewardType_eMineRewardType_CaveItem  Enum_Mine_RewardType = 21
	Enum_Mine_RewardType_eMineRewardType_CaveMoney Enum_Mine_RewardType = 22
	Enum_Mine_RewardType_eMineRewardType_CavePet   Enum_Mine_RewardType = 23
	Enum_Mine_RewardType_eMineRewardType_Wave      Enum_Mine_RewardType = 998
	Enum_Mine_RewardType_eMineRewardType_Room      Enum_Mine_RewardType = 999
)

var Enum_Mine_RewardType_name = map[int32]string{
	0:   "eMineRewardType_none",
	1:   "eMineRewardType_GiveItem",
	2:   "eMineRewardType_GiveMoney",
	11:  "eMineRewardType_BoxItem",
	12:  "eMineRewardType_BoxMoney",
	21:  "eMineRewardType_CaveItem",
	22:  "eMineRewardType_CaveMoney",
	23:  "eMineRewardType_CavePet",
	998: "eMineRewardType_Wave",
	999: "eMineRewardType_Room",
}

var Enum_Mine_RewardType_value = map[string]int32{
	"eMineRewardType_none":      0,
	"eMineRewardType_GiveItem":  1,
	"eMineRewardType_GiveMoney": 2,
	"eMineRewardType_BoxItem":   11,
	"eMineRewardType_BoxMoney":  12,
	"eMineRewardType_CaveItem":  21,
	"eMineRewardType_CaveMoney": 22,
	"eMineRewardType_CavePet":   23,
	"eMineRewardType_Wave":      998,
	"eMineRewardType_Room":      999,
}

func (x Enum_Mine_RewardType) String() string {
	return proto.EnumName(Enum_Mine_RewardType_name, int32(x))
}

func (Enum_Mine_RewardType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_a1680e55bbb2433d, []int{6}
}

type Enum_Mine_GetRewardCode int32

const (
	Enum_Mine_GetRewardCode_eMineGetRewardCode_NoUse       Enum_Mine_GetRewardCode = 0
	Enum_Mine_GetRewardCode_eMineGetRewardCode_OK          Enum_Mine_GetRewardCode = 1
	Enum_Mine_GetRewardCode_eMineGetRewardCode_UnableGet   Enum_Mine_GetRewardCode = 2
	Enum_Mine_GetRewardCode_eMineGetRewardCode_RepeatGet   Enum_Mine_GetRewardCode = 3
	Enum_Mine_GetRewardCode_eMineGetRewardCode_BagCapError Enum_Mine_GetRewardCode = 4
)

var Enum_Mine_GetRewardCode_name = map[int32]string{
	0: "eMineGetRewardCode_NoUse",
	1: "eMineGetRewardCode_OK",
	2: "eMineGetRewardCode_UnableGet",
	3: "eMineGetRewardCode_RepeatGet",
	4: "eMineGetRewardCode_BagCapError",
}

var Enum_Mine_GetRewardCode_value = map[string]int32{
	"eMineGetRewardCode_NoUse":       0,
	"eMineGetRewardCode_OK":          1,
	"eMineGetRewardCode_UnableGet":   2,
	"eMineGetRewardCode_RepeatGet":   3,
	"eMineGetRewardCode_BagCapError": 4,
}

func (x Enum_Mine_GetRewardCode) String() string {
	return proto.EnumName(Enum_Mine_GetRewardCode_name, int32(x))
}

func (Enum_Mine_GetRewardCode) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_a1680e55bbb2433d, []int{7}
}

//具体的属性类型，最好都是INT，比如level,pearl
type Enum_UserAttr int32

const (
	Enum_UserAttr_unused Enum_UserAttr = 0
	// int
	Enum_UserAttr_shell            Enum_UserAttr = 1
	Enum_UserAttr_pearlBind        Enum_UserAttr = 2
	Enum_UserAttr_pearl            Enum_UserAttr = 3
	Enum_UserAttr_energy           Enum_UserAttr = 4
	Enum_UserAttr_charm            Enum_UserAttr = 5
	Enum_UserAttr_exp              Enum_UserAttr = 6
	Enum_UserAttr_level            Enum_UserAttr = 7
	Enum_UserAttr_homeLevel        Enum_UserAttr = 8
	Enum_UserAttr_rmb              Enum_UserAttr = 9
	Enum_UserAttr_farmField        Enum_UserAttr = 10
	Enum_UserAttr_farmFence        Enum_UserAttr = 11
	Enum_UserAttr_homeProsperity   Enum_UserAttr = 12
	Enum_UserAttr_faceId           Enum_UserAttr = 13
	Enum_UserAttr_faceFrameId      Enum_UserAttr = 14
	Enum_UserAttr_wearingClothesId Enum_UserAttr = 15
	Enum_UserAttr_bulletinBoardId  Enum_UserAttr = 16
	Enum_UserAttr_activePointDaily Enum_UserAttr = 17
	Enum_UserAttr_activePointWeek  Enum_UserAttr = 18
	Enum_UserAttr_banTalk          Enum_UserAttr = 19
	// string
	Enum_UserAttr_nickName          Enum_UserAttr = 31
	Enum_UserAttr_phoneNo           Enum_UserAttr = 32
	Enum_UserAttr_IDCard            Enum_UserAttr = 33
	Enum_UserAttr_realName          Enum_UserAttr = 34
	Enum_UserAttr_alreadyRegistered Enum_UserAttr = 40
	Enum_UserAttr_manorName         Enum_UserAttr = 41
	// list
	Enum_UserAttr_syntheticList Enum_UserAttr = 51
	Enum_UserAttr_clothesList   Enum_UserAttr = 52
	Enum_UserAttr_floorList     Enum_UserAttr = 53
)

var Enum_UserAttr_name = map[int32]string{
	0:  "unused",
	1:  "shell",
	2:  "pearlBind",
	3:  "pearl",
	4:  "energy",
	5:  "charm",
	6:  "exp",
	7:  "level",
	8:  "homeLevel",
	9:  "rmb",
	10: "farmField",
	11: "farmFence",
	12: "homeProsperity",
	13: "faceId",
	14: "faceFrameId",
	15: "wearingClothesId",
	16: "bulletinBoardId",
	17: "activePointDaily",
	18: "activePointWeek",
	19: "banTalk",
	31: "nickName",
	32: "phoneNo",
	33: "IDCard",
	34: "realName",
	40: "alreadyRegistered",
	41: "manorName",
	51: "syntheticList",
	52: "clothesList",
	53: "floorList",
}

var Enum_UserAttr_value = map[string]int32{
	"unused":            0,
	"shell":             1,
	"pearlBind":         2,
	"pearl":             3,
	"energy":            4,
	"charm":             5,
	"exp":               6,
	"level":             7,
	"homeLevel":         8,
	"rmb":               9,
	"farmField":         10,
	"farmFence":         11,
	"homeProsperity":    12,
	"faceId":            13,
	"faceFrameId":       14,
	"wearingClothesId":  15,
	"bulletinBoardId":   16,
	"activePointDaily":  17,
	"activePointWeek":   18,
	"banTalk":           19,
	"nickName":          31,
	"phoneNo":           32,
	"IDCard":            33,
	"realName":          34,
	"alreadyRegistered": 40,
	"manorName":         41,
	"syntheticList":     51,
	"clothesList":       52,
	"floorList":         53,
}

func (x Enum_UserAttr) String() string {
	return proto.EnumName(Enum_UserAttr_name, int32(x))
}

func (Enum_UserAttr) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_a1680e55bbb2433d, []int{8}
}

//限购类型
type Enum_Shop_Restriction int32

const (
	Enum_Shop_Restriction_shop_Restriction_unused Enum_Shop_Restriction = 0
	Enum_Shop_Restriction_norestric               Enum_Shop_Restriction = 1
	Enum_Shop_Restriction_dayrefresh              Enum_Shop_Restriction = 2
	Enum_Shop_Restriction_weekrefresh             Enum_Shop_Restriction = 3
	Enum_Shop_Restriction_permanent               Enum_Shop_Restriction = 4
	Enum_Shop_Restriction_timerange               Enum_Shop_Restriction = 5
	Enum_Shop_Restriction_timeLimit               Enum_Shop_Restriction = 99
)

var Enum_Shop_Restriction_name = map[int32]string{
	0:  "shop_Restriction_unused",
	1:  "norestric",
	2:  "dayrefresh",
	3:  "weekrefresh",
	4:  "permanent",
	5:  "timerange",
	99: "timeLimit",
}

var Enum_Shop_Restriction_value = map[string]int32{
	"shop_Restriction_unused": 0,
	"norestric":               1,
	"dayrefresh":              2,
	"weekrefresh":             3,
	"permanent":               4,
	"timerange":               5,
	"timeLimit":               99,
}

func (x Enum_Shop_Restriction) String() string {
	return proto.EnumName(Enum_Shop_Restriction_name, int32(x))
}

func (Enum_Shop_Restriction) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_a1680e55bbb2433d, []int{9}
}

type Enum_Email_Operation int32

const (
	Enum_Email_Operation_enEmail_NoUse        Enum_Email_Operation = 0
	Enum_Email_Operation_enEmail_Read         Enum_Email_Operation = 1
	Enum_Email_Operation_enEmail_Delete       Enum_Email_Operation = 2
	Enum_Email_Operation_enEmail_GetAttach    Enum_Email_Operation = 3
	Enum_Email_Operation_enEmail_GetAllAttach Enum_Email_Operation = 4
	Enum_Email_Operation_enEmail_DelAllRead   Enum_Email_Operation = 5
)

var Enum_Email_Operation_name = map[int32]string{
	0: "enEmail_NoUse",
	1: "enEmail_Read",
	2: "enEmail_Delete",
	3: "enEmail_GetAttach",
	4: "enEmail_GetAllAttach",
	5: "enEmail_DelAllRead",
}

var Enum_Email_Operation_value = map[string]int32{
	"enEmail_NoUse":        0,
	"enEmail_Read":         1,
	"enEmail_Delete":       2,
	"enEmail_GetAttach":    3,
	"enEmail_GetAllAttach": 4,
	"enEmail_DelAllRead":   5,
}

func (x Enum_Email_Operation) String() string {
	return proto.EnumName(Enum_Email_Operation_name, int32(x))
}

func (Enum_Email_Operation) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_a1680e55bbb2433d, []int{10}
}

//S2F 游戏服发给社交服 C2F 客户端发给社交服
type F2S_RegisterServer struct {
	Code                 string   `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *F2S_RegisterServer) Reset()         { *m = F2S_RegisterServer{} }
func (m *F2S_RegisterServer) String() string { return proto.CompactTextString(m) }
func (*F2S_RegisterServer) ProtoMessage()    {}
func (*F2S_RegisterServer) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1680e55bbb2433d, []int{0}
}
func (m *F2S_RegisterServer) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *F2S_RegisterServer) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_F2S_RegisterServer.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *F2S_RegisterServer) XXX_Merge(src proto.Message) {
	xxx_messageInfo_F2S_RegisterServer.Merge(m, src)
}
func (m *F2S_RegisterServer) XXX_Size() int {
	return m.Size()
}
func (m *F2S_RegisterServer) XXX_DiscardUnknown() {
	xxx_messageInfo_F2S_RegisterServer.DiscardUnknown(m)
}

var xxx_messageInfo_F2S_RegisterServer proto.InternalMessageInfo

func (m *F2S_RegisterServer) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

type XSimpleUser struct {
	UserId               int32    `protobuf:"varint,1,opt,name=userId,proto3" json:"userId,omitempty"`
	GameId               int32    `protobuf:"varint,2,opt,name=gameId,proto3" json:"gameId,omitempty"`
	NickName             string   `protobuf:"bytes,3,opt,name=nickName,proto3" json:"nickName,omitempty"`
	Level                int32    `protobuf:"varint,4,opt,name=level,proto3" json:"level,omitempty"`
	FaceFrameId          int32    `protobuf:"varint,6,opt,name=faceFrameId,proto3" json:"faceFrameId,omitempty"`
	WearingClothesId     int32    `protobuf:"varint,9,opt,name=wearingClothesId,proto3" json:"wearingClothesId,omitempty"`
	Token                string   `protobuf:"bytes,15,opt,name=token,proto3" json:"token,omitempty"`
	Friends              []int32  `protobuf:"varint,16,rep,packed,name=friends,proto3" json:"friends,omitempty"`
	BlockList            []int32  `protobuf:"varint,17,rep,packed,name=blockList,proto3" json:"blockList,omitempty"`
	BanTalk              int32    `protobuf:"varint,19,opt,name=banTalk,proto3" json:"banTalk,omitempty"`
	SceneId              int64    `protobuf:"varint,20,opt,name=sceneId,proto3" json:"sceneId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *XSimpleUser) Reset()         { *m = XSimpleUser{} }
func (m *XSimpleUser) String() string { return proto.CompactTextString(m) }
func (*XSimpleUser) ProtoMessage()    {}
func (*XSimpleUser) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1680e55bbb2433d, []int{1}
}
func (m *XSimpleUser) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *XSimpleUser) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_XSimpleUser.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *XSimpleUser) XXX_Merge(src proto.Message) {
	xxx_messageInfo_XSimpleUser.Merge(m, src)
}
func (m *XSimpleUser) XXX_Size() int {
	return m.Size()
}
func (m *XSimpleUser) XXX_DiscardUnknown() {
	xxx_messageInfo_XSimpleUser.DiscardUnknown(m)
}

var xxx_messageInfo_XSimpleUser proto.InternalMessageInfo

func (m *XSimpleUser) GetUserId() int32 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *XSimpleUser) GetGameId() int32 {
	if m != nil {
		return m.GameId
	}
	return 0
}

func (m *XSimpleUser) GetNickName() string {
	if m != nil {
		return m.NickName
	}
	return ""
}

func (m *XSimpleUser) GetLevel() int32 {
	if m != nil {
		return m.Level
	}
	return 0
}

func (m *XSimpleUser) GetFaceFrameId() int32 {
	if m != nil {
		return m.FaceFrameId
	}
	return 0
}

func (m *XSimpleUser) GetWearingClothesId() int32 {
	if m != nil {
		return m.WearingClothesId
	}
	return 0
}

func (m *XSimpleUser) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *XSimpleUser) GetFriends() []int32 {
	if m != nil {
		return m.Friends
	}
	return nil
}

func (m *XSimpleUser) GetBlockList() []int32 {
	if m != nil {
		return m.BlockList
	}
	return nil
}

func (m *XSimpleUser) GetBanTalk() int32 {
	if m != nil {
		return m.BanTalk
	}
	return 0
}

func (m *XSimpleUser) GetSceneId() int64 {
	if m != nil {
		return m.SceneId
	}
	return 0
}

// 游戏服回复社交服注册
type S2F_RegisterServer struct {
	Users                []*XSimpleUser `protobuf:"bytes,1,rep,name=users,proto3" json:"users,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *S2F_RegisterServer) Reset()         { *m = S2F_RegisterServer{} }
func (m *S2F_RegisterServer) String() string { return proto.CompactTextString(m) }
func (*S2F_RegisterServer) ProtoMessage()    {}
func (*S2F_RegisterServer) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1680e55bbb2433d, []int{2}
}
func (m *S2F_RegisterServer) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *S2F_RegisterServer) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_S2F_RegisterServer.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *S2F_RegisterServer) XXX_Merge(src proto.Message) {
	xxx_messageInfo_S2F_RegisterServer.Merge(m, src)
}
func (m *S2F_RegisterServer) XXX_Size() int {
	return m.Size()
}
func (m *S2F_RegisterServer) XXX_DiscardUnknown() {
	xxx_messageInfo_S2F_RegisterServer.DiscardUnknown(m)
}

var xxx_messageInfo_S2F_RegisterServer proto.InternalMessageInfo

func (m *S2F_RegisterServer) GetUsers() []*XSimpleUser {
	if m != nil {
		return m.Users
	}
	return nil
}

// 游戏服通知玩家登录
type S2F_UserLogin struct {
	User                 *XSimpleUser `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *S2F_UserLogin) Reset()         { *m = S2F_UserLogin{} }
func (m *S2F_UserLogin) String() string { return proto.CompactTextString(m) }
func (*S2F_UserLogin) ProtoMessage()    {}
func (*S2F_UserLogin) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1680e55bbb2433d, []int{3}
}
func (m *S2F_UserLogin) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *S2F_UserLogin) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_S2F_UserLogin.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *S2F_UserLogin) XXX_Merge(src proto.Message) {
	xxx_messageInfo_S2F_UserLogin.Merge(m, src)
}
func (m *S2F_UserLogin) XXX_Size() int {
	return m.Size()
}
func (m *S2F_UserLogin) XXX_DiscardUnknown() {
	xxx_messageInfo_S2F_UserLogin.DiscardUnknown(m)
}

var xxx_messageInfo_S2F_UserLogin proto.InternalMessageInfo

func (m *S2F_UserLogin) GetUser() *XSimpleUser {
	if m != nil {
		return m.User
	}
	return nil
}

// 游戏服通知玩家登录，社交服回复结果
type F2S_UserLogin struct {
	UserId               int32    `protobuf:"varint,1,opt,name=userId,proto3" json:"userId,omitempty"`
	Result               bool     `protobuf:"varint,2,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *F2S_UserLogin) Reset()         { *m = F2S_UserLogin{} }
func (m *F2S_UserLogin) String() string { return proto.CompactTextString(m) }
func (*F2S_UserLogin) ProtoMessage()    {}
func (*F2S_UserLogin) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1680e55bbb2433d, []int{4}
}
func (m *F2S_UserLogin) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *F2S_UserLogin) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_F2S_UserLogin.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *F2S_UserLogin) XXX_Merge(src proto.Message) {
	xxx_messageInfo_F2S_UserLogin.Merge(m, src)
}
func (m *F2S_UserLogin) XXX_Size() int {
	return m.Size()
}
func (m *F2S_UserLogin) XXX_DiscardUnknown() {
	xxx_messageInfo_F2S_UserLogin.DiscardUnknown(m)
}

var xxx_messageInfo_F2S_UserLogin proto.InternalMessageInfo

func (m *F2S_UserLogin) GetUserId() int32 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *F2S_UserLogin) GetResult() bool {
	if m != nil {
		return m.Result
	}
	return false
}

//
type S2F_UserLogout struct {
	UserId               int32    `protobuf:"varint,1,opt,name=userId,proto3" json:"userId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *S2F_UserLogout) Reset()         { *m = S2F_UserLogout{} }
func (m *S2F_UserLogout) String() string { return proto.CompactTextString(m) }
func (*S2F_UserLogout) ProtoMessage()    {}
func (*S2F_UserLogout) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1680e55bbb2433d, []int{5}
}
func (m *S2F_UserLogout) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *S2F_UserLogout) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_S2F_UserLogout.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *S2F_UserLogout) XXX_Merge(src proto.Message) {
	xxx_messageInfo_S2F_UserLogout.Merge(m, src)
}
func (m *S2F_UserLogout) XXX_Size() int {
	return m.Size()
}
func (m *S2F_UserLogout) XXX_DiscardUnknown() {
	xxx_messageInfo_S2F_UserLogout.DiscardUnknown(m)
}

var xxx_messageInfo_S2F_UserLogout proto.InternalMessageInfo

func (m *S2F_UserLogout) GetUserId() int32 {
	if m != nil {
		return m.UserId
	}
	return 0
}

type S2F_UserAttrChange struct {
	UserId               int32         `protobuf:"varint,1,opt,name=userId,proto3" json:"userId,omitempty"`
	Attr                 Enum_UserAttr `protobuf:"varint,2,opt,name=attr,proto3,enum=protocol.Enum_UserAttr" json:"attr,omitempty"`
	AttrValueInt         int32         `protobuf:"varint,3,opt,name=attrValueInt,proto3" json:"attrValueInt,omitempty"`
	AttrValueStr         string        `protobuf:"bytes,4,opt,name=attrValueStr,proto3" json:"attrValueStr,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *S2F_UserAttrChange) Reset()         { *m = S2F_UserAttrChange{} }
func (m *S2F_UserAttrChange) String() string { return proto.CompactTextString(m) }
func (*S2F_UserAttrChange) ProtoMessage()    {}
func (*S2F_UserAttrChange) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1680e55bbb2433d, []int{6}
}
func (m *S2F_UserAttrChange) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *S2F_UserAttrChange) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_S2F_UserAttrChange.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *S2F_UserAttrChange) XXX_Merge(src proto.Message) {
	xxx_messageInfo_S2F_UserAttrChange.Merge(m, src)
}
func (m *S2F_UserAttrChange) XXX_Size() int {
	return m.Size()
}
func (m *S2F_UserAttrChange) XXX_DiscardUnknown() {
	xxx_messageInfo_S2F_UserAttrChange.DiscardUnknown(m)
}

var xxx_messageInfo_S2F_UserAttrChange proto.InternalMessageInfo

func (m *S2F_UserAttrChange) GetUserId() int32 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *S2F_UserAttrChange) GetAttr() Enum_UserAttr {
	if m != nil {
		return m.Attr
	}
	return Enum_UserAttr_unused
}

func (m *S2F_UserAttrChange) GetAttrValueInt() int32 {
	if m != nil {
		return m.AttrValueInt
	}
	return 0
}

func (m *S2F_UserAttrChange) GetAttrValueStr() string {
	if m != nil {
		return m.AttrValueStr
	}
	return ""
}

//添加好友
type S2F_AddFriend struct {
	UserId               int32    `protobuf:"varint,1,opt,name=userId,proto3" json:"userId,omitempty"`
	FriendId             int32    `protobuf:"varint,2,opt,name=friendId,proto3" json:"friendId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *S2F_AddFriend) Reset()         { *m = S2F_AddFriend{} }
func (m *S2F_AddFriend) String() string { return proto.CompactTextString(m) }
func (*S2F_AddFriend) ProtoMessage()    {}
func (*S2F_AddFriend) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1680e55bbb2433d, []int{7}
}
func (m *S2F_AddFriend) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *S2F_AddFriend) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_S2F_AddFriend.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *S2F_AddFriend) XXX_Merge(src proto.Message) {
	xxx_messageInfo_S2F_AddFriend.Merge(m, src)
}
func (m *S2F_AddFriend) XXX_Size() int {
	return m.Size()
}
func (m *S2F_AddFriend) XXX_DiscardUnknown() {
	xxx_messageInfo_S2F_AddFriend.DiscardUnknown(m)
}

var xxx_messageInfo_S2F_AddFriend proto.InternalMessageInfo

func (m *S2F_AddFriend) GetUserId() int32 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *S2F_AddFriend) GetFriendId() int32 {
	if m != nil {
		return m.FriendId
	}
	return 0
}

//删除好友
type S2F_DelFriend struct {
	UserId               int32    `protobuf:"varint,1,opt,name=userId,proto3" json:"userId,omitempty"`
	FriendId             int32    `protobuf:"varint,2,opt,name=friendId,proto3" json:"friendId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *S2F_DelFriend) Reset()         { *m = S2F_DelFriend{} }
func (m *S2F_DelFriend) String() string { return proto.CompactTextString(m) }
func (*S2F_DelFriend) ProtoMessage()    {}
func (*S2F_DelFriend) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1680e55bbb2433d, []int{8}
}
func (m *S2F_DelFriend) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *S2F_DelFriend) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_S2F_DelFriend.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *S2F_DelFriend) XXX_Merge(src proto.Message) {
	xxx_messageInfo_S2F_DelFriend.Merge(m, src)
}
func (m *S2F_DelFriend) XXX_Size() int {
	return m.Size()
}
func (m *S2F_DelFriend) XXX_DiscardUnknown() {
	xxx_messageInfo_S2F_DelFriend.DiscardUnknown(m)
}

var xxx_messageInfo_S2F_DelFriend proto.InternalMessageInfo

func (m *S2F_DelFriend) GetUserId() int32 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *S2F_DelFriend) GetFriendId() int32 {
	if m != nil {
		return m.FriendId
	}
	return 0
}

//和好友离线聊天
type F2S_TalkToOfflineFriend struct {
	Msg                  string   `protobuf:"bytes,1,opt,name=msg,proto3" json:"msg,omitempty"`
	UserId               int32    `protobuf:"varint,2,opt,name=userId,proto3" json:"userId,omitempty"`
	MsgId                int32    `protobuf:"varint,3,opt,name=msgId,proto3" json:"msgId,omitempty"`
	ReceiverId           int32    `protobuf:"varint,4,opt,name=receiverId,proto3" json:"receiverId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *F2S_TalkToOfflineFriend) Reset()         { *m = F2S_TalkToOfflineFriend{} }
func (m *F2S_TalkToOfflineFriend) String() string { return proto.CompactTextString(m) }
func (*F2S_TalkToOfflineFriend) ProtoMessage()    {}
func (*F2S_TalkToOfflineFriend) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1680e55bbb2433d, []int{9}
}
func (m *F2S_TalkToOfflineFriend) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *F2S_TalkToOfflineFriend) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_F2S_TalkToOfflineFriend.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *F2S_TalkToOfflineFriend) XXX_Merge(src proto.Message) {
	xxx_messageInfo_F2S_TalkToOfflineFriend.Merge(m, src)
}
func (m *F2S_TalkToOfflineFriend) XXX_Size() int {
	return m.Size()
}
func (m *F2S_TalkToOfflineFriend) XXX_DiscardUnknown() {
	xxx_messageInfo_F2S_TalkToOfflineFriend.DiscardUnknown(m)
}

var xxx_messageInfo_F2S_TalkToOfflineFriend proto.InternalMessageInfo

func (m *F2S_TalkToOfflineFriend) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

func (m *F2S_TalkToOfflineFriend) GetUserId() int32 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *F2S_TalkToOfflineFriend) GetMsgId() int32 {
	if m != nil {
		return m.MsgId
	}
	return 0
}

func (m *F2S_TalkToOfflineFriend) GetReceiverId() int32 {
	if m != nil {
		return m.ReceiverId
	}
	return 0
}

//客户端连接好友服
type C2F_Login struct {
	UserId               int32    `protobuf:"varint,1,opt,name=userId,proto3" json:"userId,omitempty"`
	Token                string   `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *C2F_Login) Reset()         { *m = C2F_Login{} }
func (m *C2F_Login) String() string { return proto.CompactTextString(m) }
func (*C2F_Login) ProtoMessage()    {}
func (*C2F_Login) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1680e55bbb2433d, []int{10}
}
func (m *C2F_Login) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *C2F_Login) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_C2F_Login.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *C2F_Login) XXX_Merge(src proto.Message) {
	xxx_messageInfo_C2F_Login.Merge(m, src)
}
func (m *C2F_Login) XXX_Size() int {
	return m.Size()
}
func (m *C2F_Login) XXX_DiscardUnknown() {
	xxx_messageInfo_C2F_Login.DiscardUnknown(m)
}

var xxx_messageInfo_C2F_Login proto.InternalMessageInfo

func (m *C2F_Login) GetUserId() int32 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *C2F_Login) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

//社交服回复客户端连接
type F2C_Login struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *F2C_Login) Reset()         { *m = F2C_Login{} }
func (m *F2C_Login) String() string { return proto.CompactTextString(m) }
func (*F2C_Login) ProtoMessage()    {}
func (*F2C_Login) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1680e55bbb2433d, []int{11}
}
func (m *F2C_Login) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *F2C_Login) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_F2C_Login.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *F2C_Login) XXX_Merge(src proto.Message) {
	xxx_messageInfo_F2C_Login.Merge(m, src)
}
func (m *F2C_Login) XXX_Size() int {
	return m.Size()
}
func (m *F2C_Login) XXX_DiscardUnknown() {
	xxx_messageInfo_F2C_Login.DiscardUnknown(m)
}

var xxx_messageInfo_F2C_Login proto.InternalMessageInfo

type S2F_SyncMyFriendList struct {
	Friends              []int32  `protobuf:"varint,1,rep,packed,name=friends,proto3" json:"friends,omitempty"`
	UserId               int32    `protobuf:"varint,2,opt,name=userId,proto3" json:"userId,omitempty"`
	BlockList            []int32  `protobuf:"varint,3,rep,packed,name=blockList,proto3" json:"blockList,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *S2F_SyncMyFriendList) Reset()         { *m = S2F_SyncMyFriendList{} }
func (m *S2F_SyncMyFriendList) String() string { return proto.CompactTextString(m) }
func (*S2F_SyncMyFriendList) ProtoMessage()    {}
func (*S2F_SyncMyFriendList) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1680e55bbb2433d, []int{12}
}
func (m *S2F_SyncMyFriendList) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *S2F_SyncMyFriendList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_S2F_SyncMyFriendList.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *S2F_SyncMyFriendList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_S2F_SyncMyFriendList.Merge(m, src)
}
func (m *S2F_SyncMyFriendList) XXX_Size() int {
	return m.Size()
}
func (m *S2F_SyncMyFriendList) XXX_DiscardUnknown() {
	xxx_messageInfo_S2F_SyncMyFriendList.DiscardUnknown(m)
}

var xxx_messageInfo_S2F_SyncMyFriendList proto.InternalMessageInfo

func (m *S2F_SyncMyFriendList) GetFriends() []int32 {
	if m != nil {
		return m.Friends
	}
	return nil
}

func (m *S2F_SyncMyFriendList) GetUserId() int32 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *S2F_SyncMyFriendList) GetBlockList() []int32 {
	if m != nil {
		return m.BlockList
	}
	return nil
}

// 添加到屏蔽列表
type S2F_AddBlock struct {
	UserId               int32    `protobuf:"varint,1,opt,name=userId,proto3" json:"userId,omitempty"`
	TargetId             int32    `protobuf:"varint,2,opt,name=targetId,proto3" json:"targetId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *S2F_AddBlock) Reset()         { *m = S2F_AddBlock{} }
func (m *S2F_AddBlock) String() string { return proto.CompactTextString(m) }
func (*S2F_AddBlock) ProtoMessage()    {}
func (*S2F_AddBlock) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1680e55bbb2433d, []int{13}
}
func (m *S2F_AddBlock) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *S2F_AddBlock) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_S2F_AddBlock.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *S2F_AddBlock) XXX_Merge(src proto.Message) {
	xxx_messageInfo_S2F_AddBlock.Merge(m, src)
}
func (m *S2F_AddBlock) XXX_Size() int {
	return m.Size()
}
func (m *S2F_AddBlock) XXX_DiscardUnknown() {
	xxx_messageInfo_S2F_AddBlock.DiscardUnknown(m)
}

var xxx_messageInfo_S2F_AddBlock proto.InternalMessageInfo

func (m *S2F_AddBlock) GetUserId() int32 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *S2F_AddBlock) GetTargetId() int32 {
	if m != nil {
		return m.TargetId
	}
	return 0
}

// 从屏蔽列表删除
type S2F_DelBlock struct {
	UserId               int32    `protobuf:"varint,1,opt,name=userId,proto3" json:"userId,omitempty"`
	TargetId             int32    `protobuf:"varint,2,opt,name=targetId,proto3" json:"targetId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *S2F_DelBlock) Reset()         { *m = S2F_DelBlock{} }
func (m *S2F_DelBlock) String() string { return proto.CompactTextString(m) }
func (*S2F_DelBlock) ProtoMessage()    {}
func (*S2F_DelBlock) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1680e55bbb2433d, []int{14}
}
func (m *S2F_DelBlock) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *S2F_DelBlock) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_S2F_DelBlock.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *S2F_DelBlock) XXX_Merge(src proto.Message) {
	xxx_messageInfo_S2F_DelBlock.Merge(m, src)
}
func (m *S2F_DelBlock) XXX_Size() int {
	return m.Size()
}
func (m *S2F_DelBlock) XXX_DiscardUnknown() {
	xxx_messageInfo_S2F_DelBlock.DiscardUnknown(m)
}

var xxx_messageInfo_S2F_DelBlock proto.InternalMessageInfo

func (m *S2F_DelBlock) GetUserId() int32 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *S2F_DelBlock) GetTargetId() int32 {
	if m != nil {
		return m.TargetId
	}
	return 0
}

// 聊天
type S2F_ChannelSpeak struct {
	UserId               int32         `protobuf:"varint,1,opt,name=userId,proto3" json:"userId,omitempty"`
	NickName             string        `protobuf:"bytes,2,opt,name=nickName,proto3" json:"nickName,omitempty"`
	Msg                  string        `protobuf:"bytes,3,opt,name=msg,proto3" json:"msg,omitempty"`
	SpeakChannel         ESpeakChannel `protobuf:"varint,4,opt,name=speakChannel,proto3,enum=protocol.ESpeakChannel" json:"speakChannel,omitempty"`
	Receiver             int32         `protobuf:"varint,5,opt,name=receiver,proto3" json:"receiver,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *S2F_ChannelSpeak) Reset()         { *m = S2F_ChannelSpeak{} }
func (m *S2F_ChannelSpeak) String() string { return proto.CompactTextString(m) }
func (*S2F_ChannelSpeak) ProtoMessage()    {}
func (*S2F_ChannelSpeak) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1680e55bbb2433d, []int{15}
}
func (m *S2F_ChannelSpeak) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *S2F_ChannelSpeak) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_S2F_ChannelSpeak.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *S2F_ChannelSpeak) XXX_Merge(src proto.Message) {
	xxx_messageInfo_S2F_ChannelSpeak.Merge(m, src)
}
func (m *S2F_ChannelSpeak) XXX_Size() int {
	return m.Size()
}
func (m *S2F_ChannelSpeak) XXX_DiscardUnknown() {
	xxx_messageInfo_S2F_ChannelSpeak.DiscardUnknown(m)
}

var xxx_messageInfo_S2F_ChannelSpeak proto.InternalMessageInfo

func (m *S2F_ChannelSpeak) GetUserId() int32 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *S2F_ChannelSpeak) GetNickName() string {
	if m != nil {
		return m.NickName
	}
	return ""
}

func (m *S2F_ChannelSpeak) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

func (m *S2F_ChannelSpeak) GetSpeakChannel() ESpeakChannel {
	if m != nil {
		return m.SpeakChannel
	}
	return ESpeakChannel_ESpeakChannel_None
}

func (m *S2F_ChannelSpeak) GetReceiver() int32 {
	if m != nil {
		return m.Receiver
	}
	return 0
}

// 服务器发送广播消息
type F2C_ChannelSpeak struct {
	UserId               int32         `protobuf:"varint,1,opt,name=userId,proto3" json:"userId,omitempty"`
	NickName             string        `protobuf:"bytes,2,opt,name=nickName,proto3" json:"nickName,omitempty"`
	Msg                  string        `protobuf:"bytes,3,opt,name=msg,proto3" json:"msg,omitempty"`
	ReceiverId           int32         `protobuf:"varint,4,opt,name=receiverId,proto3" json:"receiverId,omitempty"`
	SpeakChannel         ESpeakChannel `protobuf:"varint,5,opt,name=speakChannel,proto3,enum=protocol.ESpeakChannel" json:"speakChannel,omitempty"`
	FaceId               int32         `protobuf:"varint,6,opt,name=faceId,proto3" json:"faceId,omitempty"`
	FrameId              int32         `protobuf:"varint,7,opt,name=frameId,proto3" json:"frameId,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *F2C_ChannelSpeak) Reset()         { *m = F2C_ChannelSpeak{} }
func (m *F2C_ChannelSpeak) String() string { return proto.CompactTextString(m) }
func (*F2C_ChannelSpeak) ProtoMessage()    {}
func (*F2C_ChannelSpeak) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1680e55bbb2433d, []int{16}
}
func (m *F2C_ChannelSpeak) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *F2C_ChannelSpeak) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_F2C_ChannelSpeak.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *F2C_ChannelSpeak) XXX_Merge(src proto.Message) {
	xxx_messageInfo_F2C_ChannelSpeak.Merge(m, src)
}
func (m *F2C_ChannelSpeak) XXX_Size() int {
	return m.Size()
}
func (m *F2C_ChannelSpeak) XXX_DiscardUnknown() {
	xxx_messageInfo_F2C_ChannelSpeak.DiscardUnknown(m)
}

var xxx_messageInfo_F2C_ChannelSpeak proto.InternalMessageInfo

func (m *F2C_ChannelSpeak) GetUserId() int32 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *F2C_ChannelSpeak) GetNickName() string {
	if m != nil {
		return m.NickName
	}
	return ""
}

func (m *F2C_ChannelSpeak) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

func (m *F2C_ChannelSpeak) GetReceiverId() int32 {
	if m != nil {
		return m.ReceiverId
	}
	return 0
}

func (m *F2C_ChannelSpeak) GetSpeakChannel() ESpeakChannel {
	if m != nil {
		return m.SpeakChannel
	}
	return ESpeakChannel_ESpeakChannel_None
}

func (m *F2C_ChannelSpeak) GetFaceId() int32 {
	if m != nil {
		return m.FaceId
	}
	return 0
}

func (m *F2C_ChannelSpeak) GetFrameId() int32 {
	if m != nil {
		return m.FrameId
	}
	return 0
}

// 聊天
type C2F_ChannelSpeak struct {
	Msg                  string        `protobuf:"bytes,1,opt,name=msg,proto3" json:"msg,omitempty"`
	SpeakChannel         ESpeakChannel `protobuf:"varint,2,opt,name=speakChannel,proto3,enum=protocol.ESpeakChannel" json:"speakChannel,omitempty"`
	Receiver             int32         `protobuf:"varint,3,opt,name=receiver,proto3" json:"receiver,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *C2F_ChannelSpeak) Reset()         { *m = C2F_ChannelSpeak{} }
func (m *C2F_ChannelSpeak) String() string { return proto.CompactTextString(m) }
func (*C2F_ChannelSpeak) ProtoMessage()    {}
func (*C2F_ChannelSpeak) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1680e55bbb2433d, []int{17}
}
func (m *C2F_ChannelSpeak) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *C2F_ChannelSpeak) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_C2F_ChannelSpeak.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *C2F_ChannelSpeak) XXX_Merge(src proto.Message) {
	xxx_messageInfo_C2F_ChannelSpeak.Merge(m, src)
}
func (m *C2F_ChannelSpeak) XXX_Size() int {
	return m.Size()
}
func (m *C2F_ChannelSpeak) XXX_DiscardUnknown() {
	xxx_messageInfo_C2F_ChannelSpeak.DiscardUnknown(m)
}

var xxx_messageInfo_C2F_ChannelSpeak proto.InternalMessageInfo

func (m *C2F_ChannelSpeak) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

func (m *C2F_ChannelSpeak) GetSpeakChannel() ESpeakChannel {
	if m != nil {
		return m.SpeakChannel
	}
	return ESpeakChannel_ESpeakChannel_None
}

func (m *C2F_ChannelSpeak) GetReceiver() int32 {
	if m != nil {
		return m.Receiver
	}
	return 0
}

type F2C_ChannelSpeakResult struct {
	Result               *FailNotice `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *F2C_ChannelSpeakResult) Reset()         { *m = F2C_ChannelSpeakResult{} }
func (m *F2C_ChannelSpeakResult) String() string { return proto.CompactTextString(m) }
func (*F2C_ChannelSpeakResult) ProtoMessage()    {}
func (*F2C_ChannelSpeakResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1680e55bbb2433d, []int{18}
}
func (m *F2C_ChannelSpeakResult) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *F2C_ChannelSpeakResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_F2C_ChannelSpeakResult.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *F2C_ChannelSpeakResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_F2C_ChannelSpeakResult.Merge(m, src)
}
func (m *F2C_ChannelSpeakResult) XXX_Size() int {
	return m.Size()
}
func (m *F2C_ChannelSpeakResult) XXX_DiscardUnknown() {
	xxx_messageInfo_F2C_ChannelSpeakResult.DiscardUnknown(m)
}

var xxx_messageInfo_F2C_ChannelSpeakResult proto.InternalMessageInfo

func (m *F2C_ChannelSpeakResult) GetResult() *FailNotice {
	if m != nil {
		return m.Result
	}
	return nil
}

//------------------------------------系统公告--------------------------------
type A2S_SystemNotice struct {
	Id                   int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	BeginTime            int32    `protobuf:"varint,2,opt,name=beginTime,proto3" json:"beginTime,omitempty"`
	EndTime              int32    `protobuf:"varint,3,opt,name=endTime,proto3" json:"endTime,omitempty"`
	RepeatTimes          int32    `protobuf:"varint,4,opt,name=repeatTimes,proto3" json:"repeatTimes,omitempty"`
	Interval             int32    `protobuf:"varint,5,opt,name=interval,proto3" json:"interval,omitempty"`
	Msg                  string   `protobuf:"bytes,6,opt,name=msg,proto3" json:"msg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *A2S_SystemNotice) Reset()         { *m = A2S_SystemNotice{} }
func (m *A2S_SystemNotice) String() string { return proto.CompactTextString(m) }
func (*A2S_SystemNotice) ProtoMessage()    {}
func (*A2S_SystemNotice) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1680e55bbb2433d, []int{19}
}
func (m *A2S_SystemNotice) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *A2S_SystemNotice) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_A2S_SystemNotice.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *A2S_SystemNotice) XXX_Merge(src proto.Message) {
	xxx_messageInfo_A2S_SystemNotice.Merge(m, src)
}
func (m *A2S_SystemNotice) XXX_Size() int {
	return m.Size()
}
func (m *A2S_SystemNotice) XXX_DiscardUnknown() {
	xxx_messageInfo_A2S_SystemNotice.DiscardUnknown(m)
}

var xxx_messageInfo_A2S_SystemNotice proto.InternalMessageInfo

func (m *A2S_SystemNotice) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *A2S_SystemNotice) GetBeginTime() int32 {
	if m != nil {
		return m.BeginTime
	}
	return 0
}

func (m *A2S_SystemNotice) GetEndTime() int32 {
	if m != nil {
		return m.EndTime
	}
	return 0
}

func (m *A2S_SystemNotice) GetRepeatTimes() int32 {
	if m != nil {
		return m.RepeatTimes
	}
	return 0
}

func (m *A2S_SystemNotice) GetInterval() int32 {
	if m != nil {
		return m.Interval
	}
	return 0
}

func (m *A2S_SystemNotice) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

//------------------------------------进出场景--------------------------------
type S2F_EnterScene struct {
	UserId               int32    `protobuf:"varint,1,opt,name=userId,proto3" json:"userId,omitempty"`
	SceneId              int64    `protobuf:"varint,2,opt,name=sceneId,proto3" json:"sceneId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *S2F_EnterScene) Reset()         { *m = S2F_EnterScene{} }
func (m *S2F_EnterScene) String() string { return proto.CompactTextString(m) }
func (*S2F_EnterScene) ProtoMessage()    {}
func (*S2F_EnterScene) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1680e55bbb2433d, []int{20}
}
func (m *S2F_EnterScene) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *S2F_EnterScene) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_S2F_EnterScene.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *S2F_EnterScene) XXX_Merge(src proto.Message) {
	xxx_messageInfo_S2F_EnterScene.Merge(m, src)
}
func (m *S2F_EnterScene) XXX_Size() int {
	return m.Size()
}
func (m *S2F_EnterScene) XXX_DiscardUnknown() {
	xxx_messageInfo_S2F_EnterScene.DiscardUnknown(m)
}

var xxx_messageInfo_S2F_EnterScene proto.InternalMessageInfo

func (m *S2F_EnterScene) GetUserId() int32 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *S2F_EnterScene) GetSceneId() int64 {
	if m != nil {
		return m.SceneId
	}
	return 0
}

//-------------------------------------用户信息---------------------------
type XUser struct {
	UserId               int32    `protobuf:"varint,1,opt,name=userId,proto3" json:"userId,omitempty"`
	OpenId               string   `protobuf:"bytes,2,opt,name=openId,proto3" json:"openId,omitempty"`
	PhoneNo              string   `protobuf:"bytes,3,opt,name=phoneNo,proto3" json:"phoneNo,omitempty"`
	NickName             string   `protobuf:"bytes,4,opt,name=nickName,proto3" json:"nickName,omitempty"`
	Level                int32    `protobuf:"varint,5,opt,name=level,proto3" json:"level,omitempty"`
	Exp                  int32    `protobuf:"varint,6,opt,name=exp,proto3" json:"exp,omitempty"`
	FaceId               int32    `protobuf:"varint,7,opt,name=faceId,proto3" json:"faceId,omitempty"`
	FaceFrameId          int32    `protobuf:"varint,8,opt,name=faceFrameId,proto3" json:"faceFrameId,omitempty"`
	Energy               int32    `protobuf:"varint,9,opt,name=energy,proto3" json:"energy,omitempty"`
	Charm                int32    `protobuf:"varint,10,opt,name=charm,proto3" json:"charm,omitempty"`
	Shell                int32    `protobuf:"varint,11,opt,name=shell,proto3" json:"shell,omitempty"`
	Pearl                int32    `protobuf:"varint,12,opt,name=pearl,proto3" json:"pearl,omitempty"`
	PearlBind            int32    `protobuf:"varint,13,opt,name=pearlBind,proto3" json:"pearlBind,omitempty"`
	GameId               int32    `protobuf:"varint,14,opt,name=gameId,proto3" json:"gameId,omitempty"`
	IDCard               string   `protobuf:"bytes,15,opt,name=IDCard,proto3" json:"IDCard,omitempty"`
	RealName             string   `protobuf:"bytes,16,opt,name=realName,proto3" json:"realName,omitempty"`
	ActivePointDaily     int32    `protobuf:"varint,17,opt,name=activePointDaily,proto3" json:"activePointDaily,omitempty"`
	ActivePointWeek      int32    `protobuf:"varint,18,opt,name=activePointWeek,proto3" json:"activePointWeek,omitempty"`
	BanTalk              int32    `protobuf:"varint,19,opt,name=banTalk,proto3" json:"banTalk,omitempty"`
	LastChangeNameTime   int32    `protobuf:"varint,20,opt,name=LastChangeNameTime,proto3" json:"LastChangeNameTime,omitempty"`
	SyntheticList        []int32  `protobuf:"varint,21,rep,packed,name=syntheticList,proto3" json:"syntheticList,omitempty"`
	ClothesList          []int32  `protobuf:"varint,22,rep,packed,name=clothesList,proto3" json:"clothesList,omitempty"`
	WearingClothesId     int32    `protobuf:"varint,23,opt,name=wearingClothesId,proto3" json:"wearingClothesId,omitempty"`
	BulletinBoardId      int32    `protobuf:"varint,24,opt,name=bulletinBoardId,proto3" json:"bulletinBoardId,omitempty"`
	PayTotal             int32    `protobuf:"varint,25,opt,name=PayTotal,proto3" json:"PayTotal,omitempty"`
	AlreadyRegistered    bool     `protobuf:"varint,26,opt,name=alreadyRegistered,proto3" json:"alreadyRegistered,omitempty"`
	ManorName            string   `protobuf:"bytes,41,opt,name=manorName,proto3" json:"manorName,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *XUser) Reset()         { *m = XUser{} }
func (m *XUser) String() string { return proto.CompactTextString(m) }
func (*XUser) ProtoMessage()    {}
func (*XUser) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1680e55bbb2433d, []int{21}
}
func (m *XUser) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *XUser) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_XUser.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *XUser) XXX_Merge(src proto.Message) {
	xxx_messageInfo_XUser.Merge(m, src)
}
func (m *XUser) XXX_Size() int {
	return m.Size()
}
func (m *XUser) XXX_DiscardUnknown() {
	xxx_messageInfo_XUser.DiscardUnknown(m)
}

var xxx_messageInfo_XUser proto.InternalMessageInfo

func (m *XUser) GetUserId() int32 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *XUser) GetOpenId() string {
	if m != nil {
		return m.OpenId
	}
	return ""
}

func (m *XUser) GetPhoneNo() string {
	if m != nil {
		return m.PhoneNo
	}
	return ""
}

func (m *XUser) GetNickName() string {
	if m != nil {
		return m.NickName
	}
	return ""
}

func (m *XUser) GetLevel() int32 {
	if m != nil {
		return m.Level
	}
	return 0
}

func (m *XUser) GetExp() int32 {
	if m != nil {
		return m.Exp
	}
	return 0
}

func (m *XUser) GetFaceId() int32 {
	if m != nil {
		return m.FaceId
	}
	return 0
}

func (m *XUser) GetFaceFrameId() int32 {
	if m != nil {
		return m.FaceFrameId
	}
	return 0
}

func (m *XUser) GetEnergy() int32 {
	if m != nil {
		return m.Energy
	}
	return 0
}

func (m *XUser) GetCharm() int32 {
	if m != nil {
		return m.Charm
	}
	return 0
}

func (m *XUser) GetShell() int32 {
	if m != nil {
		return m.Shell
	}
	return 0
}

func (m *XUser) GetPearl() int32 {
	if m != nil {
		return m.Pearl
	}
	return 0
}

func (m *XUser) GetPearlBind() int32 {
	if m != nil {
		return m.PearlBind
	}
	return 0
}

func (m *XUser) GetGameId() int32 {
	if m != nil {
		return m.GameId
	}
	return 0
}

func (m *XUser) GetIDCard() string {
	if m != nil {
		return m.IDCard
	}
	return ""
}

func (m *XUser) GetRealName() string {
	if m != nil {
		return m.RealName
	}
	return ""
}

func (m *XUser) GetActivePointDaily() int32 {
	if m != nil {
		return m.ActivePointDaily
	}
	return 0
}

func (m *XUser) GetActivePointWeek() int32 {
	if m != nil {
		return m.ActivePointWeek
	}
	return 0
}

func (m *XUser) GetBanTalk() int32 {
	if m != nil {
		return m.BanTalk
	}
	return 0
}

func (m *XUser) GetLastChangeNameTime() int32 {
	if m != nil {
		return m.LastChangeNameTime
	}
	return 0
}

func (m *XUser) GetSyntheticList() []int32 {
	if m != nil {
		return m.SyntheticList
	}
	return nil
}

func (m *XUser) GetClothesList() []int32 {
	if m != nil {
		return m.ClothesList
	}
	return nil
}

func (m *XUser) GetWearingClothesId() int32 {
	if m != nil {
		return m.WearingClothesId
	}
	return 0
}

func (m *XUser) GetBulletinBoardId() int32 {
	if m != nil {
		return m.BulletinBoardId
	}
	return 0
}

func (m *XUser) GetPayTotal() int32 {
	if m != nil {
		return m.PayTotal
	}
	return 0
}

func (m *XUser) GetAlreadyRegistered() bool {
	if m != nil {
		return m.AlreadyRegistered
	}
	return false
}

func (m *XUser) GetManorName() string {
	if m != nil {
		return m.ManorName
	}
	return ""
}

//---------------------------------------登录-------------------------------
//游戏服务器登录申请,  客户端的方式是发openId，  然后是machineId ,  注意如果发送了machineId，那么openId会被忽略
type C2S_GuestLogin struct {
	MachineId            string   `protobuf:"bytes,1,opt,name=machineId,proto3" json:"machineId,omitempty"`
	OpenId               string   `protobuf:"bytes,2,opt,name=openId,proto3" json:"openId,omitempty"`
	UserId               int32    `protobuf:"varint,3,opt,name=userId,proto3" json:"userId,omitempty"`
	Password             string   `protobuf:"bytes,4,opt,name=password,proto3" json:"password,omitempty"`
	IpAddr               string   `protobuf:"bytes,5,opt,name=ipAddr,proto3" json:"ipAddr,omitempty"`
	Channel              int32    `protobuf:"varint,6,opt,name=channel,proto3" json:"channel,omitempty"`
	DeviceType           string   `protobuf:"bytes,7,opt,name=deviceType,proto3" json:"deviceType,omitempty"`
	GameId               int32    `protobuf:"varint,8,opt,name=gameId,proto3" json:"gameId,omitempty"`
	MainVer              int32    `protobuf:"varint,9,opt,name=mainVer,proto3" json:"mainVer,omitempty"`
	EvaluationVer        int32    `protobuf:"varint,10,opt,name=evaluationVer,proto3" json:"evaluationVer,omitempty"`
	HotfixVer            int32    `protobuf:"varint,11,opt,name=hotfixVer,proto3" json:"hotfixVer,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *C2S_GuestLogin) Reset()         { *m = C2S_GuestLogin{} }
func (m *C2S_GuestLogin) String() string { return proto.CompactTextString(m) }
func (*C2S_GuestLogin) ProtoMessage()    {}
func (*C2S_GuestLogin) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1680e55bbb2433d, []int{22}
}
func (m *C2S_GuestLogin) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *C2S_GuestLogin) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_C2S_GuestLogin.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *C2S_GuestLogin) XXX_Merge(src proto.Message) {
	xxx_messageInfo_C2S_GuestLogin.Merge(m, src)
}
func (m *C2S_GuestLogin) XXX_Size() int {
	return m.Size()
}
func (m *C2S_GuestLogin) XXX_DiscardUnknown() {
	xxx_messageInfo_C2S_GuestLogin.DiscardUnknown(m)
}

var xxx_messageInfo_C2S_GuestLogin proto.InternalMessageInfo

func (m *C2S_GuestLogin) GetMachineId() string {
	if m != nil {
		return m.MachineId
	}
	return ""
}

func (m *C2S_GuestLogin) GetOpenId() string {
	if m != nil {
		return m.OpenId
	}
	return ""
}

func (m *C2S_GuestLogin) GetUserId() int32 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *C2S_GuestLogin) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

func (m *C2S_GuestLogin) GetIpAddr() string {
	if m != nil {
		return m.IpAddr
	}
	return ""
}

func (m *C2S_GuestLogin) GetChannel() int32 {
	if m != nil {
		return m.Channel
	}
	return 0
}

func (m *C2S_GuestLogin) GetDeviceType() string {
	if m != nil {
		return m.DeviceType
	}
	return ""
}

func (m *C2S_GuestLogin) GetGameId() int32 {
	if m != nil {
		return m.GameId
	}
	return 0
}

func (m *C2S_GuestLogin) GetMainVer() int32 {
	if m != nil {
		return m.MainVer
	}
	return 0
}

func (m *C2S_GuestLogin) GetEvaluationVer() int32 {
	if m != nil {
		return m.EvaluationVer
	}
	return 0
}

func (m *C2S_GuestLogin) GetHotfixVer() int32 {
	if m != nil {
		return m.HotfixVer
	}
	return 0
}

// 登出
type C2S_GameLogout struct {
	UserId               int32    `protobuf:"varint,1,opt,name=userId,proto3" json:"userId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *C2S_GameLogout) Reset()         { *m = C2S_GameLogout{} }
func (m *C2S_GameLogout) String() string { return proto.CompactTextString(m) }
func (*C2S_GameLogout) ProtoMessage()    {}
func (*C2S_GameLogout) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1680e55bbb2433d, []int{23}
}
func (m *C2S_GameLogout) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *C2S_GameLogout) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_C2S_GameLogout.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *C2S_GameLogout) XXX_Merge(src proto.Message) {
	xxx_messageInfo_C2S_GameLogout.Merge(m, src)
}
func (m *C2S_GameLogout) XXX_Size() int {
	return m.Size()
}
func (m *C2S_GameLogout) XXX_DiscardUnknown() {
	xxx_messageInfo_C2S_GameLogout.DiscardUnknown(m)
}

var xxx_messageInfo_C2S_GameLogout proto.InternalMessageInfo

func (m *C2S_GameLogout) GetUserId() int32 {
	if m != nil {
		return m.UserId
	}
	return 0
}

// 客户端请求注册
type C2S_Register struct {
	ClothesId            int32    `protobuf:"varint,1,opt,name=clothesId,proto3" json:"clothesId,omitempty"`
	NickName             string   `protobuf:"bytes,2,opt,name=nickName,proto3" json:"nickName,omitempty"`
	ManorName            string   `protobuf:"bytes,3,opt,name=manorName,proto3" json:"manorName,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *C2S_Register) Reset()         { *m = C2S_Register{} }
func (m *C2S_Register) String() string { return proto.CompactTextString(m) }
func (*C2S_Register) ProtoMessage()    {}
func (*C2S_Register) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1680e55bbb2433d, []int{24}
}
func (m *C2S_Register) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *C2S_Register) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_C2S_Register.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *C2S_Register) XXX_Merge(src proto.Message) {
	xxx_messageInfo_C2S_Register.Merge(m, src)
}
func (m *C2S_Register) XXX_Size() int {
	return m.Size()
}
func (m *C2S_Register) XXX_DiscardUnknown() {
	xxx_messageInfo_C2S_Register.DiscardUnknown(m)
}

var xxx_messageInfo_C2S_Register proto.InternalMessageInfo

func (m *C2S_Register) GetClothesId() int32 {
	if m != nil {
		return m.ClothesId
	}
	return 0
}

func (m *C2S_Register) GetNickName() string {
	if m != nil {
		return m.NickName
	}
	return ""
}

func (m *C2S_Register) GetManorName() string {
	if m != nil {
		return m.ManorName
	}
	return ""
}

// 服务端相应注册结果
type S2C_Register struct {
	Ret                  *OperationResult `protobuf:"bytes,1,opt,name=ret,proto3" json:"ret,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *S2C_Register) Reset()         { *m = S2C_Register{} }
func (m *S2C_Register) String() string { return proto.CompactTextString(m) }
func (*S2C_Register) ProtoMessage()    {}
func (*S2C_Register) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1680e55bbb2433d, []int{25}
}
func (m *S2C_Register) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *S2C_Register) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_S2C_Register.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *S2C_Register) XXX_Merge(src proto.Message) {
	xxx_messageInfo_S2C_Register.Merge(m, src)
}
func (m *S2C_Register) XXX_Size() int {
	return m.Size()
}
func (m *S2C_Register) XXX_DiscardUnknown() {
	xxx_messageInfo_S2C_Register.DiscardUnknown(m)
}

var xxx_messageInfo_S2C_Register proto.InternalMessageInfo

func (m *S2C_Register) GetRet() *OperationResult {
	if m != nil {
		return m.Ret
	}
	return nil
}

type C2S_String struct {
	Str                  string   `protobuf:"bytes,1,opt,name=str,proto3" json:"str,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *C2S_String) Reset()         { *m = C2S_String{} }
func (m *C2S_String) String() string { return proto.CompactTextString(m) }
func (*C2S_String) ProtoMessage()    {}
func (*C2S_String) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1680e55bbb2433d, []int{26}
}
func (m *C2S_String) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *C2S_String) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_C2S_String.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *C2S_String) XXX_Merge(src proto.Message) {
	xxx_messageInfo_C2S_String.Merge(m, src)
}
func (m *C2S_String) XXX_Size() int {
	return m.Size()
}
func (m *C2S_String) XXX_DiscardUnknown() {
	xxx_messageInfo_C2S_String.DiscardUnknown(m)
}

var xxx_messageInfo_C2S_String proto.InternalMessageInfo

func (m *C2S_String) GetStr() string {
	if m != nil {
		return m.Str
	}
	return ""
}

type C2SInt32 struct {
	Data                 int32    `protobuf:"varint,1,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *C2SInt32) Reset()         { *m = C2SInt32{} }
func (m *C2SInt32) String() string { return proto.CompactTextString(m) }
func (*C2SInt32) ProtoMessage()    {}
func (*C2SInt32) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1680e55bbb2433d, []int{27}
}
func (m *C2SInt32) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *C2SInt32) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_C2SInt32.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *C2SInt32) XXX_Merge(src proto.Message) {
	xxx_messageInfo_C2SInt32.Merge(m, src)
}
func (m *C2SInt32) XXX_Size() int {
	return m.Size()
}
func (m *C2SInt32) XXX_DiscardUnknown() {
	xxx_messageInfo_C2SInt32.DiscardUnknown(m)
}

var xxx_messageInfo_C2SInt32 proto.InternalMessageInfo

func (m *C2SInt32) GetData() int32 {
	if m != nil {
		return m.Data
	}
	return 0
}

// 空消息
type C2S_Empty struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *C2S_Empty) Reset()         { *m = C2S_Empty{} }
func (m *C2S_Empty) String() string { return proto.CompactTextString(m) }
func (*C2S_Empty) ProtoMessage()    {}
func (*C2S_Empty) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1680e55bbb2433d, []int{28}
}
func (m *C2S_Empty) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *C2S_Empty) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_C2S_Empty.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *C2S_Empty) XXX_Merge(src proto.Message) {
	xxx_messageInfo_C2S_Empty.Merge(m, src)
}
func (m *C2S_Empty) XXX_Size() int {
	return m.Size()
}
func (m *C2S_Empty) XXX_DiscardUnknown() {
	xxx_messageInfo_C2S_Empty.DiscardUnknown(m)
}

var xxx_messageInfo_C2S_Empty proto.InternalMessageInfo

//错误文本提示
type FailNotice struct {
	FailCode             int32    `protobuf:"varint,1,opt,name=failCode,proto3" json:"failCode,omitempty"`
	Param                []string `protobuf:"bytes,2,rep,name=param,proto3" json:"param,omitempty"`
	FailMsg              string   `protobuf:"bytes,3,opt,name=failMsg,proto3" json:"failMsg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FailNotice) Reset()         { *m = FailNotice{} }
func (m *FailNotice) String() string { return proto.CompactTextString(m) }
func (*FailNotice) ProtoMessage()    {}
func (*FailNotice) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1680e55bbb2433d, []int{29}
}
func (m *FailNotice) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *FailNotice) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_FailNotice.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *FailNotice) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FailNotice.Merge(m, src)
}
func (m *FailNotice) XXX_Size() int {
	return m.Size()
}
func (m *FailNotice) XXX_DiscardUnknown() {
	xxx_messageInfo_FailNotice.DiscardUnknown(m)
}

var xxx_messageInfo_FailNotice proto.InternalMessageInfo

func (m *FailNotice) GetFailCode() int32 {
	if m != nil {
		return m.FailCode
	}
	return 0
}

func (m *FailNotice) GetParam() []string {
	if m != nil {
		return m.Param
	}
	return nil
}

func (m *FailNotice) GetFailMsg() string {
	if m != nil {
		return m.FailMsg
	}
	return ""
}

//通用操作结果
type OperationResult struct {
	IsSuccess            bool           `protobuf:"varint,1,opt,name=isSuccess,proto3" json:"isSuccess,omitempty"`
	ErrCode              Enum_ErrorCode `protobuf:"varint,2,opt,name=errCode,proto3,enum=protocol.Enum_ErrorCode" json:"errCode,omitempty"`
	Msg                  *FailNotice    `protobuf:"bytes,3,opt,name=msg,proto3" json:"msg,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *OperationResult) Reset()         { *m = OperationResult{} }
func (m *OperationResult) String() string { return proto.CompactTextString(m) }
func (*OperationResult) ProtoMessage()    {}
func (*OperationResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1680e55bbb2433d, []int{30}
}
func (m *OperationResult) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *OperationResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_OperationResult.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *OperationResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OperationResult.Merge(m, src)
}
func (m *OperationResult) XXX_Size() int {
	return m.Size()
}
func (m *OperationResult) XXX_DiscardUnknown() {
	xxx_messageInfo_OperationResult.DiscardUnknown(m)
}

var xxx_messageInfo_OperationResult proto.InternalMessageInfo

func (m *OperationResult) GetIsSuccess() bool {
	if m != nil {
		return m.IsSuccess
	}
	return false
}

func (m *OperationResult) GetErrCode() Enum_ErrorCode {
	if m != nil {
		return m.ErrCode
	}
	return Enum_ErrorCode_NoUse
}

func (m *OperationResult) GetMsg() *FailNotice {
	if m != nil {
		return m.Msg
	}
	return nil
}

// -------------------------------------------道具-----------------------------------------------
type XItem struct {
	Uuid                 int32    `protobuf:"varint,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	ItemId               int32    `protobuf:"varint,2,opt,name=itemId,proto3" json:"itemId,omitempty"`
	No                   int32    `protobuf:"varint,3,opt,name=no,proto3" json:"no,omitempty"`
	Extra                string   `protobuf:"bytes,4,opt,name=extra,proto3" json:"extra,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *XItem) Reset()         { *m = XItem{} }
func (m *XItem) String() string { return proto.CompactTextString(m) }
func (*XItem) ProtoMessage()    {}
func (*XItem) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1680e55bbb2433d, []int{31}
}
func (m *XItem) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *XItem) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_XItem.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *XItem) XXX_Merge(src proto.Message) {
	xxx_messageInfo_XItem.Merge(m, src)
}
func (m *XItem) XXX_Size() int {
	return m.Size()
}
func (m *XItem) XXX_DiscardUnknown() {
	xxx_messageInfo_XItem.DiscardUnknown(m)
}

var xxx_messageInfo_XItem proto.InternalMessageInfo

func (m *XItem) GetUuid() int32 {
	if m != nil {
		return m.Uuid
	}
	return 0
}

func (m *XItem) GetItemId() int32 {
	if m != nil {
		return m.ItemId
	}
	return 0
}

func (m *XItem) GetNo() int32 {
	if m != nil {
		return m.No
	}
	return 0
}

func (m *XItem) GetExtra() string {
	if m != nil {
		return m.Extra
	}
	return ""
}

type FurnitureItem struct {
	ItemId               int32    `protobuf:"varint,1,opt,name=itemId,proto3" json:"itemId,omitempty"`
	No                   int32    `protobuf:"varint,2,opt,name=no,proto3" json:"no,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FurnitureItem) Reset()         { *m = FurnitureItem{} }
func (m *FurnitureItem) String() string { return proto.CompactTextString(m) }
func (*FurnitureItem) ProtoMessage()    {}
func (*FurnitureItem) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1680e55bbb2433d, []int{32}
}
func (m *FurnitureItem) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *FurnitureItem) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_FurnitureItem.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *FurnitureItem) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FurnitureItem.Merge(m, src)
}
func (m *FurnitureItem) XXX_Size() int {
	return m.Size()
}
func (m *FurnitureItem) XXX_DiscardUnknown() {
	xxx_messageInfo_FurnitureItem.DiscardUnknown(m)
}

var xxx_messageInfo_FurnitureItem proto.InternalMessageInfo

func (m *FurnitureItem) GetItemId() int32 {
	if m != nil {
		return m.ItemId
	}
	return 0
}

func (m *FurnitureItem) GetNo() int32 {
	if m != nil {
		return m.No
	}
	return 0
}

//所有道具信息
type S2C_AllItemInfo struct {
	SlotCellNo           []int32          `protobuf:"varint,1,rep,packed,name=slotCellNo,proto3" json:"slotCellNo,omitempty"`
	Items                []*XItem         `protobuf:"bytes,2,rep,name=items,proto3" json:"items,omitempty"`
	Furniture            []*FurnitureItem `protobuf:"bytes,3,rep,name=furniture,proto3" json:"furniture,omitempty"`
	FloorList            []int32          `protobuf:"varint,4,rep,packed,name=floorList,proto3" json:"floorList,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *S2C_AllItemInfo) Reset()         { *m = S2C_AllItemInfo{} }
func (m *S2C_AllItemInfo) String() string { return proto.CompactTextString(m) }
func (*S2C_AllItemInfo) ProtoMessage()    {}
func (*S2C_AllItemInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1680e55bbb2433d, []int{33}
}
func (m *S2C_AllItemInfo) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *S2C_AllItemInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_S2C_AllItemInfo.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *S2C_AllItemInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_S2C_AllItemInfo.Merge(m, src)
}
func (m *S2C_AllItemInfo) XXX_Size() int {
	return m.Size()
}
func (m *S2C_AllItemInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_S2C_AllItemInfo.DiscardUnknown(m)
}

var xxx_messageInfo_S2C_AllItemInfo proto.InternalMessageInfo

func (m *S2C_AllItemInfo) GetSlotCellNo() []int32 {
	if m != nil {
		return m.SlotCellNo
	}
	return nil
}

func (m *S2C_AllItemInfo) GetItems() []*XItem {
	if m != nil {
		return m.Items
	}
	return nil
}

func (m *S2C_AllItemInfo) GetFurniture() []*FurnitureItem {
	if m != nil {
		return m.Furniture
	}
	return nil
}

func (m *S2C_AllItemInfo) GetFloorList() []int32 {
	if m != nil {
		return m.FloorList
	}
	return nil
}

// 使用道具
type C2S_UseItem struct {
	Item                 *XItem   `protobuf:"bytes,1,opt,name=item,proto3" json:"item,omitempty"`
	Param                string   `protobuf:"bytes,2,opt,name=param,proto3" json:"param,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *C2S_UseItem) Reset()         { *m = C2S_UseItem{} }
func (m *C2S_UseItem) String() string { return proto.CompactTextString(m) }
func (*C2S_UseItem) ProtoMessage()    {}
func (*C2S_UseItem) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1680e55bbb2433d, []int{34}
}
func (m *C2S_UseItem) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *C2S_UseItem) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_C2S_UseItem.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *C2S_UseItem) XXX_Merge(src proto.Message) {
	xxx_messageInfo_C2S_UseItem.Merge(m, src)
}
func (m *C2S_UseItem) XXX_Size() int {
	return m.Size()
}
func (m *C2S_UseItem) XXX_DiscardUnknown() {
	xxx_messageInfo_C2S_UseItem.DiscardUnknown(m)
}

var xxx_messageInfo_C2S_UseItem proto.InternalMessageInfo

func (m *C2S_UseItem) GetItem() *XItem {
	if m != nil {
		return m.Item
	}
	return nil
}

func (m *C2S_UseItem) GetParam() string {
	if m != nil {
		return m.Param
	}
	return ""
}

// 道具变动
type S2C_UpdateItem struct {
	Uuid                 int32    `protobuf:"varint,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	ItemId               int32    `protobuf:"varint,2,opt,name=itemId,proto3" json:"itemId,omitempty"`
	CurrentNumber        int32    `protobuf:"varint,3,opt,name=currentNumber,proto3" json:"currentNumber,omitempty"`
	OrigNumber           int32    `protobuf:"varint,4,opt,name=origNumber,proto3" json:"origNumber,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *S2C_UpdateItem) Reset()         { *m = S2C_UpdateItem{} }
func (m *S2C_UpdateItem) String() string { return proto.CompactTextString(m) }
func (*S2C_UpdateItem) ProtoMessage()    {}
func (*S2C_UpdateItem) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1680e55bbb2433d, []int{35}
}
func (m *S2C_UpdateItem) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *S2C_UpdateItem) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_S2C_UpdateItem.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *S2C_UpdateItem) XXX_Merge(src proto.Message) {
	xxx_messageInfo_S2C_UpdateItem.Merge(m, src)
}
func (m *S2C_UpdateItem) XXX_Size() int {
	return m.Size()
}
func (m *S2C_UpdateItem) XXX_DiscardUnknown() {
	xxx_messageInfo_S2C_UpdateItem.DiscardUnknown(m)
}

var xxx_messageInfo_S2C_UpdateItem proto.InternalMessageInfo

func (m *S2C_UpdateItem) GetUuid() int32 {
	if m != nil {
		return m.Uuid
	}
	return 0
}

func (m *S2C_UpdateItem) GetItemId() int32 {
	if m != nil {
		return m.ItemId
	}
	return 0
}

func (m *S2C_UpdateItem) GetCurrentNumber() int32 {
	if m != nil {
		return m.CurrentNumber
	}
	return 0
}

func (m *S2C_UpdateItem) GetOrigNumber() int32 {
	if m != nil {
		return m.OrigNumber
	}
	return 0
}

// 批量道具变动
type S2C_BatchUpdateItem struct {
	Items                []*S2C_UpdateItem `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	Reason               int32             `protobuf:"varint,2,opt,name=reason,proto3" json:"reason,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *S2C_BatchUpdateItem) Reset()         { *m = S2C_BatchUpdateItem{} }
func (m *S2C_BatchUpdateItem) String() string { return proto.CompactTextString(m) }
func (*S2C_BatchUpdateItem) ProtoMessage()    {}
func (*S2C_BatchUpdateItem) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1680e55bbb2433d, []int{36}
}
func (m *S2C_BatchUpdateItem) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *S2C_BatchUpdateItem) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_S2C_BatchUpdateItem.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *S2C_BatchUpdateItem) XXX_Merge(src proto.Message) {
	xxx_messageInfo_S2C_BatchUpdateItem.Merge(m, src)
}
func (m *S2C_BatchUpdateItem) XXX_Size() int {
	return m.Size()
}
func (m *S2C_BatchUpdateItem) XXX_DiscardUnknown() {
	xxx_messageInfo_S2C_BatchUpdateItem.DiscardUnknown(m)
}

var xxx_messageInfo_S2C_BatchUpdateItem proto.InternalMessageInfo

func (m *S2C_BatchUpdateItem) GetItems() []*S2C_UpdateItem {
	if m != nil {
		return m.Items
	}
	return nil
}

func (m *S2C_BatchUpdateItem) GetReason() int32 {
	if m != nil {
		return m.Reason
	}
	return 0
}

// 获取某一个道具信息
type C2S_GetItemInfo struct {
	Uuid                 int32    `protobuf:"varint,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	ItemId               int32    `protobuf:"varint,2,opt,name=itemId,proto3" json:"itemId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *C2S_GetItemInfo) Reset()         { *m = C2S_GetItemInfo{} }
func (m *C2S_GetItemInfo) String() string { return proto.CompactTextString(m) }
func (*C2S_GetItemInfo) ProtoMessage()    {}
func (*C2S_GetItemInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1680e55bbb2433d, []int{37}
}
func (m *C2S_GetItemInfo) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *C2S_GetItemInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_C2S_GetItemInfo.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *C2S_GetItemInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_C2S_GetItemInfo.Merge(m, src)
}
func (m *C2S_GetItemInfo) XXX_Size() int {
	return m.Size()
}
func (m *C2S_GetItemInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_C2S_GetItemInfo.DiscardUnknown(m)
}

var xxx_messageInfo_C2S_GetItemInfo proto.InternalMessageInfo

func (m *C2S_GetItemInfo) GetUuid() int32 {
	if m != nil {
		return m.Uuid
	}
	return 0
}

func (m *C2S_GetItemInfo) GetItemId() int32 {
	if m != nil {
		return m.ItemId
	}
	return 0
}

//下发某个道具的具体信息
type S2C_GetItemInfo struct {
	Item                 *XItem   `protobuf:"bytes,1,opt,name=item,proto3" json:"item,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *S2C_GetItemInfo) Reset()         { *m = S2C_GetItemInfo{} }
func (m *S2C_GetItemInfo) String() string { return proto.CompactTextString(m) }
func (*S2C_GetItemInfo) ProtoMessage()    {}
func (*S2C_GetItemInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1680e55bbb2433d, []int{38}
}
func (m *S2C_GetItemInfo) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *S2C_GetItemInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_S2C_GetItemInfo.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *S2C_GetItemInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_S2C_GetItemInfo.Merge(m, src)
}
func (m *S2C_GetItemInfo) XXX_Size() int {
	return m.Size()
}
func (m *S2C_GetItemInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_S2C_GetItemInfo.DiscardUnknown(m)
}

var xxx_messageInfo_S2C_GetItemInfo proto.InternalMessageInfo

func (m *S2C_GetItemInfo) GetItem() *XItem {
	if m != nil {
		return m.Item
	}
	return nil
}

//下发背包每个插槽的格子数量信息
type S2C_SlotLevels struct {
	SlotCellNo           []int32  `protobuf:"varint,1,rep,packed,name=slotCellNo,proto3" json:"slotCellNo,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *S2C_SlotLevels) Reset()         { *m = S2C_SlotLevels{} }
func (m *S2C_SlotLevels) String() string { return proto.CompactTextString(m) }
func (*S2C_SlotLevels) ProtoMessage()    {}
func (*S2C_SlotLevels) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1680e55bbb2433d, []int{39}
}
func (m *S2C_SlotLevels) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *S2C_SlotLevels) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_S2C_SlotLevels.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *S2C_SlotLevels) XXX_Merge(src proto.Message) {
	xxx_messageInfo_S2C_SlotLevels.Merge(m, src)
}
func (m *S2C_SlotLevels) XXX_Size() int {
	return m.Size()
}
func (m *S2C_SlotLevels) XXX_DiscardUnknown() {
	xxx_messageInfo_S2C_SlotLevels.DiscardUnknown(m)
}

var xxx_messageInfo_S2C_SlotLevels proto.InternalMessageInfo

func (m *S2C_SlotLevels) GetSlotCellNo() []int32 {
	if m != nil {
		return m.SlotCellNo
	}
	return nil
}

type S2C_BatchAddFurniture struct {
	Furniture            []*FurnitureItem `protobuf:"bytes,1,rep,name=furniture,proto3" json:"furniture,omitempty"`
	Reason               int32            `protobuf:"varint,2,opt,name=reason,proto3" json:"reason,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *S2C_BatchAddFurniture) Reset()         { *m = S2C_BatchAddFurniture{} }
func (m *S2C_BatchAddFurniture) String() string { return proto.CompactTextString(m) }
func (*S2C_BatchAddFurniture) ProtoMessage()    {}
func (*S2C_BatchAddFurniture) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1680e55bbb2433d, []int{40}
}
func (m *S2C_BatchAddFurniture) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *S2C_BatchAddFurniture) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_S2C_BatchAddFurniture.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *S2C_BatchAddFurniture) XXX_Merge(src proto.Message) {
	xxx_messageInfo_S2C_BatchAddFurniture.Merge(m, src)
}
func (m *S2C_BatchAddFurniture) XXX_Size() int {
	return m.Size()
}
func (m *S2C_BatchAddFurniture) XXX_DiscardUnknown() {
	xxx_messageInfo_S2C_BatchAddFurniture.DiscardUnknown(m)
}

var xxx_messageInfo_S2C_BatchAddFurniture proto.InternalMessageInfo

func (m *S2C_BatchAddFurniture) GetFurniture() []*FurnitureItem {
	if m != nil {
		return m.Furniture
	}
	return nil
}

func (m *S2C_BatchAddFurniture) GetReason() int32 {
	if m != nil {
		return m.Reason
	}
	return 0
}

//种植地块信息
type XPuzzleInfo struct {
	PuzzleId             int32    `protobuf:"varint,1,opt,name=puzzleId,proto3" json:"puzzleId,omitempty"`
	BeginTime            int32    `protobuf:"varint,2,opt,name=beginTime,proto3" json:"beginTime,omitempty"`
	ManureTimes          int32    `protobuf:"varint,3,opt,name=manureTimes,proto3" json:"manureTimes,omitempty"`
	GrawRate             int32    `protobuf:"varint,4,opt,name=grawRate,proto3" json:"grawRate,omitempty"`
	CollectedTimes       int32    `protobuf:"varint,5,opt,name=collectedTimes,proto3" json:"collectedTimes,omitempty"`
	SeedId               int32    `protobuf:"varint,6,opt,name=seedId,proto3" json:"seedId,omitempty"`
	PuzzleType           int32    `protobuf:"varint,7,opt,name=puzzleType,proto3" json:"puzzleType,omitempty"`
	NextStageTime        int32    `protobuf:"varint,8,opt,name=nextStageTime,proto3" json:"nextStageTime,omitempty"`
	Stage                int32    `protobuf:"varint,9,opt,name=stage,proto3" json:"stage,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *XPuzzleInfo) Reset()         { *m = XPuzzleInfo{} }
func (m *XPuzzleInfo) String() string { return proto.CompactTextString(m) }
func (*XPuzzleInfo) ProtoMessage()    {}
func (*XPuzzleInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1680e55bbb2433d, []int{41}
}
func (m *XPuzzleInfo) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *XPuzzleInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_XPuzzleInfo.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *XPuzzleInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_XPuzzleInfo.Merge(m, src)
}
func (m *XPuzzleInfo) XXX_Size() int {
	return m.Size()
}
func (m *XPuzzleInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_XPuzzleInfo.DiscardUnknown(m)
}

var xxx_messageInfo_XPuzzleInfo proto.InternalMessageInfo

func (m *XPuzzleInfo) GetPuzzleId() int32 {
	if m != nil {
		return m.PuzzleId
	}
	return 0
}

func (m *XPuzzleInfo) GetBeginTime() int32 {
	if m != nil {
		return m.BeginTime
	}
	return 0
}

func (m *XPuzzleInfo) GetManureTimes() int32 {
	if m != nil {
		return m.ManureTimes
	}
	return 0
}

func (m *XPuzzleInfo) GetGrawRate() int32 {
	if m != nil {
		return m.GrawRate
	}
	return 0
}

func (m *XPuzzleInfo) GetCollectedTimes() int32 {
	if m != nil {
		return m.CollectedTimes
	}
	return 0
}

func (m *XPuzzleInfo) GetSeedId() int32 {
	if m != nil {
		return m.SeedId
	}
	return 0
}

func (m *XPuzzleInfo) GetPuzzleType() int32 {
	if m != nil {
		return m.PuzzleType
	}
	return 0
}

func (m *XPuzzleInfo) GetNextStageTime() int32 {
	if m != nil {
		return m.NextStageTime
	}
	return 0
}

func (m *XPuzzleInfo) GetStage() int32 {
	if m != nil {
		return m.Stage
	}
	return 0
}

//-- 客户端请求农场信息
type C2S_Farm_GetFarmInfo struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *C2S_Farm_GetFarmInfo) Reset()         { *m = C2S_Farm_GetFarmInfo{} }
func (m *C2S_Farm_GetFarmInfo) String() string { return proto.CompactTextString(m) }
func (*C2S_Farm_GetFarmInfo) ProtoMessage()    {}
func (*C2S_Farm_GetFarmInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1680e55bbb2433d, []int{42}
}
func (m *C2S_Farm_GetFarmInfo) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *C2S_Farm_GetFarmInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_C2S_Farm_GetFarmInfo.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *C2S_Farm_GetFarmInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_C2S_Farm_GetFarmInfo.Merge(m, src)
}
func (m *C2S_Farm_GetFarmInfo) XXX_Size() int {
	return m.Size()
}
func (m *C2S_Farm_GetFarmInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_C2S_Farm_GetFarmInfo.DiscardUnknown(m)
}

var xxx_messageInfo_C2S_Farm_GetFarmInfo proto.InternalMessageInfo

//-- 服务器下发农场信息
type S2C_Farm_GetFarmInfo struct {
	AllPuzzle            []*XPuzzleInfo `protobuf:"bytes,1,rep,name=allPuzzle,proto3" json:"allPuzzle,omitempty"`
	EmptyPuzzleId        []int32        `protobuf:"varint,2,rep,packed,name=emptyPuzzleId,proto3" json:"emptyPuzzleId,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *S2C_Farm_GetFarmInfo) Reset()         { *m = S2C_Farm_GetFarmInfo{} }
func (m *S2C_Farm_GetFarmInfo) String() string { return proto.CompactTextString(m) }
func (*S2C_Farm_GetFarmInfo) ProtoMessage()    {}
func (*S2C_Farm_GetFarmInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1680e55bbb2433d, []int{43}
}
func (m *S2C_Farm_GetFarmInfo) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *S2C_Farm_GetFarmInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_S2C_Farm_GetFarmInfo.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *S2C_Farm_GetFarmInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_S2C_Farm_GetFarmInfo.Merge(m, src)
}
func (m *S2C_Farm_GetFarmInfo) XXX_Size() int {
	return m.Size()
}
func (m *S2C_Farm_GetFarmInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_S2C_Farm_GetFarmInfo.DiscardUnknown(m)
}

var xxx_messageInfo_S2C_Farm_GetFarmInfo proto.InternalMessageInfo

func (m *S2C_Farm_GetFarmInfo) GetAllPuzzle() []*XPuzzleInfo {
	if m != nil {
		return m.AllPuzzle
	}
	return nil
}

func (m *S2C_Farm_GetFarmInfo) GetEmptyPuzzleId() []int32 {
	if m != nil {
		return m.EmptyPuzzleId
	}
	return nil
}

//-- 客户端请求种植
type C2S_Farm_Plant struct {
	PuzzleId             int32    `protobuf:"varint,1,opt,name=puzzleId,proto3" json:"puzzleId,omitempty"`
	SeedId               int32    `protobuf:"varint,2,opt,name=seedId,proto3" json:"seedId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *C2S_Farm_Plant) Reset()         { *m = C2S_Farm_Plant{} }
func (m *C2S_Farm_Plant) String() string { return proto.CompactTextString(m) }
func (*C2S_Farm_Plant) ProtoMessage()    {}
func (*C2S_Farm_Plant) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1680e55bbb2433d, []int{44}
}
func (m *C2S_Farm_Plant) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *C2S_Farm_Plant) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_C2S_Farm_Plant.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *C2S_Farm_Plant) XXX_Merge(src proto.Message) {
	xxx_messageInfo_C2S_Farm_Plant.Merge(m, src)
}
func (m *C2S_Farm_Plant) XXX_Size() int {
	return m.Size()
}
func (m *C2S_Farm_Plant) XXX_DiscardUnknown() {
	xxx_messageInfo_C2S_Farm_Plant.DiscardUnknown(m)
}

var xxx_messageInfo_C2S_Farm_Plant proto.InternalMessageInfo

func (m *C2S_Farm_Plant) GetPuzzleId() int32 {
	if m != nil {
		return m.PuzzleId
	}
	return 0
}

func (m *C2S_Farm_Plant) GetSeedId() int32 {
	if m != nil {
		return m.SeedId
	}
	return 0
}

//-- 服务器回复种植请求
type S2C_Farm_Plant struct {
	Result               int32    `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
	PuzzleId             int32    `protobuf:"varint,2,opt,name=puzzleId,proto3" json:"puzzleId,omitempty"`
	ItemId               int32    `protobuf:"varint,3,opt,name=itemId,proto3" json:"itemId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *S2C_Farm_Plant) Reset()         { *m = S2C_Farm_Plant{} }
func (m *S2C_Farm_Plant) String() string { return proto.CompactTextString(m) }
func (*S2C_Farm_Plant) ProtoMessage()    {}
func (*S2C_Farm_Plant) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1680e55bbb2433d, []int{45}
}
func (m *S2C_Farm_Plant) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *S2C_Farm_Plant) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_S2C_Farm_Plant.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *S2C_Farm_Plant) XXX_Merge(src proto.Message) {
	xxx_messageInfo_S2C_Farm_Plant.Merge(m, src)
}
func (m *S2C_Farm_Plant) XXX_Size() int {
	return m.Size()
}
func (m *S2C_Farm_Plant) XXX_DiscardUnknown() {
	xxx_messageInfo_S2C_Farm_Plant.DiscardUnknown(m)
}

var xxx_messageInfo_S2C_Farm_Plant proto.InternalMessageInfo

func (m *S2C_Farm_Plant) GetResult() int32 {
	if m != nil {
		return m.Result
	}
	return 0
}

func (m *S2C_Farm_Plant) GetPuzzleId() int32 {
	if m != nil {
		return m.PuzzleId
	}
	return 0
}

func (m *S2C_Farm_Plant) GetItemId() int32 {
	if m != nil {
		return m.ItemId
	}
	return 0
}

//-- 客户端请求施肥
type C2S_Farm_Manure struct {
	PuzzleId             int32    `protobuf:"varint,1,opt,name=puzzleId,proto3" json:"puzzleId,omitempty"`
	FertilizerId         int32    `protobuf:"varint,2,opt,name=fertilizerId,proto3" json:"fertilizerId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *C2S_Farm_Manure) Reset()         { *m = C2S_Farm_Manure{} }
func (m *C2S_Farm_Manure) String() string { return proto.CompactTextString(m) }
func (*C2S_Farm_Manure) ProtoMessage()    {}
func (*C2S_Farm_Manure) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1680e55bbb2433d, []int{46}
}
func (m *C2S_Farm_Manure) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *C2S_Farm_Manure) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_C2S_Farm_Manure.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *C2S_Farm_Manure) XXX_Merge(src proto.Message) {
	xxx_messageInfo_C2S_Farm_Manure.Merge(m, src)
}
func (m *C2S_Farm_Manure) XXX_Size() int {
	return m.Size()
}
func (m *C2S_Farm_Manure) XXX_DiscardUnknown() {
	xxx_messageInfo_C2S_Farm_Manure.DiscardUnknown(m)
}

var xxx_messageInfo_C2S_Farm_Manure proto.InternalMessageInfo

func (m *C2S_Farm_Manure) GetPuzzleId() int32 {
	if m != nil {
		return m.PuzzleId
	}
	return 0
}

func (m *C2S_Farm_Manure) GetFertilizerId() int32 {
	if m != nil {
		return m.FertilizerId
	}
	return 0
}

//-- 服务器回复施肥请求
type S2C_Farm_Manure struct {
	Result               int32    `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
	PuzzleId             int32    `protobuf:"varint,2,opt,name=puzzleId,proto3" json:"puzzleId,omitempty"`
	ItemId               int32    `protobuf:"varint,3,opt,name=itemId,proto3" json:"itemId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *S2C_Farm_Manure) Reset()         { *m = S2C_Farm_Manure{} }
func (m *S2C_Farm_Manure) String() string { return proto.CompactTextString(m) }
func (*S2C_Farm_Manure) ProtoMessage()    {}
func (*S2C_Farm_Manure) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1680e55bbb2433d, []int{47}
}
func (m *S2C_Farm_Manure) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *S2C_Farm_Manure) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_S2C_Farm_Manure.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *S2C_Farm_Manure) XXX_Merge(src proto.Message) {
	xxx_messageInfo_S2C_Farm_Manure.Merge(m, src)
}
func (m *S2C_Farm_Manure) XXX_Size() int {
	return m.Size()
}
func (m *S2C_Farm_Manure) XXX_DiscardUnknown() {
	xxx_messageInfo_S2C_Farm_Manure.DiscardUnknown(m)
}

var xxx_messageInfo_S2C_Farm_Manure proto.InternalMessageInfo

func (m *S2C_Farm_Manure) GetResult() int32 {
	if m != nil {
		return m.Result
	}
	return 0
}

func (m *S2C_Farm_Manure) GetPuzzleId() int32 {
	if m != nil {
		return m.PuzzleId
	}
	return 0
}

func (m *S2C_Farm_Manure) GetItemId() int32 {
	if m != nil {
		return m.ItemId
	}
	return 0
}

//-- 服务器下发单个地块信息
type S2C_Farm_PuzzleInfo struct {
	Puzzle               *XPuzzleInfo `protobuf:"bytes,1,opt,name=puzzle,proto3" json:"puzzle,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *S2C_Farm_PuzzleInfo) Reset()         { *m = S2C_Farm_PuzzleInfo{} }
func (m *S2C_Farm_PuzzleInfo) String() string { return proto.CompactTextString(m) }
func (*S2C_Farm_PuzzleInfo) ProtoMessage()    {}
func (*S2C_Farm_PuzzleInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1680e55bbb2433d, []int{48}
}
func (m *S2C_Farm_PuzzleInfo) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *S2C_Farm_PuzzleInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_S2C_Farm_PuzzleInfo.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *S2C_Farm_PuzzleInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_S2C_Farm_PuzzleInfo.Merge(m, src)
}
func (m *S2C_Farm_PuzzleInfo) XXX_Size() int {
	return m.Size()
}
func (m *S2C_Farm_PuzzleInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_S2C_Farm_PuzzleInfo.DiscardUnknown(m)
}

var xxx_messageInfo_S2C_Farm_PuzzleInfo proto.InternalMessageInfo

func (m *S2C_Farm_PuzzleInfo) GetPuzzle() *XPuzzleInfo {
	if m != nil {
		return m.Puzzle
	}
	return nil
}

//-- 服务器下发地块状态变化
type S2C_Farm_SyncStatus struct {
	PuzzleId             int32    `protobuf:"varint,1,opt,name=puzzleId,proto3" json:"puzzleId,omitempty"`
	Status               int32    `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
	NextStageTime        int32    `protobuf:"varint,3,opt,name=nextStageTime,proto3" json:"nextStageTime,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *S2C_Farm_SyncStatus) Reset()         { *m = S2C_Farm_SyncStatus{} }
func (m *S2C_Farm_SyncStatus) String() string { return proto.CompactTextString(m) }
func (*S2C_Farm_SyncStatus) ProtoMessage()    {}
func (*S2C_Farm_SyncStatus) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1680e55bbb2433d, []int{49}
}
func (m *S2C_Farm_SyncStatus) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *S2C_Farm_SyncStatus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_S2C_Farm_SyncStatus.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *S2C_Farm_SyncStatus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_S2C_Farm_SyncStatus.Merge(m, src)
}
func (m *S2C_Farm_SyncStatus) XXX_Size() int {
	return m.Size()
}
func (m *S2C_Farm_SyncStatus) XXX_DiscardUnknown() {
	xxx_messageInfo_S2C_Farm_SyncStatus.DiscardUnknown(m)
}

var xxx_messageInfo_S2C_Farm_SyncStatus proto.InternalMessageInfo

func (m *S2C_Farm_SyncStatus) GetPuzzleId() int32 {
	if m != nil {
		return m.PuzzleId
	}
	return 0
}

func (m *S2C_Farm_SyncStatus) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *S2C_Farm_SyncStatus) GetNextStageTime() int32 {
	if m != nil {
		return m.NextStageTime
	}
	return 0
}

//-- 客户端请求解锁种植地块 养殖地块不能解锁
type C2S_Farm_UnlockPuzzle struct {
	PuzzleType           int32    `protobuf:"varint,1,opt,name=puzzleType,proto3" json:"puzzleType,omitempty"`
	PuzzleId             int32    `protobuf:"varint,2,opt,name=puzzleId,proto3" json:"puzzleId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *C2S_Farm_UnlockPuzzle) Reset()         { *m = C2S_Farm_UnlockPuzzle{} }
func (m *C2S_Farm_UnlockPuzzle) String() string { return proto.CompactTextString(m) }
func (*C2S_Farm_UnlockPuzzle) ProtoMessage()    {}
func (*C2S_Farm_UnlockPuzzle) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1680e55bbb2433d, []int{50}
}
func (m *C2S_Farm_UnlockPuzzle) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *C2S_Farm_UnlockPuzzle) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_C2S_Farm_UnlockPuzzle.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *C2S_Farm_UnlockPuzzle) XXX_Merge(src proto.Message) {
	xxx_messageInfo_C2S_Farm_UnlockPuzzle.Merge(m, src)
}
func (m *C2S_Farm_UnlockPuzzle) XXX_Size() int {
	return m.Size()
}
func (m *C2S_Farm_UnlockPuzzle) XXX_DiscardUnknown() {
	xxx_messageInfo_C2S_Farm_UnlockPuzzle.DiscardUnknown(m)
}

var xxx_messageInfo_C2S_Farm_UnlockPuzzle proto.InternalMessageInfo

func (m *C2S_Farm_UnlockPuzzle) GetPuzzleType() int32 {
	if m != nil {
		return m.PuzzleType
	}
	return 0
}

func (m *C2S_Farm_UnlockPuzzle) GetPuzzleId() int32 {
	if m != nil {
		return m.PuzzleId
	}
	return 0
}

//-- 服务器回复解锁地块请求
type S2C_Farm_UnlockPuzzle struct {
	Result               int32    `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
	PuzzleId             int32    `protobuf:"varint,2,opt,name=puzzleId,proto3" json:"puzzleId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *S2C_Farm_UnlockPuzzle) Reset()         { *m = S2C_Farm_UnlockPuzzle{} }
func (m *S2C_Farm_UnlockPuzzle) String() string { return proto.CompactTextString(m) }
func (*S2C_Farm_UnlockPuzzle) ProtoMessage()    {}
func (*S2C_Farm_UnlockPuzzle) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1680e55bbb2433d, []int{51}
}
func (m *S2C_Farm_UnlockPuzzle) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *S2C_Farm_UnlockPuzzle) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_S2C_Farm_UnlockPuzzle.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *S2C_Farm_UnlockPuzzle) XXX_Merge(src proto.Message) {
	xxx_messageInfo_S2C_Farm_UnlockPuzzle.Merge(m, src)
}
func (m *S2C_Farm_UnlockPuzzle) XXX_Size() int {
	return m.Size()
}
func (m *S2C_Farm_UnlockPuzzle) XXX_DiscardUnknown() {
	xxx_messageInfo_S2C_Farm_UnlockPuzzle.DiscardUnknown(m)
}

var xxx_messageInfo_S2C_Farm_UnlockPuzzle proto.InternalMessageInfo

func (m *S2C_Farm_UnlockPuzzle) GetResult() int32 {
	if m != nil {
		return m.Result
	}
	return 0
}

func (m *S2C_Farm_UnlockPuzzle) GetPuzzleId() int32 {
	if m != nil {
		return m.PuzzleId
	}
	return 0
}

//-- 客户端请求浇水
type C2S_Farm_Water struct {
	PuzzleId             int32    `protobuf:"varint,1,opt,name=puzzleId,proto3" json:"puzzleId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *C2S_Farm_Water) Reset()         { *m = C2S_Farm_Water{} }
func (m *C2S_Farm_Water) String() string { return proto.CompactTextString(m) }
func (*C2S_Farm_Water) ProtoMessage()    {}
func (*C2S_Farm_Water) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1680e55bbb2433d, []int{52}
}
func (m *C2S_Farm_Water) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *C2S_Farm_Water) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_C2S_Farm_Water.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *C2S_Farm_Water) XXX_Merge(src proto.Message) {
	xxx_messageInfo_C2S_Farm_Water.Merge(m, src)
}
func (m *C2S_Farm_Water) XXX_Size() int {
	return m.Size()
}
func (m *C2S_Farm_Water) XXX_DiscardUnknown() {
	xxx_messageInfo_C2S_Farm_Water.DiscardUnknown(m)
}

var xxx_messageInfo_C2S_Farm_Water proto.InternalMessageInfo

func (m *C2S_Farm_Water) GetPuzzleId() int32 {
	if m != nil {
		return m.PuzzleId
	}
	return 0
}

//-- 服务器回复浇水请求
type S2C_Farm_Water struct {
	Result               int32    `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
	PuzzleId             int32    `protobuf:"varint,2,opt,name=puzzleId,proto3" json:"puzzleId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *S2C_Farm_Water) Reset()         { *m = S2C_Farm_Water{} }
func (m *S2C_Farm_Water) String() string { return proto.CompactTextString(m) }
func (*S2C_Farm_Water) ProtoMessage()    {}
func (*S2C_Farm_Water) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1680e55bbb2433d, []int{53}
}
func (m *S2C_Farm_Water) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *S2C_Farm_Water) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_S2C_Farm_Water.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *S2C_Farm_Water) XXX_Merge(src proto.Message) {
	xxx_messageInfo_S2C_Farm_Water.Merge(m, src)
}
func (m *S2C_Farm_Water) XXX_Size() int {
	return m.Size()
}
func (m *S2C_Farm_Water) XXX_DiscardUnknown() {
	xxx_messageInfo_S2C_Farm_Water.DiscardUnknown(m)
}

var xxx_messageInfo_S2C_Farm_Water proto.InternalMessageInfo

func (m *S2C_Farm_Water) GetResult() int32 {
	if m != nil {
		return m.Result
	}
	return 0
}

func (m *S2C_Farm_Water) GetPuzzleId() int32 {
	if m != nil {
		return m.PuzzleId
	}
	return 0
}

//-- 客户端请求收割
type C2S_Farm_Reap struct {
	PuzzleId             int32    `protobuf:"varint,1,opt,name=puzzleId,proto3" json:"puzzleId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *C2S_Farm_Reap) Reset()         { *m = C2S_Farm_Reap{} }
func (m *C2S_Farm_Reap) String() string { return proto.CompactTextString(m) }
func (*C2S_Farm_Reap) ProtoMessage()    {}
func (*C2S_Farm_Reap) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1680e55bbb2433d, []int{54}
}
func (m *C2S_Farm_Reap) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *C2S_Farm_Reap) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_C2S_Farm_Reap.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *C2S_Farm_Reap) XXX_Merge(src proto.Message) {
	xxx_messageInfo_C2S_Farm_Reap.Merge(m, src)
}
func (m *C2S_Farm_Reap) XXX_Size() int {
	return m.Size()
}
func (m *C2S_Farm_Reap) XXX_DiscardUnknown() {
	xxx_messageInfo_C2S_Farm_Reap.DiscardUnknown(m)
}

var xxx_messageInfo_C2S_Farm_Reap proto.InternalMessageInfo

func (m *C2S_Farm_Reap) GetPuzzleId() int32 {
	if m != nil {
		return m.PuzzleId
	}
	return 0
}

//-- 服务器回复收割请求
type S2C_Farm_Reap struct {
	Result               int32    `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
	PuzzleId             int32    `protobuf:"varint,2,opt,name=puzzleId,proto3" json:"puzzleId,omitempty"`
	RewardId             int32    `protobuf:"varint,3,opt,name=rewardId,proto3" json:"rewardId,omitempty"`
	RewardCount          int32    `protobuf:"varint,4,opt,name=rewardCount,proto3" json:"rewardCount,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *S2C_Farm_Reap) Reset()         { *m = S2C_Farm_Reap{} }
func (m *S2C_Farm_Reap) String() string { return proto.CompactTextString(m) }
func (*S2C_Farm_Reap) ProtoMessage()    {}
func (*S2C_Farm_Reap) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1680e55bbb2433d, []int{55}
}
func (m *S2C_Farm_Reap) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *S2C_Farm_Reap) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_S2C_Farm_Reap.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *S2C_Farm_Reap) XXX_Merge(src proto.Message) {
	xxx_messageInfo_S2C_Farm_Reap.Merge(m, src)
}
func (m *S2C_Farm_Reap) XXX_Size() int {
	return m.Size()
}
func (m *S2C_Farm_Reap) XXX_DiscardUnknown() {
	xxx_messageInfo_S2C_Farm_Reap.DiscardUnknown(m)
}

var xxx_messageInfo_S2C_Farm_Reap proto.InternalMessageInfo

func (m *S2C_Farm_Reap) GetResult() int32 {
	if m != nil {
		return m.Result
	}
	return 0
}

func (m *S2C_Farm_Reap) GetPuzzleId() int32 {
	if m != nil {
		return m.PuzzleId
	}
	return 0
}

func (m *S2C_Farm_Reap) GetRewardId() int32 {
	if m != nil {
		return m.RewardId
	}
	return 0
}

func (m *S2C_Farm_Reap) GetRewardCount() int32 {
	if m != nil {
		return m.RewardCount
	}
	return 0
}

//种植地块信息
type XPlantPuzzleInfo struct {
	PuzzleId             int32    `protobuf:"varint,1,opt,name=puzzleId,proto3" json:"puzzleId,omitempty"`
	BeginTime            int64    `protobuf:"varint,2,opt,name=beginTime,proto3" json:"beginTime,omitempty"`
	CollectedTimes       int32    `protobuf:"varint,3,opt,name=collectedTimes,proto3" json:"collectedTimes,omitempty"`
	SeedId               int32    `protobuf:"varint,4,opt,name=seedId,proto3" json:"seedId,omitempty"`
	NextStageTime        int64    `protobuf:"varint,5,opt,name=nextStageTime,proto3" json:"nextStageTime,omitempty"`
	Stage                int32    `protobuf:"varint,6,opt,name=stage,proto3" json:"stage,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *XPlantPuzzleInfo) Reset()         { *m = XPlantPuzzleInfo{} }
func (m *XPlantPuzzleInfo) String() string { return proto.CompactTextString(m) }
func (*XPlantPuzzleInfo) ProtoMessage()    {}
func (*XPlantPuzzleInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1680e55bbb2433d, []int{56}
}
func (m *XPlantPuzzleInfo) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *XPlantPuzzleInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_XPlantPuzzleInfo.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *XPlantPuzzleInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_XPlantPuzzleInfo.Merge(m, src)
}
func (m *XPlantPuzzleInfo) XXX_Size() int {
	return m.Size()
}
func (m *XPlantPuzzleInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_XPlantPuzzleInfo.DiscardUnknown(m)
}

var xxx_messageInfo_XPlantPuzzleInfo proto.InternalMessageInfo

func (m *XPlantPuzzleInfo) GetPuzzleId() int32 {
	if m != nil {
		return m.PuzzleId
	}
	return 0
}

func (m *XPlantPuzzleInfo) GetBeginTime() int64 {
	if m != nil {
		return m.BeginTime
	}
	return 0
}

func (m *XPlantPuzzleInfo) GetCollectedTimes() int32 {
	if m != nil {
		return m.CollectedTimes
	}
	return 0
}

func (m *XPlantPuzzleInfo) GetSeedId() int32 {
	if m != nil {
		return m.SeedId
	}
	return 0
}

func (m *XPlantPuzzleInfo) GetNextStageTime() int64 {
	if m != nil {
		return m.NextStageTime
	}
	return 0
}

func (m *XPlantPuzzleInfo) GetStage() int32 {
	if m != nil {
		return m.Stage
	}
	return 0
}

//-- 服务器下发农场信息
type S2C_PlantFarm_GetFarmInfo struct {
	BuildUId             int32               `protobuf:"varint,1,opt,name=buildUId,proto3" json:"buildUId,omitempty"`
	BuildId              int32               `protobuf:"varint,2,opt,name=buildId,proto3" json:"buildId,omitempty"`
	AllPuzzle            []*XPlantPuzzleInfo `protobuf:"bytes,3,rep,name=allPuzzle,proto3" json:"allPuzzle,omitempty"`
	EmptyPuzzleId        []int32             `protobuf:"varint,4,rep,packed,name=emptyPuzzleId,proto3" json:"emptyPuzzleId,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *S2C_PlantFarm_GetFarmInfo) Reset()         { *m = S2C_PlantFarm_GetFarmInfo{} }
func (m *S2C_PlantFarm_GetFarmInfo) String() string { return proto.CompactTextString(m) }
func (*S2C_PlantFarm_GetFarmInfo) ProtoMessage()    {}
func (*S2C_PlantFarm_GetFarmInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1680e55bbb2433d, []int{57}
}
func (m *S2C_PlantFarm_GetFarmInfo) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *S2C_PlantFarm_GetFarmInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_S2C_PlantFarm_GetFarmInfo.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *S2C_PlantFarm_GetFarmInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_S2C_PlantFarm_GetFarmInfo.Merge(m, src)
}
func (m *S2C_PlantFarm_GetFarmInfo) XXX_Size() int {
	return m.Size()
}
func (m *S2C_PlantFarm_GetFarmInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_S2C_PlantFarm_GetFarmInfo.DiscardUnknown(m)
}

var xxx_messageInfo_S2C_PlantFarm_GetFarmInfo proto.InternalMessageInfo

func (m *S2C_PlantFarm_GetFarmInfo) GetBuildUId() int32 {
	if m != nil {
		return m.BuildUId
	}
	return 0
}

func (m *S2C_PlantFarm_GetFarmInfo) GetBuildId() int32 {
	if m != nil {
		return m.BuildId
	}
	return 0
}

func (m *S2C_PlantFarm_GetFarmInfo) GetAllPuzzle() []*XPlantPuzzleInfo {
	if m != nil {
		return m.AllPuzzle
	}
	return nil
}

func (m *S2C_PlantFarm_GetFarmInfo) GetEmptyPuzzleId() []int32 {
	if m != nil {
		return m.EmptyPuzzleId
	}
	return nil
}

//-- 客户端请求种植
type C2S_PlantFarm_Plant struct {
	BuildUId             int32    `protobuf:"varint,1,opt,name=buildUId,proto3" json:"buildUId,omitempty"`
	PuzzleId             int32    `protobuf:"varint,2,opt,name=puzzleId,proto3" json:"puzzleId,omitempty"`
	SeedId               int32    `protobuf:"varint,3,opt,name=seedId,proto3" json:"seedId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *C2S_PlantFarm_Plant) Reset()         { *m = C2S_PlantFarm_Plant{} }
func (m *C2S_PlantFarm_Plant) String() string { return proto.CompactTextString(m) }
func (*C2S_PlantFarm_Plant) ProtoMessage()    {}
func (*C2S_PlantFarm_Plant) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1680e55bbb2433d, []int{58}
}
func (m *C2S_PlantFarm_Plant) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *C2S_PlantFarm_Plant) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_C2S_PlantFarm_Plant.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *C2S_PlantFarm_Plant) XXX_Merge(src proto.Message) {
	xxx_messageInfo_C2S_PlantFarm_Plant.Merge(m, src)
}
func (m *C2S_PlantFarm_Plant) XXX_Size() int {
	return m.Size()
}
func (m *C2S_PlantFarm_Plant) XXX_DiscardUnknown() {
	xxx_messageInfo_C2S_PlantFarm_Plant.DiscardUnknown(m)
}

var xxx_messageInfo_C2S_PlantFarm_Plant proto.InternalMessageInfo

func (m *C2S_PlantFarm_Plant) GetBuildUId() int32 {
	if m != nil {
		return m.BuildUId
	}
	return 0
}

func (m *C2S_PlantFarm_Plant) GetPuzzleId() int32 {
	if m != nil {
		return m.PuzzleId
	}
	return 0
}

func (m *C2S_PlantFarm_Plant) GetSeedId() int32 {
	if m != nil {
		return m.SeedId
	}
	return 0
}

//-- 服务器回复种植请求
type S2C_PlantFarm_Plant struct {
	BuildUId             int32            `protobuf:"varint,1,opt,name=buildUId,proto3" json:"buildUId,omitempty"`
	Result               *OperationResult `protobuf:"bytes,2,opt,name=result,proto3" json:"result,omitempty"`
	PuzzleId             int32            `protobuf:"varint,3,opt,name=puzzleId,proto3" json:"puzzleId,omitempty"`
	ItemId               int32            `protobuf:"varint,4,opt,name=itemId,proto3" json:"itemId,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *S2C_PlantFarm_Plant) Reset()         { *m = S2C_PlantFarm_Plant{} }
func (m *S2C_PlantFarm_Plant) String() string { return proto.CompactTextString(m) }
func (*S2C_PlantFarm_Plant) ProtoMessage()    {}
func (*S2C_PlantFarm_Plant) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1680e55bbb2433d, []int{59}
}
func (m *S2C_PlantFarm_Plant) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *S2C_PlantFarm_Plant) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_S2C_PlantFarm_Plant.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *S2C_PlantFarm_Plant) XXX_Merge(src proto.Message) {
	xxx_messageInfo_S2C_PlantFarm_Plant.Merge(m, src)
}
func (m *S2C_PlantFarm_Plant) XXX_Size() int {
	return m.Size()
}
func (m *S2C_PlantFarm_Plant) XXX_DiscardUnknown() {
	xxx_messageInfo_S2C_PlantFarm_Plant.DiscardUnknown(m)
}

var xxx_messageInfo_S2C_PlantFarm_Plant proto.InternalMessageInfo

func (m *S2C_PlantFarm_Plant) GetBuildUId() int32 {
	if m != nil {
		return m.BuildUId
	}
	return 0
}

func (m *S2C_PlantFarm_Plant) GetResult() *OperationResult {
	if m != nil {
		return m.Result
	}
	return nil
}

func (m *S2C_PlantFarm_Plant) GetPuzzleId() int32 {
	if m != nil {
		return m.PuzzleId
	}
	return 0
}

func (m *S2C_PlantFarm_Plant) GetItemId() int32 {
	if m != nil {
		return m.ItemId
	}
	return 0
}

//-- 客户端请求操作单个地块信息
type C2S_PlantFarm_PuzzleAction struct {
	BuildUId             int32    `protobuf:"varint,1,opt,name=buildUId,proto3" json:"buildUId,omitempty"`
	PuzzleId             int32    `protobuf:"varint,2,opt,name=puzzleId,proto3" json:"puzzleId,omitempty"`
	Action               int32    `protobuf:"varint,3,opt,name=action,proto3" json:"action,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *C2S_PlantFarm_PuzzleAction) Reset()         { *m = C2S_PlantFarm_PuzzleAction{} }
func (m *C2S_PlantFarm_PuzzleAction) String() string { return proto.CompactTextString(m) }
func (*C2S_PlantFarm_PuzzleAction) ProtoMessage()    {}
func (*C2S_PlantFarm_PuzzleAction) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1680e55bbb2433d, []int{60}
}
func (m *C2S_PlantFarm_PuzzleAction) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *C2S_PlantFarm_PuzzleAction) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_C2S_PlantFarm_PuzzleAction.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *C2S_PlantFarm_PuzzleAction) XXX_Merge(src proto.Message) {
	xxx_messageInfo_C2S_PlantFarm_PuzzleAction.Merge(m, src)
}
func (m *C2S_PlantFarm_PuzzleAction) XXX_Size() int {
	return m.Size()
}
func (m *C2S_PlantFarm_PuzzleAction) XXX_DiscardUnknown() {
	xxx_messageInfo_C2S_PlantFarm_PuzzleAction.DiscardUnknown(m)
}

var xxx_messageInfo_C2S_PlantFarm_PuzzleAction proto.InternalMessageInfo

func (m *C2S_PlantFarm_PuzzleAction) GetBuildUId() int32 {
	if m != nil {
		return m.BuildUId
	}
	return 0
}

func (m *C2S_PlantFarm_PuzzleAction) GetPuzzleId() int32 {
	if m != nil {
		return m.PuzzleId
	}
	return 0
}

func (m *C2S_PlantFarm_PuzzleAction) GetAction() int32 {
	if m != nil {
		return m.Action
	}
	return 0
}

//-- 服务器下发单个地块信息
type S2C_PlantFarm_PuzzleInfo struct {
	BuildUId             int32             `protobuf:"varint,1,opt,name=buildUId,proto3" json:"buildUId,omitempty"`
	Puzzle               *XPlantPuzzleInfo `protobuf:"bytes,2,opt,name=puzzle,proto3" json:"puzzle,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *S2C_PlantFarm_PuzzleInfo) Reset()         { *m = S2C_PlantFarm_PuzzleInfo{} }
func (m *S2C_PlantFarm_PuzzleInfo) String() string { return proto.CompactTextString(m) }
func (*S2C_PlantFarm_PuzzleInfo) ProtoMessage()    {}
func (*S2C_PlantFarm_PuzzleInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1680e55bbb2433d, []int{61}
}
func (m *S2C_PlantFarm_PuzzleInfo) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *S2C_PlantFarm_PuzzleInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_S2C_PlantFarm_PuzzleInfo.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *S2C_PlantFarm_PuzzleInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_S2C_PlantFarm_PuzzleInfo.Merge(m, src)
}
func (m *S2C_PlantFarm_PuzzleInfo) XXX_Size() int {
	return m.Size()
}
func (m *S2C_PlantFarm_PuzzleInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_S2C_PlantFarm_PuzzleInfo.DiscardUnknown(m)
}

var xxx_messageInfo_S2C_PlantFarm_PuzzleInfo proto.InternalMessageInfo

func (m *S2C_PlantFarm_PuzzleInfo) GetBuildUId() int32 {
	if m != nil {
		return m.BuildUId
	}
	return 0
}

func (m *S2C_PlantFarm_PuzzleInfo) GetPuzzle() *XPlantPuzzleInfo {
	if m != nil {
		return m.Puzzle
	}
	return nil
}

//-- 服务器回复浇水请求
type S2C_PlantFarm_Water struct {
	BuildUId             int32            `protobuf:"varint,1,opt,name=buildUId,proto3" json:"buildUId,omitempty"`
	Result               *OperationResult `protobuf:"bytes,2,opt,name=result,proto3" json:"result,omitempty"`
	PuzzleId             int32            `protobuf:"varint,3,opt,name=puzzleId,proto3" json:"puzzleId,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *S2C_PlantFarm_Water) Reset()         { *m = S2C_PlantFarm_Water{} }
func (m *S2C_PlantFarm_Water) String() string { return proto.CompactTextString(m) }
func (*S2C_PlantFarm_Water) ProtoMessage()    {}
func (*S2C_PlantFarm_Water) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1680e55bbb2433d, []int{62}
}
func (m *S2C_PlantFarm_Water) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *S2C_PlantFarm_Water) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_S2C_PlantFarm_Water.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *S2C_PlantFarm_Water) XXX_Merge(src proto.Message) {
	xxx_messageInfo_S2C_PlantFarm_Water.Merge(m, src)
}
func (m *S2C_PlantFarm_Water) XXX_Size() int {
	return m.Size()
}
func (m *S2C_PlantFarm_Water) XXX_DiscardUnknown() {
	xxx_messageInfo_S2C_PlantFarm_Water.DiscardUnknown(m)
}

var xxx_messageInfo_S2C_PlantFarm_Water proto.InternalMessageInfo

func (m *S2C_PlantFarm_Water) GetBuildUId() int32 {
	if m != nil {
		return m.BuildUId
	}
	return 0
}

func (m *S2C_PlantFarm_Water) GetResult() *OperationResult {
	if m != nil {
		return m.Result
	}
	return nil
}

func (m *S2C_PlantFarm_Water) GetPuzzleId() int32 {
	if m != nil {
		return m.PuzzleId
	}
	return 0
}

//-- 服务器回复收割请求
type S2C_PlantFarm_Reap struct {
	BuildUId             int32            `protobuf:"varint,1,opt,name=buildUId,proto3" json:"buildUId,omitempty"`
	Result               *OperationResult `protobuf:"bytes,2,opt,name=result,proto3" json:"result,omitempty"`
	PuzzleId             int32            `protobuf:"varint,3,opt,name=puzzleId,proto3" json:"puzzleId,omitempty"`
	RewardIds            []int32          `protobuf:"varint,4,rep,packed,name=rewardIds,proto3" json:"rewardIds,omitempty"`
	RewardCounts         []int32          `protobuf:"varint,5,rep,packed,name=rewardCounts,proto3" json:"rewardCounts,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *S2C_PlantFarm_Reap) Reset()         { *m = S2C_PlantFarm_Reap{} }
func (m *S2C_PlantFarm_Reap) String() string { return proto.CompactTextString(m) }
func (*S2C_PlantFarm_Reap) ProtoMessage()    {}
func (*S2C_PlantFarm_Reap) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1680e55bbb2433d, []int{63}
}
func (m *S2C_PlantFarm_Reap) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *S2C_PlantFarm_Reap) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_S2C_PlantFarm_Reap.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *S2C_PlantFarm_Reap) XXX_Merge(src proto.Message) {
	xxx_messageInfo_S2C_PlantFarm_Reap.Merge(m, src)
}
func (m *S2C_PlantFarm_Reap) XXX_Size() int {
	return m.Size()
}
func (m *S2C_PlantFarm_Reap) XXX_DiscardUnknown() {
	xxx_messageInfo_S2C_PlantFarm_Reap.DiscardUnknown(m)
}

var xxx_messageInfo_S2C_PlantFarm_Reap proto.InternalMessageInfo

func (m *S2C_PlantFarm_Reap) GetBuildUId() int32 {
	if m != nil {
		return m.BuildUId
	}
	return 0
}

func (m *S2C_PlantFarm_Reap) GetResult() *OperationResult {
	if m != nil {
		return m.Result
	}
	return nil
}

func (m *S2C_PlantFarm_Reap) GetPuzzleId() int32 {
	if m != nil {
		return m.PuzzleId
	}
	return 0
}

func (m *S2C_PlantFarm_Reap) GetRewardIds() []int32 {
	if m != nil {
		return m.RewardIds
	}
	return nil
}

func (m *S2C_PlantFarm_Reap) GetRewardCounts() []int32 {
	if m != nil {
		return m.RewardCounts
	}
	return nil
}

//种植地块信息
type XAnimalPuzzleInfo struct {
	PuzzleId             int32    `protobuf:"varint,1,opt,name=puzzleId,proto3" json:"puzzleId,omitempty"`
	BeginTime            int64    `protobuf:"varint,2,opt,name=beginTime,proto3" json:"beginTime,omitempty"`
	CollectedTimes       int32    `protobuf:"varint,3,opt,name=collectedTimes,proto3" json:"collectedTimes,omitempty"`
	SeedId               int32    `protobuf:"varint,4,opt,name=seedId,proto3" json:"seedId,omitempty"`
	CurrentSatiety       int32    `protobuf:"varint,5,opt,name=currentSatiety,proto3" json:"currentSatiety,omitempty"`
	NeedTotalSatiety     int32    `protobuf:"varint,6,opt,name=needTotalSatiety,proto3" json:"needTotalSatiety,omitempty"`
	Stage                int32    `protobuf:"varint,7,opt,name=stage,proto3" json:"stage,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *XAnimalPuzzleInfo) Reset()         { *m = XAnimalPuzzleInfo{} }
func (m *XAnimalPuzzleInfo) String() string { return proto.CompactTextString(m) }
func (*XAnimalPuzzleInfo) ProtoMessage()    {}
func (*XAnimalPuzzleInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1680e55bbb2433d, []int{64}
}
func (m *XAnimalPuzzleInfo) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *XAnimalPuzzleInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_XAnimalPuzzleInfo.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *XAnimalPuzzleInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_XAnimalPuzzleInfo.Merge(m, src)
}
func (m *XAnimalPuzzleInfo) XXX_Size() int {
	return m.Size()
}
func (m *XAnimalPuzzleInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_XAnimalPuzzleInfo.DiscardUnknown(m)
}

var xxx_messageInfo_XAnimalPuzzleInfo proto.InternalMessageInfo

func (m *XAnimalPuzzleInfo) GetPuzzleId() int32 {
	if m != nil {
		return m.PuzzleId
	}
	return 0
}

func (m *XAnimalPuzzleInfo) GetBeginTime() int64 {
	if m != nil {
		return m.BeginTime
	}
	return 0
}

func (m *XAnimalPuzzleInfo) GetCollectedTimes() int32 {
	if m != nil {
		return m.CollectedTimes
	}
	return 0
}

func (m *XAnimalPuzzleInfo) GetSeedId() int32 {
	if m != nil {
		return m.SeedId
	}
	return 0
}

func (m *XAnimalPuzzleInfo) GetCurrentSatiety() int32 {
	if m != nil {
		return m.CurrentSatiety
	}
	return 0
}

func (m *XAnimalPuzzleInfo) GetNeedTotalSatiety() int32 {
	if m != nil {
		return m.NeedTotalSatiety
	}
	return 0
}

func (m *XAnimalPuzzleInfo) GetStage() int32 {
	if m != nil {
		return m.Stage
	}
	return 0
}

//-- 服务器下发养殖场信息
type S2C_AnimalFarm_GetFarmInfo struct {
	BuildUId             int32                `protobuf:"varint,1,opt,name=buildUId,proto3" json:"buildUId,omitempty"`
	BuildId              int32                `protobuf:"varint,2,opt,name=buildId,proto3" json:"buildId,omitempty"`
	AllPuzzle            []*XAnimalPuzzleInfo `protobuf:"bytes,3,rep,name=allPuzzle,proto3" json:"allPuzzle,omitempty"`
	EmptyPuzzleId        []int32              `protobuf:"varint,4,rep,packed,name=emptyPuzzleId,proto3" json:"emptyPuzzleId,omitempty"`
	Inventory            int32                `protobuf:"varint,5,opt,name=inventory,proto3" json:"inventory,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *S2C_AnimalFarm_GetFarmInfo) Reset()         { *m = S2C_AnimalFarm_GetFarmInfo{} }
func (m *S2C_AnimalFarm_GetFarmInfo) String() string { return proto.CompactTextString(m) }
func (*S2C_AnimalFarm_GetFarmInfo) ProtoMessage()    {}
func (*S2C_AnimalFarm_GetFarmInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1680e55bbb2433d, []int{65}
}
func (m *S2C_AnimalFarm_GetFarmInfo) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *S2C_AnimalFarm_GetFarmInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_S2C_AnimalFarm_GetFarmInfo.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *S2C_AnimalFarm_GetFarmInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_S2C_AnimalFarm_GetFarmInfo.Merge(m, src)
}
func (m *S2C_AnimalFarm_GetFarmInfo) XXX_Size() int {
	return m.Size()
}
func (m *S2C_AnimalFarm_GetFarmInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_S2C_AnimalFarm_GetFarmInfo.DiscardUnknown(m)
}

var xxx_messageInfo_S2C_AnimalFarm_GetFarmInfo proto.InternalMessageInfo

func (m *S2C_AnimalFarm_GetFarmInfo) GetBuildUId() int32 {
	if m != nil {
		return m.BuildUId
	}
	return 0
}

func (m *S2C_AnimalFarm_GetFarmInfo) GetBuildId() int32 {
	if m != nil {
		return m.BuildId
	}
	return 0
}

func (m *S2C_AnimalFarm_GetFarmInfo) GetAllPuzzle() []*XAnimalPuzzleInfo {
	if m != nil {
		return m.AllPuzzle
	}
	return nil
}

func (m *S2C_AnimalFarm_GetFarmInfo) GetEmptyPuzzleId() []int32 {
	if m != nil {
		return m.EmptyPuzzleId
	}
	return nil
}

func (m *S2C_AnimalFarm_GetFarmInfo) GetInventory() int32 {
	if m != nil {
		return m.Inventory
	}
	return 0
}

//-- 客户端请求养殖
type C2S_AnimalFarm_Plant struct {
	BuildUId             int32    `protobuf:"varint,1,opt,name=buildUId,proto3" json:"buildUId,omitempty"`
	PuzzleId             int32    `protobuf:"varint,2,opt,name=puzzleId,proto3" json:"puzzleId,omitempty"`
	SeedId               int32    `protobuf:"varint,3,opt,name=seedId,proto3" json:"seedId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *C2S_AnimalFarm_Plant) Reset()         { *m = C2S_AnimalFarm_Plant{} }
func (m *C2S_AnimalFarm_Plant) String() string { return proto.CompactTextString(m) }
func (*C2S_AnimalFarm_Plant) ProtoMessage()    {}
func (*C2S_AnimalFarm_Plant) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1680e55bbb2433d, []int{66}
}
func (m *C2S_AnimalFarm_Plant) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *C2S_AnimalFarm_Plant) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_C2S_AnimalFarm_Plant.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *C2S_AnimalFarm_Plant) XXX_Merge(src proto.Message) {
	xxx_messageInfo_C2S_AnimalFarm_Plant.Merge(m, src)
}
func (m *C2S_AnimalFarm_Plant) XXX_Size() int {
	return m.Size()
}
func (m *C2S_AnimalFarm_Plant) XXX_DiscardUnknown() {
	xxx_messageInfo_C2S_AnimalFarm_Plant.DiscardUnknown(m)
}

var xxx_messageInfo_C2S_AnimalFarm_Plant proto.InternalMessageInfo

func (m *C2S_AnimalFarm_Plant) GetBuildUId() int32 {
	if m != nil {
		return m.BuildUId
	}
	return 0
}

func (m *C2S_AnimalFarm_Plant) GetPuzzleId() int32 {
	if m != nil {
		return m.PuzzleId
	}
	return 0
}

func (m *C2S_AnimalFarm_Plant) GetSeedId() int32 {
	if m != nil {
		return m.SeedId
	}
	return 0
}

//-- 服务器回复养殖请求
type S2C_AnimalFarm_Plant struct {
	BuildUId             int32            `protobuf:"varint,1,opt,name=buildUId,proto3" json:"buildUId,omitempty"`
	Result               *OperationResult `protobuf:"bytes,2,opt,name=result,proto3" json:"result,omitempty"`
	PuzzleId             int32            `protobuf:"varint,3,opt,name=puzzleId,proto3" json:"puzzleId,omitempty"`
	ItemId               int32            `protobuf:"varint,4,opt,name=itemId,proto3" json:"itemId,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *S2C_AnimalFarm_Plant) Reset()         { *m = S2C_AnimalFarm_Plant{} }
func (m *S2C_AnimalFarm_Plant) String() string { return proto.CompactTextString(m) }
func (*S2C_AnimalFarm_Plant) ProtoMessage()    {}
func (*S2C_AnimalFarm_Plant) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1680e55bbb2433d, []int{67}
}
func (m *S2C_AnimalFarm_Plant) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *S2C_AnimalFarm_Plant) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_S2C_AnimalFarm_Plant.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *S2C_AnimalFarm_Plant) XXX_Merge(src proto.Message) {
	xxx_messageInfo_S2C_AnimalFarm_Plant.Merge(m, src)
}
func (m *S2C_AnimalFarm_Plant) XXX_Size() int {
	return m.Size()
}
func (m *S2C_AnimalFarm_Plant) XXX_DiscardUnknown() {
	xxx_messageInfo_S2C_AnimalFarm_Plant.DiscardUnknown(m)
}

var xxx_messageInfo_S2C_AnimalFarm_Plant proto.InternalMessageInfo

func (m *S2C_AnimalFarm_Plant) GetBuildUId() int32 {
	if m != nil {
		return m.BuildUId
	}
	return 0
}

func (m *S2C_AnimalFarm_Plant) GetResult() *OperationResult {
	if m != nil {
		return m.Result
	}
	return nil
}

func (m *S2C_AnimalFarm_Plant) GetPuzzleId() int32 {
	if m != nil {
		return m.PuzzleId
	}
	return 0
}

func (m *S2C_AnimalFarm_Plant) GetItemId() int32 {
	if m != nil {
		return m.ItemId
	}
	return 0
}

//-- 客户端请求操作单个动物信息
type C2S_AnimalFarm_PuzzleAction struct {
	BuildUId             int32    `protobuf:"varint,1,opt,name=buildUId,proto3" json:"buildUId,omitempty"`
	PuzzleId             int32    `protobuf:"varint,2,opt,name=puzzleId,proto3" json:"puzzleId,omitempty"`
	Action               int32    `protobuf:"varint,3,opt,name=action,proto3" json:"action,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *C2S_AnimalFarm_PuzzleAction) Reset()         { *m = C2S_AnimalFarm_PuzzleAction{} }
func (m *C2S_AnimalFarm_PuzzleAction) String() string { return proto.CompactTextString(m) }
func (*C2S_AnimalFarm_PuzzleAction) ProtoMessage()    {}
func (*C2S_AnimalFarm_PuzzleAction) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1680e55bbb2433d, []int{68}
}
func (m *C2S_AnimalFarm_PuzzleAction) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *C2S_AnimalFarm_PuzzleAction) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_C2S_AnimalFarm_PuzzleAction.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *C2S_AnimalFarm_PuzzleAction) XXX_Merge(src proto.Message) {
	xxx_messageInfo_C2S_AnimalFarm_PuzzleAction.Merge(m, src)
}
func (m *C2S_AnimalFarm_PuzzleAction) XXX_Size() int {
	return m.Size()
}
func (m *C2S_AnimalFarm_PuzzleAction) XXX_DiscardUnknown() {
	xxx_messageInfo_C2S_AnimalFarm_PuzzleAction.DiscardUnknown(m)
}

var xxx_messageInfo_C2S_AnimalFarm_PuzzleAction proto.InternalMessageInfo

func (m *C2S_AnimalFarm_PuzzleAction) GetBuildUId() int32 {
	if m != nil {
		return m.BuildUId
	}
	return 0
}

func (m *C2S_AnimalFarm_PuzzleAction) GetPuzzleId() int32 {
	if m != nil {
		return m.PuzzleId
	}
	return 0
}

func (m *C2S_AnimalFarm_PuzzleAction) GetAction() int32 {
	if m != nil {
		return m.Action
	}
	return 0
}

//-- 服务器下发单个动物信息
type S2C_AnimalFarm_PuzzleInfo struct {
	BuildUId             int32              `protobuf:"varint,1,opt,name=buildUId,proto3" json:"buildUId,omitempty"`
	Puzzle               *XAnimalPuzzleInfo `protobuf:"bytes,2,opt,name=puzzle,proto3" json:"puzzle,omitempty"`
	Inventory            int32              `protobuf:"varint,3,opt,name=inventory,proto3" json:"inventory,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *S2C_AnimalFarm_PuzzleInfo) Reset()         { *m = S2C_AnimalFarm_PuzzleInfo{} }
func (m *S2C_AnimalFarm_PuzzleInfo) String() string { return proto.CompactTextString(m) }
func (*S2C_AnimalFarm_PuzzleInfo) ProtoMessage()    {}
func (*S2C_AnimalFarm_PuzzleInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1680e55bbb2433d, []int{69}
}
func (m *S2C_AnimalFarm_PuzzleInfo) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *S2C_AnimalFarm_PuzzleInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_S2C_AnimalFarm_PuzzleInfo.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *S2C_AnimalFarm_PuzzleInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_S2C_AnimalFarm_PuzzleInfo.Merge(m, src)
}
func (m *S2C_AnimalFarm_PuzzleInfo) XXX_Size() int {
	return m.Size()
}
func (m *S2C_AnimalFarm_PuzzleInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_S2C_AnimalFarm_PuzzleInfo.DiscardUnknown(m)
}

var xxx_messageInfo_S2C_AnimalFarm_PuzzleInfo proto.InternalMessageInfo

func (m *S2C_AnimalFarm_PuzzleInfo) GetBuildUId() int32 {
	if m != nil {
		return m.BuildUId
	}
	return 0
}

func (m *S2C_AnimalFarm_PuzzleInfo) GetPuzzle() *XAnimalPuzzleInfo {
	if m != nil {
		return m.Puzzle
	}
	return nil
}

func (m *S2C_AnimalFarm_PuzzleInfo) GetInventory() int32 {
	if m != nil {
		return m.Inventory
	}
	return 0
}

//-- 服务器发送当前剩余的饲料值
type S2C_AnimalFarm_Inventory struct {
	BuildUId             int32    `protobuf:"varint,1,opt,name=buildUId,proto3" json:"buildUId,omitempty"`
	Inventory            int32    `protobuf:"varint,2,opt,name=inventory,proto3" json:"inventory,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *S2C_AnimalFarm_Inventory) Reset()         { *m = S2C_AnimalFarm_Inventory{} }
func (m *S2C_AnimalFarm_Inventory) String() string { return proto.CompactTextString(m) }
func (*S2C_AnimalFarm_Inventory) ProtoMessage()    {}
func (*S2C_AnimalFarm_Inventory) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1680e55bbb2433d, []int{70}
}
func (m *S2C_AnimalFarm_Inventory) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *S2C_AnimalFarm_Inventory) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_S2C_AnimalFarm_Inventory.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *S2C_AnimalFarm_Inventory) XXX_Merge(src proto.Message) {
	xxx_messageInfo_S2C_AnimalFarm_Inventory.Merge(m, src)
}
func (m *S2C_AnimalFarm_Inventory) XXX_Size() int {
	return m.Size()
}
func (m *S2C_AnimalFarm_Inventory) XXX_DiscardUnknown() {
	xxx_messageInfo_S2C_AnimalFarm_Inventory.DiscardUnknown(m)
}

var xxx_messageInfo_S2C_AnimalFarm_Inventory proto.InternalMessageInfo

func (m *S2C_AnimalFarm_Inventory) GetBuildUId() int32 {
	if m != nil {
		return m.BuildUId
	}
	return 0
}

func (m *S2C_AnimalFarm_Inventory) GetInventory() int32 {
	if m != nil {
		return m.Inventory
	}
	return 0
}

//-- 服务器回复收割请求
type S2C_AnimalFarm_Reap struct {
	BuildUId             int32            `protobuf:"varint,1,opt,name=buildUId,proto3" json:"buildUId,omitempty"`
	Result               *OperationResult `protobuf:"bytes,2,opt,name=result,proto3" json:"result,omitempty"`
	PuzzleId             int32            `protobuf:"varint,3,opt,name=puzzleId,proto3" json:"puzzleId,omitempty"`
	RewardIds            []int32          `protobuf:"varint,4,rep,packed,name=rewardIds,proto3" json:"rewardIds,omitempty"`
	RewardCounts         []int32          `protobuf:"varint,5,rep,packed,name=rewardCounts,proto3" json:"rewardCounts,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *S2C_AnimalFarm_Reap) Reset()         { *m = S2C_AnimalFarm_Reap{} }
func (m *S2C_AnimalFarm_Reap) String() string { return proto.CompactTextString(m) }
func (*S2C_AnimalFarm_Reap) ProtoMessage()    {}
func (*S2C_AnimalFarm_Reap) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1680e55bbb2433d, []int{71}
}
func (m *S2C_AnimalFarm_Reap) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *S2C_AnimalFarm_Reap) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_S2C_AnimalFarm_Reap.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *S2C_AnimalFarm_Reap) XXX_Merge(src proto.Message) {
	xxx_messageInfo_S2C_AnimalFarm_Reap.Merge(m, src)
}
func (m *S2C_AnimalFarm_Reap) XXX_Size() int {
	return m.Size()
}
func (m *S2C_AnimalFarm_Reap) XXX_DiscardUnknown() {
	xxx_messageInfo_S2C_AnimalFarm_Reap.DiscardUnknown(m)
}

var xxx_messageInfo_S2C_AnimalFarm_Reap proto.InternalMessageInfo

func (m *S2C_AnimalFarm_Reap) GetBuildUId() int32 {
	if m != nil {
		return m.BuildUId
	}
	return 0
}

func (m *S2C_AnimalFarm_Reap) GetResult() *OperationResult {
	if m != nil {
		return m.Result
	}
	return nil
}

func (m *S2C_AnimalFarm_Reap) GetPuzzleId() int32 {
	if m != nil {
		return m.PuzzleId
	}
	return 0
}

func (m *S2C_AnimalFarm_Reap) GetRewardIds() []int32 {
	if m != nil {
		return m.RewardIds
	}
	return nil
}

func (m *S2C_AnimalFarm_Reap) GetRewardCounts() []int32 {
	if m != nil {
		return m.RewardCounts
	}
	return nil
}

type XMission struct {
	Id                   int32              `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Status               Enum_MissionStatus `protobuf:"varint,2,opt,name=status,proto3,enum=protocol.Enum_MissionStatus" json:"status,omitempty"`
	CurrProcess          []int32            `protobuf:"varint,3,rep,packed,name=currProcess,proto3" json:"currProcess,omitempty"`
	TotalProcess         []int32            `protobuf:"varint,4,rep,packed,name=totalProcess,proto3" json:"totalProcess,omitempty"`
	CompleteTimes        int32              `protobuf:"varint,5,opt,name=completeTimes,proto3" json:"completeTimes,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *XMission) Reset()         { *m = XMission{} }
func (m *XMission) String() string { return proto.CompactTextString(m) }
func (*XMission) ProtoMessage()    {}
func (*XMission) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1680e55bbb2433d, []int{72}
}
func (m *XMission) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *XMission) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_XMission.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *XMission) XXX_Merge(src proto.Message) {
	xxx_messageInfo_XMission.Merge(m, src)
}
func (m *XMission) XXX_Size() int {
	return m.Size()
}
func (m *XMission) XXX_DiscardUnknown() {
	xxx_messageInfo_XMission.DiscardUnknown(m)
}

var xxx_messageInfo_XMission proto.InternalMessageInfo

func (m *XMission) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *XMission) GetStatus() Enum_MissionStatus {
	if m != nil {
		return m.Status
	}
	return Enum_MissionStatus_eReady
}

func (m *XMission) GetCurrProcess() []int32 {
	if m != nil {
		return m.CurrProcess
	}
	return nil
}

func (m *XMission) GetTotalProcess() []int32 {
	if m != nil {
		return m.TotalProcess
	}
	return nil
}

func (m *XMission) GetCompleteTimes() int32 {
	if m != nil {
		return m.CompleteTimes
	}
	return 0
}

// 同步所有任务信息
type C2S_AllMissionInfo struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *C2S_AllMissionInfo) Reset()         { *m = C2S_AllMissionInfo{} }
func (m *C2S_AllMissionInfo) String() string { return proto.CompactTextString(m) }
func (*C2S_AllMissionInfo) ProtoMessage()    {}
func (*C2S_AllMissionInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1680e55bbb2433d, []int{73}
}
func (m *C2S_AllMissionInfo) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *C2S_AllMissionInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_C2S_AllMissionInfo.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *C2S_AllMissionInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_C2S_AllMissionInfo.Merge(m, src)
}
func (m *C2S_AllMissionInfo) XXX_Size() int {
	return m.Size()
}
func (m *C2S_AllMissionInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_C2S_AllMissionInfo.DiscardUnknown(m)
}

var xxx_messageInfo_C2S_AllMissionInfo proto.InternalMessageInfo

// 下发所有任务信息
type S2C_AllMissionInfo struct {
	Missions             []*XMission `protobuf:"bytes,1,rep,name=missions,proto3" json:"missions,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *S2C_AllMissionInfo) Reset()         { *m = S2C_AllMissionInfo{} }
func (m *S2C_AllMissionInfo) String() string { return proto.CompactTextString(m) }
func (*S2C_AllMissionInfo) ProtoMessage()    {}
func (*S2C_AllMissionInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1680e55bbb2433d, []int{74}
}
func (m *S2C_AllMissionInfo) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *S2C_AllMissionInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_S2C_AllMissionInfo.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *S2C_AllMissionInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_S2C_AllMissionInfo.Merge(m, src)
}
func (m *S2C_AllMissionInfo) XXX_Size() int {
	return m.Size()
}
func (m *S2C_AllMissionInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_S2C_AllMissionInfo.DiscardUnknown(m)
}

var xxx_messageInfo_S2C_AllMissionInfo proto.InternalMessageInfo

func (m *S2C_AllMissionInfo) GetMissions() []*XMission {
	if m != nil {
		return m.Missions
	}
	return nil
}

// 同步单个任务信息(任务状态变更时生效)
type C2S_OneMissionInfo struct {
	Id                   int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *C2S_OneMissionInfo) Reset()         { *m = C2S_OneMissionInfo{} }
func (m *C2S_OneMissionInfo) String() string { return proto.CompactTextString(m) }
func (*C2S_OneMissionInfo) ProtoMessage()    {}
func (*C2S_OneMissionInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1680e55bbb2433d, []int{75}
}
func (m *C2S_OneMissionInfo) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *C2S_OneMissionInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_C2S_OneMissionInfo.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *C2S_OneMissionInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_C2S_OneMissionInfo.Merge(m, src)
}
func (m *C2S_OneMissionInfo) XXX_Size() int {
	return m.Size()
}
func (m *C2S_OneMissionInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_C2S_OneMissionInfo.DiscardUnknown(m)
}

var xxx_messageInfo_C2S_OneMissionInfo proto.InternalMessageInfo

func (m *C2S_OneMissionInfo) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

// 下发单个任务信息(任务状态变更时生效)
type S2C_OneMissionInfo struct {
	Mission              *XMission `protobuf:"bytes,1,opt,name=mission,proto3" json:"mission,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *S2C_OneMissionInfo) Reset()         { *m = S2C_OneMissionInfo{} }
func (m *S2C_OneMissionInfo) String() string { return proto.CompactTextString(m) }
func (*S2C_OneMissionInfo) ProtoMessage()    {}
func (*S2C_OneMissionInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1680e55bbb2433d, []int{76}
}
func (m *S2C_OneMissionInfo) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *S2C_OneMissionInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_S2C_OneMissionInfo.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *S2C_OneMissionInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_S2C_OneMissionInfo.Merge(m, src)
}
func (m *S2C_OneMissionInfo) XXX_Size() int {
	return m.Size()
}
func (m *S2C_OneMissionInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_S2C_OneMissionInfo.DiscardUnknown(m)
}

var xxx_messageInfo_S2C_OneMissionInfo proto.InternalMessageInfo

func (m *S2C_OneMissionInfo) GetMission() *XMission {
	if m != nil {
		return m.Mission
	}
	return nil
}

// 接任务
type C2S_AcceptMission struct {
	Id                   int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *C2S_AcceptMission) Reset()         { *m = C2S_AcceptMission{} }
func (m *C2S_AcceptMission) String() string { return proto.CompactTextString(m) }
func (*C2S_AcceptMission) ProtoMessage()    {}
func (*C2S_AcceptMission) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1680e55bbb2433d, []int{77}
}
func (m *C2S_AcceptMission) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *C2S_AcceptMission) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_C2S_AcceptMission.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *C2S_AcceptMission) XXX_Merge(src proto.Message) {
	xxx_messageInfo_C2S_AcceptMission.Merge(m, src)
}
func (m *C2S_AcceptMission) XXX_Size() int {
	return m.Size()
}
func (m *C2S_AcceptMission) XXX_DiscardUnknown() {
	xxx_messageInfo_C2S_AcceptMission.DiscardUnknown(m)
}

var xxx_messageInfo_C2S_AcceptMission proto.InternalMessageInfo

func (m *C2S_AcceptMission) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

// 接任务
type S2C_AcceptMission struct {
	Id                   int32            `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Ret                  *OperationResult `protobuf:"bytes,2,opt,name=ret,proto3" json:"ret,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *S2C_AcceptMission) Reset()         { *m = S2C_AcceptMission{} }
func (m *S2C_AcceptMission) String() string { return proto.CompactTextString(m) }
func (*S2C_AcceptMission) ProtoMessage()    {}
func (*S2C_AcceptMission) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1680e55bbb2433d, []int{78}
}
func (m *S2C_AcceptMission) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *S2C_AcceptMission) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_S2C_AcceptMission.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *S2C_AcceptMission) XXX_Merge(src proto.Message) {
	xxx_messageInfo_S2C_AcceptMission.Merge(m, src)
}
func (m *S2C_AcceptMission) XXX_Size() int {
	return m.Size()
}
func (m *S2C_AcceptMission) XXX_DiscardUnknown() {
	xxx_messageInfo_S2C_AcceptMission.DiscardUnknown(m)
}

var xxx_messageInfo_S2C_AcceptMission proto.InternalMessageInfo

func (m *S2C_AcceptMission) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *S2C_AcceptMission) GetRet() *OperationResult {
	if m != nil {
		return m.Ret
	}
	return nil
}

// 报告任务
type C2S_ReportMission struct {
	Id                   int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *C2S_ReportMission) Reset()         { *m = C2S_ReportMission{} }
func (m *C2S_ReportMission) String() string { return proto.CompactTextString(m) }
func (*C2S_ReportMission) ProtoMessage()    {}
func (*C2S_ReportMission) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1680e55bbb2433d, []int{79}
}
func (m *C2S_ReportMission) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *C2S_ReportMission) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_C2S_ReportMission.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *C2S_ReportMission) XXX_Merge(src proto.Message) {
	xxx_messageInfo_C2S_ReportMission.Merge(m, src)
}
func (m *C2S_ReportMission) XXX_Size() int {
	return m.Size()
}
func (m *C2S_ReportMission) XXX_DiscardUnknown() {
	xxx_messageInfo_C2S_ReportMission.DiscardUnknown(m)
}

var xxx_messageInfo_C2S_ReportMission proto.InternalMessageInfo

func (m *C2S_ReportMission) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

// 报告任务
type S2C_ReportMission struct {
	Id                   int32            `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Ret                  *OperationResult `protobuf:"bytes,2,opt,name=ret,proto3" json:"ret,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *S2C_ReportMission) Reset()         { *m = S2C_ReportMission{} }
func (m *S2C_ReportMission) String() string { return proto.CompactTextString(m) }
func (*S2C_ReportMission) ProtoMessage()    {}
func (*S2C_ReportMission) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1680e55bbb2433d, []int{80}
}
func (m *S2C_ReportMission) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *S2C_ReportMission) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_S2C_ReportMission.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *S2C_ReportMission) XXX_Merge(src proto.Message) {
	xxx_messageInfo_S2C_ReportMission.Merge(m, src)
}
func (m *S2C_ReportMission) XXX_Size() int {
	return m.Size()
}
func (m *S2C_ReportMission) XXX_DiscardUnknown() {
	xxx_messageInfo_S2C_ReportMission.DiscardUnknown(m)
}

var xxx_messageInfo_S2C_ReportMission proto.InternalMessageInfo

func (m *S2C_ReportMission) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *S2C_ReportMission) GetRet() *OperationResult {
	if m != nil {
		return m.Ret
	}
	return nil
}

// 领取任务奖励
type C2S_GetMissionReward struct {
	Id                   int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *C2S_GetMissionReward) Reset()         { *m = C2S_GetMissionReward{} }
func (m *C2S_GetMissionReward) String() string { return proto.CompactTextString(m) }
func (*C2S_GetMissionReward) ProtoMessage()    {}
func (*C2S_GetMissionReward) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1680e55bbb2433d, []int{81}
}
func (m *C2S_GetMissionReward) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *C2S_GetMissionReward) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_C2S_GetMissionReward.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *C2S_GetMissionReward) XXX_Merge(src proto.Message) {
	xxx_messageInfo_C2S_GetMissionReward.Merge(m, src)
}
func (m *C2S_GetMissionReward) XXX_Size() int {
	return m.Size()
}
func (m *C2S_GetMissionReward) XXX_DiscardUnknown() {
	xxx_messageInfo_C2S_GetMissionReward.DiscardUnknown(m)
}

var xxx_messageInfo_C2S_GetMissionReward proto.InternalMessageInfo

func (m *C2S_GetMissionReward) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

type S2C_GetMissionReward struct {
	Id                   int32            `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Ret                  *OperationResult `protobuf:"bytes,2,opt,name=ret,proto3" json:"ret,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *S2C_GetMissionReward) Reset()         { *m = S2C_GetMissionReward{} }
func (m *S2C_GetMissionReward) String() string { return proto.CompactTextString(m) }
func (*S2C_GetMissionReward) ProtoMessage()    {}
func (*S2C_GetMissionReward) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1680e55bbb2433d, []int{82}
}
func (m *S2C_GetMissionReward) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *S2C_GetMissionReward) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_S2C_GetMissionReward.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *S2C_GetMissionReward) XXX_Merge(src proto.Message) {
	xxx_messageInfo_S2C_GetMissionReward.Merge(m, src)
}
func (m *S2C_GetMissionReward) XXX_Size() int {
	return m.Size()
}
func (m *S2C_GetMissionReward) XXX_DiscardUnknown() {
	xxx_messageInfo_S2C_GetMissionReward.DiscardUnknown(m)
}

var xxx_messageInfo_S2C_GetMissionReward proto.InternalMessageInfo

func (m *S2C_GetMissionReward) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *S2C_GetMissionReward) GetRet() *OperationResult {
	if m != nil {
		return m.Ret
	}
	return nil
}

// 可以接受任务列表
type S2C_MissionCanAcceptList struct {
	MissionId            []int32  `protobuf:"varint,1,rep,packed,name=missionId,proto3" json:"missionId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *S2C_MissionCanAcceptList) Reset()         { *m = S2C_MissionCanAcceptList{} }
func (m *S2C_MissionCanAcceptList) String() string { return proto.CompactTextString(m) }
func (*S2C_MissionCanAcceptList) ProtoMessage()    {}
func (*S2C_MissionCanAcceptList) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1680e55bbb2433d, []int{83}
}
func (m *S2C_MissionCanAcceptList) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *S2C_MissionCanAcceptList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_S2C_MissionCanAcceptList.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *S2C_MissionCanAcceptList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_S2C_MissionCanAcceptList.Merge(m, src)
}
func (m *S2C_MissionCanAcceptList) XXX_Size() int {
	return m.Size()
}
func (m *S2C_MissionCanAcceptList) XXX_DiscardUnknown() {
	xxx_messageInfo_S2C_MissionCanAcceptList.DiscardUnknown(m)
}

var xxx_messageInfo_S2C_MissionCanAcceptList proto.InternalMessageInfo

func (m *S2C_MissionCanAcceptList) GetMissionId() []int32 {
	if m != nil {
		return m.MissionId
	}
	return nil
}

//-------------------------------theme begin-----------------------------------
// 家具信息
type XFurniture struct {
	Id                   int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Pos                  int32    `protobuf:"varint,2,opt,name=pos,proto3" json:"pos,omitempty"`
	Dir                  int32    `protobuf:"varint,3,opt,name=dir,proto3" json:"dir,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *XFurniture) Reset()         { *m = XFurniture{} }
func (m *XFurniture) String() string { return proto.CompactTextString(m) }
func (*XFurniture) ProtoMessage()    {}
func (*XFurniture) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1680e55bbb2433d, []int{84}
}
func (m *XFurniture) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *XFurniture) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_XFurniture.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *XFurniture) XXX_Merge(src proto.Message) {
	xxx_messageInfo_XFurniture.Merge(m, src)
}
func (m *XFurniture) XXX_Size() int {
	return m.Size()
}
func (m *XFurniture) XXX_DiscardUnknown() {
	xxx_messageInfo_XFurniture.DiscardUnknown(m)
}

var xxx_messageInfo_XFurniture proto.InternalMessageInfo

func (m *XFurniture) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *XFurniture) GetPos() int32 {
	if m != nil {
		return m.Pos
	}
	return 0
}

func (m *XFurniture) GetDir() int32 {
	if m != nil {
		return m.Dir
	}
	return 0
}

// 主题信息
type XTheme struct {
	Id                   int32         `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string        `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Unlock               bool          `protobuf:"varint,3,opt,name=unlock,proto3" json:"unlock,omitempty"`
	Furniturelist        []*XFurniture `protobuf:"bytes,4,rep,name=furniturelist,proto3" json:"furniturelist,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *XTheme) Reset()         { *m = XTheme{} }
func (m *XTheme) String() string { return proto.CompactTextString(m) }
func (*XTheme) ProtoMessage()    {}
func (*XTheme) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1680e55bbb2433d, []int{85}
}
func (m *XTheme) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *XTheme) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_XTheme.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *XTheme) XXX_Merge(src proto.Message) {
	xxx_messageInfo_XTheme.Merge(m, src)
}
func (m *XTheme) XXX_Size() int {
	return m.Size()
}
func (m *XTheme) XXX_DiscardUnknown() {
	xxx_messageInfo_XTheme.DiscardUnknown(m)
}

var xxx_messageInfo_XTheme proto.InternalMessageInfo

func (m *XTheme) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *XTheme) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *XTheme) GetUnlock() bool {
	if m != nil {
		return m.Unlock
	}
	return false
}

func (m *XTheme) GetFurniturelist() []*XFurniture {
	if m != nil {
		return m.Furniturelist
	}
	return nil
}

// 房间信息
type XHomeInfo struct {
	Level                int32    `protobuf:"varint,1,opt,name=level,proto3" json:"level,omitempty"`
	CurrThemeId          int32    `protobuf:"varint,2,opt,name=currThemeId,proto3" json:"currThemeId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *XHomeInfo) Reset()         { *m = XHomeInfo{} }
func (m *XHomeInfo) String() string { return proto.CompactTextString(m) }
func (*XHomeInfo) ProtoMessage()    {}
func (*XHomeInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1680e55bbb2433d, []int{86}
}
func (m *XHomeInfo) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *XHomeInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_XHomeInfo.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *XHomeInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_XHomeInfo.Merge(m, src)
}
func (m *XHomeInfo) XXX_Size() int {
	return m.Size()
}
func (m *XHomeInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_XHomeInfo.DiscardUnknown(m)
}

var xxx_messageInfo_XHomeInfo proto.InternalMessageInfo

func (m *XHomeInfo) GetLevel() int32 {
	if m != nil {
		return m.Level
	}
	return 0
}

func (m *XHomeInfo) GetCurrThemeId() int32 {
	if m != nil {
		return m.CurrThemeId
	}
	return 0
}

// 请求房间信息
type C2S_GetHomeInfo struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *C2S_GetHomeInfo) Reset()         { *m = C2S_GetHomeInfo{} }
func (m *C2S_GetHomeInfo) String() string { return proto.CompactTextString(m) }
func (*C2S_GetHomeInfo) ProtoMessage()    {}
func (*C2S_GetHomeInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1680e55bbb2433d, []int{87}
}
func (m *C2S_GetHomeInfo) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *C2S_GetHomeInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_C2S_GetHomeInfo.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *C2S_GetHomeInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_C2S_GetHomeInfo.Merge(m, src)
}
func (m *C2S_GetHomeInfo) XXX_Size() int {
	return m.Size()
}
func (m *C2S_GetHomeInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_C2S_GetHomeInfo.DiscardUnknown(m)
}

var xxx_messageInfo_C2S_GetHomeInfo proto.InternalMessageInfo

// 下发房间信息
type S2C_GetHomeInfo struct {
	Home                 *XHomeInfo `protobuf:"bytes,1,opt,name=home,proto3" json:"home,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *S2C_GetHomeInfo) Reset()         { *m = S2C_GetHomeInfo{} }
func (m *S2C_GetHomeInfo) String() string { return proto.CompactTextString(m) }
func (*S2C_GetHomeInfo) ProtoMessage()    {}
func (*S2C_GetHomeInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1680e55bbb2433d, []int{88}
}
func (m *S2C_GetHomeInfo) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *S2C_GetHomeInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_S2C_GetHomeInfo.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *S2C_GetHomeInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_S2C_GetHomeInfo.Merge(m, src)
}
func (m *S2C_GetHomeInfo) XXX_Size() int {
	return m.Size()
}
func (m *S2C_GetHomeInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_S2C_GetHomeInfo.DiscardUnknown(m)
}

var xxx_messageInfo_S2C_GetHomeInfo proto.InternalMessageInfo

func (m *S2C_GetHomeInfo) GetHome() *XHomeInfo {
	if m != nil {
		return m.Home
	}
	return nil
}

// 请求所有主题信息
type C2S_GetAllThemesInfo struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *C2S_GetAllThemesInfo) Reset()         { *m = C2S_GetAllThemesInfo{} }
func (m *C2S_GetAllThemesInfo) String() string { return proto.CompactTextString(m) }
func (*C2S_GetAllThemesInfo) ProtoMessage()    {}
func (*C2S_GetAllThemesInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1680e55bbb2433d, []int{89}
}
func (m *C2S_GetAllThemesInfo) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *C2S_GetAllThemesInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_C2S_GetAllThemesInfo.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *C2S_GetAllThemesInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_C2S_GetAllThemesInfo.Merge(m, src)
}
func (m *C2S_GetAllThemesInfo) XXX_Size() int {
	return m.Size()
}
func (m *C2S_GetAllThemesInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_C2S_GetAllThemesInfo.DiscardUnknown(m)
}

var xxx_messageInfo_C2S_GetAllThemesInfo proto.InternalMessageInfo

// 下发所有主题信息
type S2C_GetAllThemesInfo struct {
	Themes               []*XTheme `protobuf:"bytes,1,rep,name=themes,proto3" json:"themes,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *S2C_GetAllThemesInfo) Reset()         { *m = S2C_GetAllThemesInfo{} }
func (m *S2C_GetAllThemesInfo) String() string { return proto.CompactTextString(m) }
func (*S2C_GetAllThemesInfo) ProtoMessage()    {}
func (*S2C_GetAllThemesInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1680e55bbb2433d, []int{90}
}
func (m *S2C_GetAllThemesInfo) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *S2C_GetAllThemesInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_S2C_GetAllThemesInfo.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *S2C_GetAllThemesInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_S2C_GetAllThemesInfo.Merge(m, src)
}
func (m *S2C_GetAllThemesInfo) XXX_Size() int {
	return m.Size()
}
func (m *S2C_GetAllThemesInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_S2C_GetAllThemesInfo.DiscardUnknown(m)
}

var xxx_messageInfo_S2C_GetAllThemesInfo proto.InternalMessageInfo

func (m *S2C_GetAllThemesInfo) GetThemes() []*XTheme {
	if m != nil {
		return m.Themes
	}
	return nil
}

// 请求单个主题信息
type C2S_GetSingleThemeInfo struct {
	Id                   int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *C2S_GetSingleThemeInfo) Reset()         { *m = C2S_GetSingleThemeInfo{} }
func (m *C2S_GetSingleThemeInfo) String() string { return proto.CompactTextString(m) }
func (*C2S_GetSingleThemeInfo) ProtoMessage()    {}
func (*C2S_GetSingleThemeInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1680e55bbb2433d, []int{91}
}
func (m *C2S_GetSingleThemeInfo) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *C2S_GetSingleThemeInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_C2S_GetSingleThemeInfo.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *C2S_GetSingleThemeInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_C2S_GetSingleThemeInfo.Merge(m, src)
}
func (m *C2S_GetSingleThemeInfo) XXX_Size() int {
	return m.Size()
}
func (m *C2S_GetSingleThemeInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_C2S_GetSingleThemeInfo.DiscardUnknown(m)
}

var xxx_messageInfo_C2S_GetSingleThemeInfo proto.InternalMessageInfo

func (m *C2S_GetSingleThemeInfo) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

// 下发单个主题信息
type S2C_GetSingleThemeInfo struct {
	Theme                *XTheme  `protobuf:"bytes,1,opt,name=theme,proto3" json:"theme,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *S2C_GetSingleThemeInfo) Reset()         { *m = S2C_GetSingleThemeInfo{} }
func (m *S2C_GetSingleThemeInfo) String() string { return proto.CompactTextString(m) }
func (*S2C_GetSingleThemeInfo) ProtoMessage()    {}
func (*S2C_GetSingleThemeInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1680e55bbb2433d, []int{92}
}
func (m *S2C_GetSingleThemeInfo) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *S2C_GetSingleThemeInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_S2C_GetSingleThemeInfo.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *S2C_GetSingleThemeInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_S2C_GetSingleThemeInfo.Merge(m, src)
}
func (m *S2C_GetSingleThemeInfo) XXX_Size() int {
	return m.Size()
}
func (m *S2C_GetSingleThemeInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_S2C_GetSingleThemeInfo.DiscardUnknown(m)
}

var xxx_messageInfo_S2C_GetSingleThemeInfo proto.InternalMessageInfo

func (m *S2C_GetSingleThemeInfo) GetTheme() *XTheme {
	if m != nil {
		return m.Theme
	}
	return nil
}

// 保存配置到主题
type C2S_SaveThemeInfo struct {
	Theme                *XTheme  `protobuf:"bytes,1,opt,name=theme,proto3" json:"theme,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *C2S_SaveThemeInfo) Reset()         { *m = C2S_SaveThemeInfo{} }
func (m *C2S_SaveThemeInfo) String() string { return proto.CompactTextString(m) }
func (*C2S_SaveThemeInfo) ProtoMessage()    {}
func (*C2S_SaveThemeInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1680e55bbb2433d, []int{93}
}
func (m *C2S_SaveThemeInfo) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *C2S_SaveThemeInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_C2S_SaveThemeInfo.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *C2S_SaveThemeInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_C2S_SaveThemeInfo.Merge(m, src)
}
func (m *C2S_SaveThemeInfo) XXX_Size() int {
	return m.Size()
}
func (m *C2S_SaveThemeInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_C2S_SaveThemeInfo.DiscardUnknown(m)
}

var xxx_messageInfo_C2S_SaveThemeInfo proto.InternalMessageInfo

func (m *C2S_SaveThemeInfo) GetTheme() *XTheme {
	if m != nil {
		return m.Theme
	}
	return nil
}

// 请求家园升级(扩容)
type C2S_HomeUp struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *C2S_HomeUp) Reset()         { *m = C2S_HomeUp{} }
func (m *C2S_HomeUp) String() string { return proto.CompactTextString(m) }
func (*C2S_HomeUp) ProtoMessage()    {}
func (*C2S_HomeUp) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1680e55bbb2433d, []int{94}
}
func (m *C2S_HomeUp) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *C2S_HomeUp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_C2S_HomeUp.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *C2S_HomeUp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_C2S_HomeUp.Merge(m, src)
}
func (m *C2S_HomeUp) XXX_Size() int {
	return m.Size()
}
func (m *C2S_HomeUp) XXX_DiscardUnknown() {
	xxx_messageInfo_C2S_HomeUp.DiscardUnknown(m)
}

var xxx_messageInfo_C2S_HomeUp proto.InternalMessageInfo

// 请求主题改名
type C2S_ChangeThemeName struct {
	Id                   int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *C2S_ChangeThemeName) Reset()         { *m = C2S_ChangeThemeName{} }
func (m *C2S_ChangeThemeName) String() string { return proto.CompactTextString(m) }
func (*C2S_ChangeThemeName) ProtoMessage()    {}
func (*C2S_ChangeThemeName) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1680e55bbb2433d, []int{95}
}
func (m *C2S_ChangeThemeName) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *C2S_ChangeThemeName) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_C2S_ChangeThemeName.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *C2S_ChangeThemeName) XXX_Merge(src proto.Message) {
	xxx_messageInfo_C2S_ChangeThemeName.Merge(m, src)
}
func (m *C2S_ChangeThemeName) XXX_Size() int {
	return m.Size()
}
func (m *C2S_ChangeThemeName) XXX_DiscardUnknown() {
	xxx_messageInfo_C2S_ChangeThemeName.DiscardUnknown(m)
}

var xxx_messageInfo_C2S_ChangeThemeName proto.InternalMessageInfo

func (m *C2S_ChangeThemeName) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *C2S_ChangeThemeName) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

// 请求解锁主题
type C2S_UnlockTheme struct {
	Id                   int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *C2S_UnlockTheme) Reset()         { *m = C2S_UnlockTheme{} }
func (m *C2S_UnlockTheme) String() string { return proto.CompactTextString(m) }
func (*C2S_UnlockTheme) ProtoMessage()    {}
func (*C2S_UnlockTheme) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1680e55bbb2433d, []int{96}
}
func (m *C2S_UnlockTheme) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *C2S_UnlockTheme) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_C2S_UnlockTheme.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *C2S_UnlockTheme) XXX_Merge(src proto.Message) {
	xxx_messageInfo_C2S_UnlockTheme.Merge(m, src)
}
func (m *C2S_UnlockTheme) XXX_Size() int {
	return m.Size()
}
func (m *C2S_UnlockTheme) XXX_DiscardUnknown() {
	xxx_messageInfo_C2S_UnlockTheme.DiscardUnknown(m)
}

var xxx_messageInfo_C2S_UnlockTheme proto.InternalMessageInfo

func (m *C2S_UnlockTheme) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

//--------------------------------Collect Begin--------------------------------
// 请求树木砍伐
type C2S_Forest_CutTree struct {
	TreeId               int32    `protobuf:"varint,1,opt,name=treeId,proto3" json:"treeId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *C2S_Forest_CutTree) Reset()         { *m = C2S_Forest_CutTree{} }
func (m *C2S_Forest_CutTree) String() string { return proto.CompactTextString(m) }
func (*C2S_Forest_CutTree) ProtoMessage()    {}
func (*C2S_Forest_CutTree) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1680e55bbb2433d, []int{97}
}
func (m *C2S_Forest_CutTree) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *C2S_Forest_CutTree) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_C2S_Forest_CutTree.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *C2S_Forest_CutTree) XXX_Merge(src proto.Message) {
	xxx_messageInfo_C2S_Forest_CutTree.Merge(m, src)
}
func (m *C2S_Forest_CutTree) XXX_Size() int {
	return m.Size()
}
func (m *C2S_Forest_CutTree) XXX_DiscardUnknown() {
	xxx_messageInfo_C2S_Forest_CutTree.DiscardUnknown(m)
}

var xxx_messageInfo_C2S_Forest_CutTree proto.InternalMessageInfo

func (m *C2S_Forest_CutTree) GetTreeId() int32 {
	if m != nil {
		return m.TreeId
	}
	return 0
}

// 回复砍伐结果
type S2C_Forest_CutTree struct {
	TreeId               int32            `protobuf:"varint,1,opt,name=treeId,proto3" json:"treeId,omitempty"`
	Ret                  *OperationResult `protobuf:"bytes,2,opt,name=ret,proto3" json:"ret,omitempty"`
	ItemId               []int32          `protobuf:"varint,3,rep,packed,name=itemId,proto3" json:"itemId,omitempty"`
	ItemCount            []int32          `protobuf:"varint,4,rep,packed,name=itemCount,proto3" json:"itemCount,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *S2C_Forest_CutTree) Reset()         { *m = S2C_Forest_CutTree{} }
func (m *S2C_Forest_CutTree) String() string { return proto.CompactTextString(m) }
func (*S2C_Forest_CutTree) ProtoMessage()    {}
func (*S2C_Forest_CutTree) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1680e55bbb2433d, []int{98}
}
func (m *S2C_Forest_CutTree) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *S2C_Forest_CutTree) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_S2C_Forest_CutTree.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *S2C_Forest_CutTree) XXX_Merge(src proto.Message) {
	xxx_messageInfo_S2C_Forest_CutTree.Merge(m, src)
}
func (m *S2C_Forest_CutTree) XXX_Size() int {
	return m.Size()
}
func (m *S2C_Forest_CutTree) XXX_DiscardUnknown() {
	xxx_messageInfo_S2C_Forest_CutTree.DiscardUnknown(m)
}

var xxx_messageInfo_S2C_Forest_CutTree proto.InternalMessageInfo

func (m *S2C_Forest_CutTree) GetTreeId() int32 {
	if m != nil {
		return m.TreeId
	}
	return 0
}

func (m *S2C_Forest_CutTree) GetRet() *OperationResult {
	if m != nil {
		return m.Ret
	}
	return nil
}

func (m *S2C_Forest_CutTree) GetItemId() []int32 {
	if m != nil {
		return m.ItemId
	}
	return nil
}

func (m *S2C_Forest_CutTree) GetItemCount() []int32 {
	if m != nil {
		return m.ItemCount
	}
	return nil
}

// 请求曾经进入矿场最大层数(通关记录)
type C2S_Mine_GetMaxLayer struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *C2S_Mine_GetMaxLayer) Reset()         { *m = C2S_Mine_GetMaxLayer{} }
func (m *C2S_Mine_GetMaxLayer) String() string { return proto.CompactTextString(m) }
func (*C2S_Mine_GetMaxLayer) ProtoMessage()    {}
func (*C2S_Mine_GetMaxLayer) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1680e55bbb2433d, []int{99}
}
func (m *C2S_Mine_GetMaxLayer) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *C2S_Mine_GetMaxLayer) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_C2S_Mine_GetMaxLayer.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *C2S_Mine_GetMaxLayer) XXX_Merge(src proto.Message) {
	xxx_messageInfo_C2S_Mine_GetMaxLayer.Merge(m, src)
}
func (m *C2S_Mine_GetMaxLayer) XXX_Size() int {
	return m.Size()
}
func (m *C2S_Mine_GetMaxLayer) XXX_DiscardUnknown() {
	xxx_messageInfo_C2S_Mine_GetMaxLayer.DiscardUnknown(m)
}

var xxx_messageInfo_C2S_Mine_GetMaxLayer proto.InternalMessageInfo

// 回复进入矿场最大层数(通关记录)
type S2C_Mine_GetMaxLayer struct {
	MaxLayer             int32    `protobuf:"varint,1,opt,name=maxLayer,proto3" json:"maxLayer,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *S2C_Mine_GetMaxLayer) Reset()         { *m = S2C_Mine_GetMaxLayer{} }
func (m *S2C_Mine_GetMaxLayer) String() string { return proto.CompactTextString(m) }
func (*S2C_Mine_GetMaxLayer) ProtoMessage()    {}
func (*S2C_Mine_GetMaxLayer) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1680e55bbb2433d, []int{100}
}
func (m *S2C_Mine_GetMaxLayer) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *S2C_Mine_GetMaxLayer) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_S2C_Mine_GetMaxLayer.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *S2C_Mine_GetMaxLayer) XXX_Merge(src proto.Message) {
	xxx_messageInfo_S2C_Mine_GetMaxLayer.Merge(m, src)
}
func (m *S2C_Mine_GetMaxLayer) XXX_Size() int {
	return m.Size()
}
func (m *S2C_Mine_GetMaxLayer) XXX_DiscardUnknown() {
	xxx_messageInfo_S2C_Mine_GetMaxLayer.DiscardUnknown(m)
}

var xxx_messageInfo_S2C_Mine_GetMaxLayer proto.InternalMessageInfo

func (m *S2C_Mine_GetMaxLayer) GetMaxLayer() int32 {
	if m != nil {
		return m.MaxLayer
	}
	return 0
}

// 请求进入指定层数矿场
type C2S_Mine_EnterLayer struct {
	Layer                int32    `protobuf:"varint,1,opt,name=layer,proto3" json:"layer,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *C2S_Mine_EnterLayer) Reset()         { *m = C2S_Mine_EnterLayer{} }
func (m *C2S_Mine_EnterLayer) String() string { return proto.CompactTextString(m) }
func (*C2S_Mine_EnterLayer) ProtoMessage()    {}
func (*C2S_Mine_EnterLayer) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1680e55bbb2433d, []int{101}
}
func (m *C2S_Mine_EnterLayer) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *C2S_Mine_EnterLayer) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_C2S_Mine_EnterLayer.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *C2S_Mine_EnterLayer) XXX_Merge(src proto.Message) {
	xxx_messageInfo_C2S_Mine_EnterLayer.Merge(m, src)
}
func (m *C2S_Mine_EnterLayer) XXX_Size() int {
	return m.Size()
}
func (m *C2S_Mine_EnterLayer) XXX_DiscardUnknown() {
	xxx_messageInfo_C2S_Mine_EnterLayer.DiscardUnknown(m)
}

var xxx_messageInfo_C2S_Mine_EnterLayer proto.InternalMessageInfo

func (m *C2S_Mine_EnterLayer) GetLayer() int32 {
	if m != nil {
		return m.Layer
	}
	return 0
}

// 回复进入指定层数矿场
type S2C_Mine_EnterLayer struct {
	Layer                int32               `protobuf:"varint,1,opt,name=layer,proto3" json:"layer,omitempty"`
	ErrCode              Enum_Mine_EnterCode `protobuf:"varint,2,opt,name=errCode,proto3,enum=protocol.Enum_Mine_EnterCode" json:"errCode,omitempty"`
	StartIndex           int32               `protobuf:"varint,3,opt,name=startIndex,proto3" json:"startIndex,omitempty"`
	NeedEnergy           int32               `protobuf:"varint,4,opt,name=needEnergy,proto3" json:"needEnergy,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *S2C_Mine_EnterLayer) Reset()         { *m = S2C_Mine_EnterLayer{} }
func (m *S2C_Mine_EnterLayer) String() string { return proto.CompactTextString(m) }
func (*S2C_Mine_EnterLayer) ProtoMessage()    {}
func (*S2C_Mine_EnterLayer) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1680e55bbb2433d, []int{102}
}
func (m *S2C_Mine_EnterLayer) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *S2C_Mine_EnterLayer) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_S2C_Mine_EnterLayer.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *S2C_Mine_EnterLayer) XXX_Merge(src proto.Message) {
	xxx_messageInfo_S2C_Mine_EnterLayer.Merge(m, src)
}
func (m *S2C_Mine_EnterLayer) XXX_Size() int {
	return m.Size()
}
func (m *S2C_Mine_EnterLayer) XXX_DiscardUnknown() {
	xxx_messageInfo_S2C_Mine_EnterLayer.DiscardUnknown(m)
}

var xxx_messageInfo_S2C_Mine_EnterLayer proto.InternalMessageInfo

func (m *S2C_Mine_EnterLayer) GetLayer() int32 {
	if m != nil {
		return m.Layer
	}
	return 0
}

func (m *S2C_Mine_EnterLayer) GetErrCode() Enum_Mine_EnterCode {
	if m != nil {
		return m.ErrCode
	}
	return Enum_Mine_EnterCode_eMineEnterCode_NoUse
}

func (m *S2C_Mine_EnterLayer) GetStartIndex() int32 {
	if m != nil {
		return m.StartIndex
	}
	return 0
}

func (m *S2C_Mine_EnterLayer) GetNeedEnergy() int32 {
	if m != nil {
		return m.NeedEnergy
	}
	return 0
}

// 请求挖取矿物
type C2S_Mine_Dig struct {
	Index                int32    `protobuf:"varint,1,opt,name=index,proto3" json:"index,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *C2S_Mine_Dig) Reset()         { *m = C2S_Mine_Dig{} }
func (m *C2S_Mine_Dig) String() string { return proto.CompactTextString(m) }
func (*C2S_Mine_Dig) ProtoMessage()    {}
func (*C2S_Mine_Dig) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1680e55bbb2433d, []int{103}
}
func (m *C2S_Mine_Dig) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *C2S_Mine_Dig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_C2S_Mine_Dig.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *C2S_Mine_Dig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_C2S_Mine_Dig.Merge(m, src)
}
func (m *C2S_Mine_Dig) XXX_Size() int {
	return m.Size()
}
func (m *C2S_Mine_Dig) XXX_DiscardUnknown() {
	xxx_messageInfo_C2S_Mine_Dig.DiscardUnknown(m)
}

var xxx_messageInfo_C2S_Mine_Dig proto.InternalMessageInfo

func (m *C2S_Mine_Dig) GetIndex() int32 {
	if m != nil {
		return m.Index
	}
	return 0
}

// 回复挖取矿物
type S2C_Mine_Dig struct {
	Index                int32                `protobuf:"varint,1,opt,name=index,proto3" json:"index,omitempty"`
	ErrCode              Enum_Mine_DigCode    `protobuf:"varint,2,opt,name=errCode,proto3,enum=protocol.Enum_Mine_DigCode" json:"errCode,omitempty"`
	ItemId               int32                `protobuf:"varint,3,opt,name=itemId,proto3" json:"itemId,omitempty"`
	ItemCount            int32                `protobuf:"varint,4,opt,name=itemCount,proto3" json:"itemCount,omitempty"`
	RewardType           Enum_Mine_RewardType `protobuf:"varint,5,opt,name=rewardType,proto3,enum=protocol.Enum_Mine_RewardType" json:"rewardType,omitempty"`
	Rewardid             int32                `protobuf:"varint,6,opt,name=rewardid,proto3" json:"rewardid,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *S2C_Mine_Dig) Reset()         { *m = S2C_Mine_Dig{} }
func (m *S2C_Mine_Dig) String() string { return proto.CompactTextString(m) }
func (*S2C_Mine_Dig) ProtoMessage()    {}
func (*S2C_Mine_Dig) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1680e55bbb2433d, []int{104}
}
func (m *S2C_Mine_Dig) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *S2C_Mine_Dig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_S2C_Mine_Dig.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *S2C_Mine_Dig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_S2C_Mine_Dig.Merge(m, src)
}
func (m *S2C_Mine_Dig) XXX_Size() int {
	return m.Size()
}
func (m *S2C_Mine_Dig) XXX_DiscardUnknown() {
	xxx_messageInfo_S2C_Mine_Dig.DiscardUnknown(m)
}

var xxx_messageInfo_S2C_Mine_Dig proto.InternalMessageInfo

func (m *S2C_Mine_Dig) GetIndex() int32 {
	if m != nil {
		return m.Index
	}
	return 0
}

func (m *S2C_Mine_Dig) GetErrCode() Enum_Mine_DigCode {
	if m != nil {
		return m.ErrCode
	}
	return Enum_Mine_DigCode_eMineDigCode_NoUse
}

func (m *S2C_Mine_Dig) GetItemId() int32 {
	if m != nil {
		return m.ItemId
	}
	return 0
}

func (m *S2C_Mine_Dig) GetItemCount() int32 {
	if m != nil {
		return m.ItemCount
	}
	return 0
}

func (m *S2C_Mine_Dig) GetRewardType() Enum_Mine_RewardType {
	if m != nil {
		return m.RewardType
	}
	return Enum_Mine_RewardType_eMineRewardType_none
}

func (m *S2C_Mine_Dig) GetRewardid() int32 {
	if m != nil {
		return m.Rewardid
	}
	return 0
}

// 领取额外奖励
type C2S_Mine_GetReward struct {
	Index                int32    `protobuf:"varint,1,opt,name=index,proto3" json:"index,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *C2S_Mine_GetReward) Reset()         { *m = C2S_Mine_GetReward{} }
func (m *C2S_Mine_GetReward) String() string { return proto.CompactTextString(m) }
func (*C2S_Mine_GetReward) ProtoMessage()    {}
func (*C2S_Mine_GetReward) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1680e55bbb2433d, []int{105}
}
func (m *C2S_Mine_GetReward) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *C2S_Mine_GetReward) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_C2S_Mine_GetReward.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *C2S_Mine_GetReward) XXX_Merge(src proto.Message) {
	xxx_messageInfo_C2S_Mine_GetReward.Merge(m, src)
}
func (m *C2S_Mine_GetReward) XXX_Size() int {
	return m.Size()
}
func (m *C2S_Mine_GetReward) XXX_DiscardUnknown() {
	xxx_messageInfo_C2S_Mine_GetReward.DiscardUnknown(m)
}

var xxx_messageInfo_C2S_Mine_GetReward proto.InternalMessageInfo

func (m *C2S_Mine_GetReward) GetIndex() int32 {
	if m != nil {
		return m.Index
	}
	return 0
}

// 回复领取奖励
type S2C_Mine_GetReward struct {
	Index                int32                   `protobuf:"varint,1,opt,name=index,proto3" json:"index,omitempty"`
	ErrCode              Enum_Mine_GetRewardCode `protobuf:"varint,2,opt,name=errCode,proto3,enum=protocol.Enum_Mine_GetRewardCode" json:"errCode,omitempty"`
	ItemId               int32                   `protobuf:"varint,3,opt,name=itemId,proto3" json:"itemId,omitempty"`
	ItemCount            int32                   `protobuf:"varint,4,opt,name=itemCount,proto3" json:"itemCount,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *S2C_Mine_GetReward) Reset()         { *m = S2C_Mine_GetReward{} }
func (m *S2C_Mine_GetReward) String() string { return proto.CompactTextString(m) }
func (*S2C_Mine_GetReward) ProtoMessage()    {}
func (*S2C_Mine_GetReward) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1680e55bbb2433d, []int{106}
}
func (m *S2C_Mine_GetReward) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *S2C_Mine_GetReward) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_S2C_Mine_GetReward.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *S2C_Mine_GetReward) XXX_Merge(src proto.Message) {
	xxx_messageInfo_S2C_Mine_GetReward.Merge(m, src)
}
func (m *S2C_Mine_GetReward) XXX_Size() int {
	return m.Size()
}
func (m *S2C_Mine_GetReward) XXX_DiscardUnknown() {
	xxx_messageInfo_S2C_Mine_GetReward.DiscardUnknown(m)
}

var xxx_messageInfo_S2C_Mine_GetReward proto.InternalMessageInfo

func (m *S2C_Mine_GetReward) GetIndex() int32 {
	if m != nil {
		return m.Index
	}
	return 0
}

func (m *S2C_Mine_GetReward) GetErrCode() Enum_Mine_GetRewardCode {
	if m != nil {
		return m.ErrCode
	}
	return Enum_Mine_GetRewardCode_eMineGetRewardCode_NoUse
}

func (m *S2C_Mine_GetReward) GetItemId() int32 {
	if m != nil {
		return m.ItemId
	}
	return 0
}

func (m *S2C_Mine_GetReward) GetItemCount() int32 {
	if m != nil {
		return m.ItemCount
	}
	return 0
}

//------------------------------UserValue Begin--------------------------------
// 请求同步玩家所有基础属性
type C2S_GetUserAllValue struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *C2S_GetUserAllValue) Reset()         { *m = C2S_GetUserAllValue{} }
func (m *C2S_GetUserAllValue) String() string { return proto.CompactTextString(m) }
func (*C2S_GetUserAllValue) ProtoMessage()    {}
func (*C2S_GetUserAllValue) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1680e55bbb2433d, []int{107}
}
func (m *C2S_GetUserAllValue) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *C2S_GetUserAllValue) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_C2S_GetUserAllValue.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *C2S_GetUserAllValue) XXX_Merge(src proto.Message) {
	xxx_messageInfo_C2S_GetUserAllValue.Merge(m, src)
}
func (m *C2S_GetUserAllValue) XXX_Size() int {
	return m.Size()
}
func (m *C2S_GetUserAllValue) XXX_DiscardUnknown() {
	xxx_messageInfo_C2S_GetUserAllValue.DiscardUnknown(m)
}

var xxx_messageInfo_C2S_GetUserAllValue proto.InternalMessageInfo

// 下发玩家所有基础属性
type S2C_GetUserAllValue struct {
	UserValue            *XUser   `protobuf:"bytes,1,opt,name=userValue,proto3" json:"userValue,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *S2C_GetUserAllValue) Reset()         { *m = S2C_GetUserAllValue{} }
func (m *S2C_GetUserAllValue) String() string { return proto.CompactTextString(m) }
func (*S2C_GetUserAllValue) ProtoMessage()    {}
func (*S2C_GetUserAllValue) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1680e55bbb2433d, []int{108}
}
func (m *S2C_GetUserAllValue) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *S2C_GetUserAllValue) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_S2C_GetUserAllValue.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *S2C_GetUserAllValue) XXX_Merge(src proto.Message) {
	xxx_messageInfo_S2C_GetUserAllValue.Merge(m, src)
}
func (m *S2C_GetUserAllValue) XXX_Size() int {
	return m.Size()
}
func (m *S2C_GetUserAllValue) XXX_DiscardUnknown() {
	xxx_messageInfo_S2C_GetUserAllValue.DiscardUnknown(m)
}

var xxx_messageInfo_S2C_GetUserAllValue proto.InternalMessageInfo

func (m *S2C_GetUserAllValue) GetUserValue() *XUser {
	if m != nil {
		return m.UserValue
	}
	return nil
}

type C2S_ChangeUserIntAttr struct {
	AttrSort             Enum_UserAttr `protobuf:"varint,1,opt,name=attrSort,proto3,enum=protocol.Enum_UserAttr" json:"attrSort,omitempty"`
	ChangeToValue        int32         `protobuf:"varint,2,opt,name=changeToValue,proto3" json:"changeToValue,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *C2S_ChangeUserIntAttr) Reset()         { *m = C2S_ChangeUserIntAttr{} }
func (m *C2S_ChangeUserIntAttr) String() string { return proto.CompactTextString(m) }
func (*C2S_ChangeUserIntAttr) ProtoMessage()    {}
func (*C2S_ChangeUserIntAttr) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1680e55bbb2433d, []int{109}
}
func (m *C2S_ChangeUserIntAttr) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *C2S_ChangeUserIntAttr) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_C2S_ChangeUserIntAttr.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *C2S_ChangeUserIntAttr) XXX_Merge(src proto.Message) {
	xxx_messageInfo_C2S_ChangeUserIntAttr.Merge(m, src)
}
func (m *C2S_ChangeUserIntAttr) XXX_Size() int {
	return m.Size()
}
func (m *C2S_ChangeUserIntAttr) XXX_DiscardUnknown() {
	xxx_messageInfo_C2S_ChangeUserIntAttr.DiscardUnknown(m)
}

var xxx_messageInfo_C2S_ChangeUserIntAttr proto.InternalMessageInfo

func (m *C2S_ChangeUserIntAttr) GetAttrSort() Enum_UserAttr {
	if m != nil {
		return m.AttrSort
	}
	return Enum_UserAttr_unused
}

func (m *C2S_ChangeUserIntAttr) GetChangeToValue() int32 {
	if m != nil {
		return m.ChangeToValue
	}
	return 0
}

// 玩家的属性数据(类型为int,比如money,hp,level)变动
type S2C_ChangeUserIntAttr struct {
	Ret                  *OperationResult `protobuf:"bytes,1,opt,name=ret,proto3" json:"ret,omitempty"`
	AttrSort             Enum_UserAttr    `protobuf:"varint,2,opt,name=attrSort,proto3,enum=protocol.Enum_UserAttr" json:"attrSort,omitempty"`
	CurValue             int32            `protobuf:"varint,3,opt,name=curValue,proto3" json:"curValue,omitempty"`
	OrigValue            int32            `protobuf:"varint,4,opt,name=origValue,proto3" json:"origValue,omitempty"`
	Reason               int32            `protobuf:"varint,5,opt,name=reason,proto3" json:"reason,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *S2C_ChangeUserIntAttr) Reset()         { *m = S2C_ChangeUserIntAttr{} }
func (m *S2C_ChangeUserIntAttr) String() string { return proto.CompactTextString(m) }
func (*S2C_ChangeUserIntAttr) ProtoMessage()    {}
func (*S2C_ChangeUserIntAttr) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1680e55bbb2433d, []int{110}
}
func (m *S2C_ChangeUserIntAttr) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *S2C_ChangeUserIntAttr) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_S2C_ChangeUserIntAttr.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *S2C_ChangeUserIntAttr) XXX_Merge(src proto.Message) {
	xxx_messageInfo_S2C_ChangeUserIntAttr.Merge(m, src)
}
func (m *S2C_ChangeUserIntAttr) XXX_Size() int {
	return m.Size()
}
func (m *S2C_ChangeUserIntAttr) XXX_DiscardUnknown() {
	xxx_messageInfo_S2C_ChangeUserIntAttr.DiscardUnknown(m)
}

var xxx_messageInfo_S2C_ChangeUserIntAttr proto.InternalMessageInfo

func (m *S2C_ChangeUserIntAttr) GetRet() *OperationResult {
	if m != nil {
		return m.Ret
	}
	return nil
}

func (m *S2C_ChangeUserIntAttr) GetAttrSort() Enum_UserAttr {
	if m != nil {
		return m.AttrSort
	}
	return Enum_UserAttr_unused
}

func (m *S2C_ChangeUserIntAttr) GetCurValue() int32 {
	if m != nil {
		return m.CurValue
	}
	return 0
}

func (m *S2C_ChangeUserIntAttr) GetOrigValue() int32 {
	if m != nil {
		return m.OrigValue
	}
	return 0
}

func (m *S2C_ChangeUserIntAttr) GetReason() int32 {
	if m != nil {
		return m.Reason
	}
	return 0
}

type C2S_ChangeUserStrAttr struct {
	AttrSort             Enum_UserAttr `protobuf:"varint,1,opt,name=attrSort,proto3,enum=protocol.Enum_UserAttr" json:"attrSort,omitempty"`
	ChangeToValue        string        `protobuf:"bytes,2,opt,name=changeToValue,proto3" json:"changeToValue,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *C2S_ChangeUserStrAttr) Reset()         { *m = C2S_ChangeUserStrAttr{} }
func (m *C2S_ChangeUserStrAttr) String() string { return proto.CompactTextString(m) }
func (*C2S_ChangeUserStrAttr) ProtoMessage()    {}
func (*C2S_ChangeUserStrAttr) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1680e55bbb2433d, []int{111}
}
func (m *C2S_ChangeUserStrAttr) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *C2S_ChangeUserStrAttr) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_C2S_ChangeUserStrAttr.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *C2S_ChangeUserStrAttr) XXX_Merge(src proto.Message) {
	xxx_messageInfo_C2S_ChangeUserStrAttr.Merge(m, src)
}
func (m *C2S_ChangeUserStrAttr) XXX_Size() int {
	return m.Size()
}
func (m *C2S_ChangeUserStrAttr) XXX_DiscardUnknown() {
	xxx_messageInfo_C2S_ChangeUserStrAttr.DiscardUnknown(m)
}

var xxx_messageInfo_C2S_ChangeUserStrAttr proto.InternalMessageInfo

func (m *C2S_ChangeUserStrAttr) GetAttrSort() Enum_UserAttr {
	if m != nil {
		return m.AttrSort
	}
	return Enum_UserAttr_unused
}

func (m *C2S_ChangeUserStrAttr) GetChangeToValue() string {
	if m != nil {
		return m.ChangeToValue
	}
	return ""
}

type S2C_ChangeUserStrAttr struct {
	Ret                  *OperationResult `protobuf:"bytes,1,opt,name=ret,proto3" json:"ret,omitempty"`
	AttrSort             Enum_UserAttr    `protobuf:"varint,2,opt,name=attrSort,proto3,enum=protocol.Enum_UserAttr" json:"attrSort,omitempty"`
	CurValue             string           `protobuf:"bytes,3,opt,name=curValue,proto3" json:"curValue,omitempty"`
	OrigValue            string           `protobuf:"bytes,4,opt,name=origValue,proto3" json:"origValue,omitempty"`
	Reason               int32            `protobuf:"varint,5,opt,name=reason,proto3" json:"reason,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *S2C_ChangeUserStrAttr) Reset()         { *m = S2C_ChangeUserStrAttr{} }
func (m *S2C_ChangeUserStrAttr) String() string { return proto.CompactTextString(m) }
func (*S2C_ChangeUserStrAttr) ProtoMessage()    {}
func (*S2C_ChangeUserStrAttr) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1680e55bbb2433d, []int{112}
}
func (m *S2C_ChangeUserStrAttr) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *S2C_ChangeUserStrAttr) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_S2C_ChangeUserStrAttr.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *S2C_ChangeUserStrAttr) XXX_Merge(src proto.Message) {
	xxx_messageInfo_S2C_ChangeUserStrAttr.Merge(m, src)
}
func (m *S2C_ChangeUserStrAttr) XXX_Size() int {
	return m.Size()
}
func (m *S2C_ChangeUserStrAttr) XXX_DiscardUnknown() {
	xxx_messageInfo_S2C_ChangeUserStrAttr.DiscardUnknown(m)
}

var xxx_messageInfo_S2C_ChangeUserStrAttr proto.InternalMessageInfo

func (m *S2C_ChangeUserStrAttr) GetRet() *OperationResult {
	if m != nil {
		return m.Ret
	}
	return nil
}

func (m *S2C_ChangeUserStrAttr) GetAttrSort() Enum_UserAttr {
	if m != nil {
		return m.AttrSort
	}
	return Enum_UserAttr_unused
}

func (m *S2C_ChangeUserStrAttr) GetCurValue() string {
	if m != nil {
		return m.CurValue
	}
	return ""
}

func (m *S2C_ChangeUserStrAttr) GetOrigValue() string {
	if m != nil {
		return m.OrigValue
	}
	return ""
}

func (m *S2C_ChangeUserStrAttr) GetReason() int32 {
	if m != nil {
		return m.Reason
	}
	return 0
}

type S2C_AddAttrList struct {
	AttrSort             Enum_UserAttr `protobuf:"varint,1,opt,name=attrSort,proto3,enum=protocol.Enum_UserAttr" json:"attrSort,omitempty"`
	ChangeValues         []int32       `protobuf:"varint,2,rep,packed,name=changeValues,proto3" json:"changeValues,omitempty"`
	Reason               int32         `protobuf:"varint,3,opt,name=reason,proto3" json:"reason,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *S2C_AddAttrList) Reset()         { *m = S2C_AddAttrList{} }
func (m *S2C_AddAttrList) String() string { return proto.CompactTextString(m) }
func (*S2C_AddAttrList) ProtoMessage()    {}
func (*S2C_AddAttrList) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1680e55bbb2433d, []int{113}
}
func (m *S2C_AddAttrList) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *S2C_AddAttrList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_S2C_AddAttrList.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *S2C_AddAttrList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_S2C_AddAttrList.Merge(m, src)
}
func (m *S2C_AddAttrList) XXX_Size() int {
	return m.Size()
}
func (m *S2C_AddAttrList) XXX_DiscardUnknown() {
	xxx_messageInfo_S2C_AddAttrList.DiscardUnknown(m)
}

var xxx_messageInfo_S2C_AddAttrList proto.InternalMessageInfo

func (m *S2C_AddAttrList) GetAttrSort() Enum_UserAttr {
	if m != nil {
		return m.AttrSort
	}
	return Enum_UserAttr_unused
}

func (m *S2C_AddAttrList) GetChangeValues() []int32 {
	if m != nil {
		return m.ChangeValues
	}
	return nil
}

func (m *S2C_AddAttrList) GetReason() int32 {
	if m != nil {
		return m.Reason
	}
	return 0
}

type C2S_StorePosition struct {
	X                    int32    `protobuf:"varint,1,opt,name=x,proto3" json:"x,omitempty"`
	Y                    int32    `protobuf:"varint,2,opt,name=y,proto3" json:"y,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *C2S_StorePosition) Reset()         { *m = C2S_StorePosition{} }
func (m *C2S_StorePosition) String() string { return proto.CompactTextString(m) }
func (*C2S_StorePosition) ProtoMessage()    {}
func (*C2S_StorePosition) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1680e55bbb2433d, []int{114}
}
func (m *C2S_StorePosition) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *C2S_StorePosition) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_C2S_StorePosition.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *C2S_StorePosition) XXX_Merge(src proto.Message) {
	xxx_messageInfo_C2S_StorePosition.Merge(m, src)
}
func (m *C2S_StorePosition) XXX_Size() int {
	return m.Size()
}
func (m *C2S_StorePosition) XXX_DiscardUnknown() {
	xxx_messageInfo_C2S_StorePosition.DiscardUnknown(m)
}

var xxx_messageInfo_C2S_StorePosition proto.InternalMessageInfo

func (m *C2S_StorePosition) GetX() int32 {
	if m != nil {
		return m.X
	}
	return 0
}

func (m *C2S_StorePosition) GetY() int32 {
	if m != nil {
		return m.Y
	}
	return 0
}

//一个商品条目
type ShopItem struct {
	Id                   int32                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Restriction          Enum_Shop_Restriction `protobuf:"varint,2,opt,name=restriction,proto3,enum=protocol.Enum_Shop_Restriction" json:"restriction,omitempty"`
	ResetTimeStamp       int64                 `protobuf:"varint,3,opt,name=resetTimeStamp,proto3" json:"resetTimeStamp,omitempty"`
	IsTimeLimit          bool                  `protobuf:"varint,4,opt,name=isTimeLimit,proto3" json:"isTimeLimit,omitempty"`
	CurrentTurnBuyNo     int32                 `protobuf:"varint,5,opt,name=currentTurnBuyNo,proto3" json:"currentTurnBuyNo,omitempty"`
	MaxLimit             int32                 `protobuf:"varint,6,opt,name=maxLimit,proto3" json:"maxLimit,omitempty"`
	PurchasePrice        int32                 `protobuf:"varint,7,opt,name=purchasePrice,proto3" json:"purchasePrice,omitempty"`
	StartTime            int64                 `protobuf:"varint,8,opt,name=startTime,proto3" json:"startTime,omitempty"`
	EndTime              int64                 `protobuf:"varint,9,opt,name=endTime,proto3" json:"endTime,omitempty"`
	WebChargeId          int32                 `protobuf:"varint,10,opt,name=webChargeId,proto3" json:"webChargeId,omitempty"`
	WebOrder             int32                 `protobuf:"varint,11,opt,name=webOrder,proto3" json:"webOrder,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *ShopItem) Reset()         { *m = ShopItem{} }
func (m *ShopItem) String() string { return proto.CompactTextString(m) }
func (*ShopItem) ProtoMessage()    {}
func (*ShopItem) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1680e55bbb2433d, []int{115}
}
func (m *ShopItem) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ShopItem) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ShopItem.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ShopItem) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ShopItem.Merge(m, src)
}
func (m *ShopItem) XXX_Size() int {
	return m.Size()
}
func (m *ShopItem) XXX_DiscardUnknown() {
	xxx_messageInfo_ShopItem.DiscardUnknown(m)
}

var xxx_messageInfo_ShopItem proto.InternalMessageInfo

func (m *ShopItem) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *ShopItem) GetRestriction() Enum_Shop_Restriction {
	if m != nil {
		return m.Restriction
	}
	return Enum_Shop_Restriction_shop_Restriction_unused
}

func (m *ShopItem) GetResetTimeStamp() int64 {
	if m != nil {
		return m.ResetTimeStamp
	}
	return 0
}

func (m *ShopItem) GetIsTimeLimit() bool {
	if m != nil {
		return m.IsTimeLimit
	}
	return false
}

func (m *ShopItem) GetCurrentTurnBuyNo() int32 {
	if m != nil {
		return m.CurrentTurnBuyNo
	}
	return 0
}

func (m *ShopItem) GetMaxLimit() int32 {
	if m != nil {
		return m.MaxLimit
	}
	return 0
}

func (m *ShopItem) GetPurchasePrice() int32 {
	if m != nil {
		return m.PurchasePrice
	}
	return 0
}

func (m *ShopItem) GetStartTime() int64 {
	if m != nil {
		return m.StartTime
	}
	return 0
}

func (m *ShopItem) GetEndTime() int64 {
	if m != nil {
		return m.EndTime
	}
	return 0
}

func (m *ShopItem) GetWebChargeId() int32 {
	if m != nil {
		return m.WebChargeId
	}
	return 0
}

func (m *ShopItem) GetWebOrder() int32 {
	if m != nil {
		return m.WebOrder
	}
	return 0
}

//简易版的商品条目，主要是记录是否购买过该商品
type HasBuyItem struct {
	Id                   int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	HasBuy               bool     `protobuf:"varint,2,opt,name=hasBuy,proto3" json:"hasBuy,omitempty"`
	WebChargeId          int32    `protobuf:"varint,3,opt,name=webChargeId,proto3" json:"webChargeId,omitempty"`
	WebOrder             int32    `protobuf:"varint,4,opt,name=webOrder,proto3" json:"webOrder,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HasBuyItem) Reset()         { *m = HasBuyItem{} }
func (m *HasBuyItem) String() string { return proto.CompactTextString(m) }
func (*HasBuyItem) ProtoMessage()    {}
func (*HasBuyItem) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1680e55bbb2433d, []int{116}
}
func (m *HasBuyItem) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *HasBuyItem) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_HasBuyItem.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *HasBuyItem) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HasBuyItem.Merge(m, src)
}
func (m *HasBuyItem) XXX_Size() int {
	return m.Size()
}
func (m *HasBuyItem) XXX_DiscardUnknown() {
	xxx_messageInfo_HasBuyItem.DiscardUnknown(m)
}

var xxx_messageInfo_HasBuyItem proto.InternalMessageInfo

func (m *HasBuyItem) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *HasBuyItem) GetHasBuy() bool {
	if m != nil {
		return m.HasBuy
	}
	return false
}

func (m *HasBuyItem) GetWebChargeId() int32 {
	if m != nil {
		return m.WebChargeId
	}
	return 0
}

func (m *HasBuyItem) GetWebOrder() int32 {
	if m != nil {
		return m.WebOrder
	}
	return 0
}

type S2C_Shop_GetAllItems struct {
	ChargePearl          []*HasBuyItem `protobuf:"bytes,1,rep,name=chargePearl,proto3" json:"chargePearl,omitempty"`
	GiftList             []*ShopItem   `protobuf:"bytes,2,rep,name=giftList,proto3" json:"giftList,omitempty"`
	MonthCard            []*HasBuyItem `protobuf:"bytes,3,rep,name=monthCard,proto3" json:"monthCard,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *S2C_Shop_GetAllItems) Reset()         { *m = S2C_Shop_GetAllItems{} }
func (m *S2C_Shop_GetAllItems) String() string { return proto.CompactTextString(m) }
func (*S2C_Shop_GetAllItems) ProtoMessage()    {}
func (*S2C_Shop_GetAllItems) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1680e55bbb2433d, []int{117}
}
func (m *S2C_Shop_GetAllItems) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *S2C_Shop_GetAllItems) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_S2C_Shop_GetAllItems.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *S2C_Shop_GetAllItems) XXX_Merge(src proto.Message) {
	xxx_messageInfo_S2C_Shop_GetAllItems.Merge(m, src)
}
func (m *S2C_Shop_GetAllItems) XXX_Size() int {
	return m.Size()
}
func (m *S2C_Shop_GetAllItems) XXX_DiscardUnknown() {
	xxx_messageInfo_S2C_Shop_GetAllItems.DiscardUnknown(m)
}

var xxx_messageInfo_S2C_Shop_GetAllItems proto.InternalMessageInfo

func (m *S2C_Shop_GetAllItems) GetChargePearl() []*HasBuyItem {
	if m != nil {
		return m.ChargePearl
	}
	return nil
}

func (m *S2C_Shop_GetAllItems) GetGiftList() []*ShopItem {
	if m != nil {
		return m.GiftList
	}
	return nil
}

func (m *S2C_Shop_GetAllItems) GetMonthCard() []*HasBuyItem {
	if m != nil {
		return m.MonthCard
	}
	return nil
}

type C2S_Shop_Buy struct {
	Id                   int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	ClientPrice          int32    `protobuf:"varint,2,opt,name=clientPrice,proto3" json:"clientPrice,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *C2S_Shop_Buy) Reset()         { *m = C2S_Shop_Buy{} }
func (m *C2S_Shop_Buy) String() string { return proto.CompactTextString(m) }
func (*C2S_Shop_Buy) ProtoMessage()    {}
func (*C2S_Shop_Buy) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1680e55bbb2433d, []int{118}
}
func (m *C2S_Shop_Buy) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *C2S_Shop_Buy) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_C2S_Shop_Buy.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *C2S_Shop_Buy) XXX_Merge(src proto.Message) {
	xxx_messageInfo_C2S_Shop_Buy.Merge(m, src)
}
func (m *C2S_Shop_Buy) XXX_Size() int {
	return m.Size()
}
func (m *C2S_Shop_Buy) XXX_DiscardUnknown() {
	xxx_messageInfo_C2S_Shop_Buy.DiscardUnknown(m)
}

var xxx_messageInfo_C2S_Shop_Buy proto.InternalMessageInfo

func (m *C2S_Shop_Buy) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *C2S_Shop_Buy) GetClientPrice() int32 {
	if m != nil {
		return m.ClientPrice
	}
	return 0
}

type BuyResult struct {
	ResetTimeStamp       int64    `protobuf:"varint,1,opt,name=resetTimeStamp,proto3" json:"resetTimeStamp,omitempty"`
	CurrentTurnBuyNo     int32    `protobuf:"varint,2,opt,name=currentTurnBuyNo,proto3" json:"currentTurnBuyNo,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BuyResult) Reset()         { *m = BuyResult{} }
func (m *BuyResult) String() string { return proto.CompactTextString(m) }
func (*BuyResult) ProtoMessage()    {}
func (*BuyResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1680e55bbb2433d, []int{119}
}
func (m *BuyResult) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *BuyResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_BuyResult.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *BuyResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BuyResult.Merge(m, src)
}
func (m *BuyResult) XXX_Size() int {
	return m.Size()
}
func (m *BuyResult) XXX_DiscardUnknown() {
	xxx_messageInfo_BuyResult.DiscardUnknown(m)
}

var xxx_messageInfo_BuyResult proto.InternalMessageInfo

func (m *BuyResult) GetResetTimeStamp() int64 {
	if m != nil {
		return m.ResetTimeStamp
	}
	return 0
}

func (m *BuyResult) GetCurrentTurnBuyNo() int32 {
	if m != nil {
		return m.CurrentTurnBuyNo
	}
	return 0
}

type S2C_Shop_Buy struct {
	Id                   int32       `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Result               int32       `protobuf:"varint,2,opt,name=result,proto3" json:"result,omitempty"`
	Notice               *FailNotice `protobuf:"bytes,3,opt,name=notice,proto3" json:"notice,omitempty"`
	Buyres               *BuyResult  `protobuf:"bytes,4,opt,name=buyres,proto3" json:"buyres,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *S2C_Shop_Buy) Reset()         { *m = S2C_Shop_Buy{} }
func (m *S2C_Shop_Buy) String() string { return proto.CompactTextString(m) }
func (*S2C_Shop_Buy) ProtoMessage()    {}
func (*S2C_Shop_Buy) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1680e55bbb2433d, []int{120}
}
func (m *S2C_Shop_Buy) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *S2C_Shop_Buy) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_S2C_Shop_Buy.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *S2C_Shop_Buy) XXX_Merge(src proto.Message) {
	xxx_messageInfo_S2C_Shop_Buy.Merge(m, src)
}
func (m *S2C_Shop_Buy) XXX_Size() int {
	return m.Size()
}
func (m *S2C_Shop_Buy) XXX_DiscardUnknown() {
	xxx_messageInfo_S2C_Shop_Buy.DiscardUnknown(m)
}

var xxx_messageInfo_S2C_Shop_Buy proto.InternalMessageInfo

func (m *S2C_Shop_Buy) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *S2C_Shop_Buy) GetResult() int32 {
	if m != nil {
		return m.Result
	}
	return 0
}

func (m *S2C_Shop_Buy) GetNotice() *FailNotice {
	if m != nil {
		return m.Notice
	}
	return nil
}

func (m *S2C_Shop_Buy) GetBuyres() *BuyResult {
	if m != nil {
		return m.Buyres
	}
	return nil
}

// 请求领取充值礼包
type C2S_Recharge_GetGift struct {
	OrderId              string   `protobuf:"bytes,1,opt,name=orderId,proto3" json:"orderId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *C2S_Recharge_GetGift) Reset()         { *m = C2S_Recharge_GetGift{} }
func (m *C2S_Recharge_GetGift) String() string { return proto.CompactTextString(m) }
func (*C2S_Recharge_GetGift) ProtoMessage()    {}
func (*C2S_Recharge_GetGift) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1680e55bbb2433d, []int{121}
}
func (m *C2S_Recharge_GetGift) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *C2S_Recharge_GetGift) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_C2S_Recharge_GetGift.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *C2S_Recharge_GetGift) XXX_Merge(src proto.Message) {
	xxx_messageInfo_C2S_Recharge_GetGift.Merge(m, src)
}
func (m *C2S_Recharge_GetGift) XXX_Size() int {
	return m.Size()
}
func (m *C2S_Recharge_GetGift) XXX_DiscardUnknown() {
	xxx_messageInfo_C2S_Recharge_GetGift.DiscardUnknown(m)
}

var xxx_messageInfo_C2S_Recharge_GetGift proto.InternalMessageInfo

func (m *C2S_Recharge_GetGift) GetOrderId() string {
	if m != nil {
		return m.OrderId
	}
	return ""
}

// 响应领取充值礼包结果
type S2C_Recharge_GetGift struct {
	OrderId              string      `protobuf:"bytes,1,opt,name=orderId,proto3" json:"orderId,omitempty"`
	GiftId               int32       `protobuf:"varint,2,opt,name=giftId,proto3" json:"giftId,omitempty"`
	ErrCode              int32       `protobuf:"varint,3,opt,name=errCode,proto3" json:"errCode,omitempty"`
	Notice               *FailNotice `protobuf:"bytes,4,opt,name=notice,proto3" json:"notice,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *S2C_Recharge_GetGift) Reset()         { *m = S2C_Recharge_GetGift{} }
func (m *S2C_Recharge_GetGift) String() string { return proto.CompactTextString(m) }
func (*S2C_Recharge_GetGift) ProtoMessage()    {}
func (*S2C_Recharge_GetGift) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1680e55bbb2433d, []int{122}
}
func (m *S2C_Recharge_GetGift) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *S2C_Recharge_GetGift) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_S2C_Recharge_GetGift.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *S2C_Recharge_GetGift) XXX_Merge(src proto.Message) {
	xxx_messageInfo_S2C_Recharge_GetGift.Merge(m, src)
}
func (m *S2C_Recharge_GetGift) XXX_Size() int {
	return m.Size()
}
func (m *S2C_Recharge_GetGift) XXX_DiscardUnknown() {
	xxx_messageInfo_S2C_Recharge_GetGift.DiscardUnknown(m)
}

var xxx_messageInfo_S2C_Recharge_GetGift proto.InternalMessageInfo

func (m *S2C_Recharge_GetGift) GetOrderId() string {
	if m != nil {
		return m.OrderId
	}
	return ""
}

func (m *S2C_Recharge_GetGift) GetGiftId() int32 {
	if m != nil {
		return m.GiftId
	}
	return 0
}

func (m *S2C_Recharge_GetGift) GetErrCode() int32 {
	if m != nil {
		return m.ErrCode
	}
	return 0
}

func (m *S2C_Recharge_GetGift) GetNotice() *FailNotice {
	if m != nil {
		return m.Notice
	}
	return nil
}

// 确认收到充值礼包
type C2S_Recharge_GetGiftConfirm struct {
	OrderId              string   `protobuf:"bytes,1,opt,name=orderId,proto3" json:"orderId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *C2S_Recharge_GetGiftConfirm) Reset()         { *m = C2S_Recharge_GetGiftConfirm{} }
func (m *C2S_Recharge_GetGiftConfirm) String() string { return proto.CompactTextString(m) }
func (*C2S_Recharge_GetGiftConfirm) ProtoMessage()    {}
func (*C2S_Recharge_GetGiftConfirm) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1680e55bbb2433d, []int{123}
}
func (m *C2S_Recharge_GetGiftConfirm) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *C2S_Recharge_GetGiftConfirm) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_C2S_Recharge_GetGiftConfirm.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *C2S_Recharge_GetGiftConfirm) XXX_Merge(src proto.Message) {
	xxx_messageInfo_C2S_Recharge_GetGiftConfirm.Merge(m, src)
}
func (m *C2S_Recharge_GetGiftConfirm) XXX_Size() int {
	return m.Size()
}
func (m *C2S_Recharge_GetGiftConfirm) XXX_DiscardUnknown() {
	xxx_messageInfo_C2S_Recharge_GetGiftConfirm.DiscardUnknown(m)
}

var xxx_messageInfo_C2S_Recharge_GetGiftConfirm proto.InternalMessageInfo

func (m *C2S_Recharge_GetGiftConfirm) GetOrderId() string {
	if m != nil {
		return m.OrderId
	}
	return ""
}

//-----------------------------------Vip Start---------------------------------
// 获取Vip卡到期时间
type C2S_Vip_ExpireDate struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *C2S_Vip_ExpireDate) Reset()         { *m = C2S_Vip_ExpireDate{} }
func (m *C2S_Vip_ExpireDate) String() string { return proto.CompactTextString(m) }
func (*C2S_Vip_ExpireDate) ProtoMessage()    {}
func (*C2S_Vip_ExpireDate) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1680e55bbb2433d, []int{124}
}
func (m *C2S_Vip_ExpireDate) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *C2S_Vip_ExpireDate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_C2S_Vip_ExpireDate.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *C2S_Vip_ExpireDate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_C2S_Vip_ExpireDate.Merge(m, src)
}
func (m *C2S_Vip_ExpireDate) XXX_Size() int {
	return m.Size()
}
func (m *C2S_Vip_ExpireDate) XXX_DiscardUnknown() {
	xxx_messageInfo_C2S_Vip_ExpireDate.DiscardUnknown(m)
}

var xxx_messageInfo_C2S_Vip_ExpireDate proto.InternalMessageInfo

// 返回vip卡到期时间
type S2C_Vip_ExpireDate struct {
	CardListId           []int32  `protobuf:"varint,1,rep,packed,name=cardListId,proto3" json:"cardListId,omitempty"`
	ExpireDate           []int32  `protobuf:"varint,2,rep,packed,name=ExpireDate,proto3" json:"ExpireDate,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *S2C_Vip_ExpireDate) Reset()         { *m = S2C_Vip_ExpireDate{} }
func (m *S2C_Vip_ExpireDate) String() string { return proto.CompactTextString(m) }
func (*S2C_Vip_ExpireDate) ProtoMessage()    {}
func (*S2C_Vip_ExpireDate) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1680e55bbb2433d, []int{125}
}
func (m *S2C_Vip_ExpireDate) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *S2C_Vip_ExpireDate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_S2C_Vip_ExpireDate.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *S2C_Vip_ExpireDate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_S2C_Vip_ExpireDate.Merge(m, src)
}
func (m *S2C_Vip_ExpireDate) XXX_Size() int {
	return m.Size()
}
func (m *S2C_Vip_ExpireDate) XXX_DiscardUnknown() {
	xxx_messageInfo_S2C_Vip_ExpireDate.DiscardUnknown(m)
}

var xxx_messageInfo_S2C_Vip_ExpireDate proto.InternalMessageInfo

func (m *S2C_Vip_ExpireDate) GetCardListId() []int32 {
	if m != nil {
		return m.CardListId
	}
	return nil
}

func (m *S2C_Vip_ExpireDate) GetExpireDate() []int32 {
	if m != nil {
		return m.ExpireDate
	}
	return nil
}

// 通知客户端获得购买/使用月卡奖励
type S2C_Vip_BuyReward struct {
	CardId               int32    `protobuf:"varint,1,opt,name=cardId,proto3" json:"cardId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *S2C_Vip_BuyReward) Reset()         { *m = S2C_Vip_BuyReward{} }
func (m *S2C_Vip_BuyReward) String() string { return proto.CompactTextString(m) }
func (*S2C_Vip_BuyReward) ProtoMessage()    {}
func (*S2C_Vip_BuyReward) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1680e55bbb2433d, []int{126}
}
func (m *S2C_Vip_BuyReward) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *S2C_Vip_BuyReward) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_S2C_Vip_BuyReward.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *S2C_Vip_BuyReward) XXX_Merge(src proto.Message) {
	xxx_messageInfo_S2C_Vip_BuyReward.Merge(m, src)
}
func (m *S2C_Vip_BuyReward) XXX_Size() int {
	return m.Size()
}
func (m *S2C_Vip_BuyReward) XXX_DiscardUnknown() {
	xxx_messageInfo_S2C_Vip_BuyReward.DiscardUnknown(m)
}

var xxx_messageInfo_S2C_Vip_BuyReward proto.InternalMessageInfo

func (m *S2C_Vip_BuyReward) GetCardId() int32 {
	if m != nil {
		return m.CardId
	}
	return 0
}

// 通知客户端获得每日奖励
type S2C_Vip_DailyReward struct {
	CardListId           []int32  `protobuf:"varint,1,rep,packed,name=cardListId,proto3" json:"cardListId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *S2C_Vip_DailyReward) Reset()         { *m = S2C_Vip_DailyReward{} }
func (m *S2C_Vip_DailyReward) String() string { return proto.CompactTextString(m) }
func (*S2C_Vip_DailyReward) ProtoMessage()    {}
func (*S2C_Vip_DailyReward) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1680e55bbb2433d, []int{127}
}
func (m *S2C_Vip_DailyReward) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *S2C_Vip_DailyReward) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_S2C_Vip_DailyReward.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *S2C_Vip_DailyReward) XXX_Merge(src proto.Message) {
	xxx_messageInfo_S2C_Vip_DailyReward.Merge(m, src)
}
func (m *S2C_Vip_DailyReward) XXX_Size() int {
	return m.Size()
}
func (m *S2C_Vip_DailyReward) XXX_DiscardUnknown() {
	xxx_messageInfo_S2C_Vip_DailyReward.DiscardUnknown(m)
}

var xxx_messageInfo_S2C_Vip_DailyReward proto.InternalMessageInfo

func (m *S2C_Vip_DailyReward) GetCardListId() []int32 {
	if m != nil {
		return m.CardListId
	}
	return nil
}

//-----------------------------------防沉迷 begin---------------------------------
//服务器下发玩家防沉迷信息
type S2C_AntiAddictInfo struct {
	TotalPlayTime        int32    `protobuf:"varint,1,opt,name=totalPlayTime,proto3" json:"totalPlayTime,omitempty"`
	TodayPlayTime        int32    `protobuf:"varint,2,opt,name=todayPlayTime,proto3" json:"todayPlayTime,omitempty"`
	Age                  int32    `protobuf:"varint,3,opt,name=age,proto3" json:"age,omitempty"`
	TodayPay             int32    `protobuf:"varint,4,opt,name=todayPay,proto3" json:"todayPay,omitempty"`
	MonthPay             int32    `protobuf:"varint,5,opt,name=monthPay,proto3" json:"monthPay,omitempty"`
	LastPayDate          int32    `protobuf:"varint,6,opt,name=lastPayDate,proto3" json:"lastPayDate,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *S2C_AntiAddictInfo) Reset()         { *m = S2C_AntiAddictInfo{} }
func (m *S2C_AntiAddictInfo) String() string { return proto.CompactTextString(m) }
func (*S2C_AntiAddictInfo) ProtoMessage()    {}
func (*S2C_AntiAddictInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1680e55bbb2433d, []int{128}
}
func (m *S2C_AntiAddictInfo) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *S2C_AntiAddictInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_S2C_AntiAddictInfo.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *S2C_AntiAddictInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_S2C_AntiAddictInfo.Merge(m, src)
}
func (m *S2C_AntiAddictInfo) XXX_Size() int {
	return m.Size()
}
func (m *S2C_AntiAddictInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_S2C_AntiAddictInfo.DiscardUnknown(m)
}

var xxx_messageInfo_S2C_AntiAddictInfo proto.InternalMessageInfo

func (m *S2C_AntiAddictInfo) GetTotalPlayTime() int32 {
	if m != nil {
		return m.TotalPlayTime
	}
	return 0
}

func (m *S2C_AntiAddictInfo) GetTodayPlayTime() int32 {
	if m != nil {
		return m.TodayPlayTime
	}
	return 0
}

func (m *S2C_AntiAddictInfo) GetAge() int32 {
	if m != nil {
		return m.Age
	}
	return 0
}

func (m *S2C_AntiAddictInfo) GetTodayPay() int32 {
	if m != nil {
		return m.TodayPay
	}
	return 0
}

func (m *S2C_AntiAddictInfo) GetMonthPay() int32 {
	if m != nil {
		return m.MonthPay
	}
	return 0
}

func (m *S2C_AntiAddictInfo) GetLastPayDate() int32 {
	if m != nil {
		return m.LastPayDate
	}
	return 0
}

//客户端请求实名认证
type C2S_VerifiedIDCard struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	IdCard               string   `protobuf:"bytes,2,opt,name=idCard,proto3" json:"idCard,omitempty"`
	Phone                string   `protobuf:"bytes,3,opt,name=phone,proto3" json:"phone,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *C2S_VerifiedIDCard) Reset()         { *m = C2S_VerifiedIDCard{} }
func (m *C2S_VerifiedIDCard) String() string { return proto.CompactTextString(m) }
func (*C2S_VerifiedIDCard) ProtoMessage()    {}
func (*C2S_VerifiedIDCard) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1680e55bbb2433d, []int{129}
}
func (m *C2S_VerifiedIDCard) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *C2S_VerifiedIDCard) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_C2S_VerifiedIDCard.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *C2S_VerifiedIDCard) XXX_Merge(src proto.Message) {
	xxx_messageInfo_C2S_VerifiedIDCard.Merge(m, src)
}
func (m *C2S_VerifiedIDCard) XXX_Size() int {
	return m.Size()
}
func (m *C2S_VerifiedIDCard) XXX_DiscardUnknown() {
	xxx_messageInfo_C2S_VerifiedIDCard.DiscardUnknown(m)
}

var xxx_messageInfo_C2S_VerifiedIDCard proto.InternalMessageInfo

func (m *C2S_VerifiedIDCard) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *C2S_VerifiedIDCard) GetIdCard() string {
	if m != nil {
		return m.IdCard
	}
	return ""
}

func (m *C2S_VerifiedIDCard) GetPhone() string {
	if m != nil {
		return m.Phone
	}
	return ""
}

//服务器下发功能开关
type S2C_Functions struct {
	Code                 []int32  `protobuf:"varint,1,rep,packed,name=code,proto3" json:"code,omitempty"`
	Begin                []int32  `protobuf:"varint,2,rep,packed,name=begin,proto3" json:"begin,omitempty"`
	End                  []int32  `protobuf:"varint,3,rep,packed,name=end,proto3" json:"end,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *S2C_Functions) Reset()         { *m = S2C_Functions{} }
func (m *S2C_Functions) String() string { return proto.CompactTextString(m) }
func (*S2C_Functions) ProtoMessage()    {}
func (*S2C_Functions) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1680e55bbb2433d, []int{130}
}
func (m *S2C_Functions) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *S2C_Functions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_S2C_Functions.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *S2C_Functions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_S2C_Functions.Merge(m, src)
}
func (m *S2C_Functions) XXX_Size() int {
	return m.Size()
}
func (m *S2C_Functions) XXX_DiscardUnknown() {
	xxx_messageInfo_S2C_Functions.DiscardUnknown(m)
}

var xxx_messageInfo_S2C_Functions proto.InternalMessageInfo

func (m *S2C_Functions) GetCode() []int32 {
	if m != nil {
		return m.Code
	}
	return nil
}

func (m *S2C_Functions) GetBegin() []int32 {
	if m != nil {
		return m.Begin
	}
	return nil
}

func (m *S2C_Functions) GetEnd() []int32 {
	if m != nil {
		return m.End
	}
	return nil
}

//通知客户端显示字符串
type S2C_ShowNotice struct {
	ShowType             int32    `protobuf:"varint,1,opt,name=showType,proto3" json:"showType,omitempty"`
	Notice               string   `protobuf:"bytes,2,opt,name=notice,proto3" json:"notice,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *S2C_ShowNotice) Reset()         { *m = S2C_ShowNotice{} }
func (m *S2C_ShowNotice) String() string { return proto.CompactTextString(m) }
func (*S2C_ShowNotice) ProtoMessage()    {}
func (*S2C_ShowNotice) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1680e55bbb2433d, []int{131}
}
func (m *S2C_ShowNotice) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *S2C_ShowNotice) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_S2C_ShowNotice.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *S2C_ShowNotice) XXX_Merge(src proto.Message) {
	xxx_messageInfo_S2C_ShowNotice.Merge(m, src)
}
func (m *S2C_ShowNotice) XXX_Size() int {
	return m.Size()
}
func (m *S2C_ShowNotice) XXX_DiscardUnknown() {
	xxx_messageInfo_S2C_ShowNotice.DiscardUnknown(m)
}

var xxx_messageInfo_S2C_ShowNotice proto.InternalMessageInfo

func (m *S2C_ShowNotice) GetShowType() int32 {
	if m != nil {
		return m.ShowType
	}
	return 0
}

func (m *S2C_ShowNotice) GetNotice() string {
	if m != nil {
		return m.Notice
	}
	return ""
}

//----------------------------------配置信息 begin----------------------------------
type XConfig struct {
	Key                  int32    `protobuf:"varint,1,opt,name=key,proto3" json:"key,omitempty"`
	Value                string   `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *XConfig) Reset()         { *m = XConfig{} }
func (m *XConfig) String() string { return proto.CompactTextString(m) }
func (*XConfig) ProtoMessage()    {}
func (*XConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1680e55bbb2433d, []int{132}
}
func (m *XConfig) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *XConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_XConfig.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *XConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_XConfig.Merge(m, src)
}
func (m *XConfig) XXX_Size() int {
	return m.Size()
}
func (m *XConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_XConfig.DiscardUnknown(m)
}

var xxx_messageInfo_XConfig proto.InternalMessageInfo

func (m *XConfig) GetKey() int32 {
	if m != nil {
		return m.Key
	}
	return 0
}

func (m *XConfig) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

// 同步服务端配置
type S2C_SyncConfig struct {
	Config               []*XConfig `protobuf:"bytes,1,rep,name=config,proto3" json:"config,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *S2C_SyncConfig) Reset()         { *m = S2C_SyncConfig{} }
func (m *S2C_SyncConfig) String() string { return proto.CompactTextString(m) }
func (*S2C_SyncConfig) ProtoMessage()    {}
func (*S2C_SyncConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1680e55bbb2433d, []int{133}
}
func (m *S2C_SyncConfig) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *S2C_SyncConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_S2C_SyncConfig.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *S2C_SyncConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_S2C_SyncConfig.Merge(m, src)
}
func (m *S2C_SyncConfig) XXX_Size() int {
	return m.Size()
}
func (m *S2C_SyncConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_S2C_SyncConfig.DiscardUnknown(m)
}

var xxx_messageInfo_S2C_SyncConfig proto.InternalMessageInfo

func (m *S2C_SyncConfig) GetConfig() []*XConfig {
	if m != nil {
		return m.Config
	}
	return nil
}

//-----------------------------------邮件 begin-----------------------------------
type Attachment_Item struct {
	Id                   int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Number               int32    `protobuf:"varint,2,opt,name=number,proto3" json:"number,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Attachment_Item) Reset()         { *m = Attachment_Item{} }
func (m *Attachment_Item) String() string { return proto.CompactTextString(m) }
func (*Attachment_Item) ProtoMessage()    {}
func (*Attachment_Item) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1680e55bbb2433d, []int{134}
}
func (m *Attachment_Item) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Attachment_Item) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Attachment_Item.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Attachment_Item) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Attachment_Item.Merge(m, src)
}
func (m *Attachment_Item) XXX_Size() int {
	return m.Size()
}
func (m *Attachment_Item) XXX_DiscardUnknown() {
	xxx_messageInfo_Attachment_Item.DiscardUnknown(m)
}

var xxx_messageInfo_Attachment_Item proto.InternalMessageInfo

func (m *Attachment_Item) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Attachment_Item) GetNumber() int32 {
	if m != nil {
		return m.Number
	}
	return 0
}

//一条完整电子邮件 数据结构
type EmailItem struct {
	Id                   int32              `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Sender               string             `protobuf:"bytes,2,opt,name=sender,proto3" json:"sender,omitempty"`
	Title                string             `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	Content              string             `protobuf:"bytes,4,opt,name=content,proto3" json:"content,omitempty"`
	SendTime             int64              `protobuf:"varint,5,opt,name=sendTime,proto3" json:"sendTime,omitempty"`
	InvalidTime          int64              `protobuf:"varint,6,opt,name=invalidTime,proto3" json:"invalidTime,omitempty"`
	Attachment           []*Attachment_Item `protobuf:"bytes,7,rep,name=attachment,proto3" json:"attachment,omitempty"`
	Status               int32              `protobuf:"varint,8,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *EmailItem) Reset()         { *m = EmailItem{} }
func (m *EmailItem) String() string { return proto.CompactTextString(m) }
func (*EmailItem) ProtoMessage()    {}
func (*EmailItem) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1680e55bbb2433d, []int{135}
}
func (m *EmailItem) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *EmailItem) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_EmailItem.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *EmailItem) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EmailItem.Merge(m, src)
}
func (m *EmailItem) XXX_Size() int {
	return m.Size()
}
func (m *EmailItem) XXX_DiscardUnknown() {
	xxx_messageInfo_EmailItem.DiscardUnknown(m)
}

var xxx_messageInfo_EmailItem proto.InternalMessageInfo

func (m *EmailItem) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *EmailItem) GetSender() string {
	if m != nil {
		return m.Sender
	}
	return ""
}

func (m *EmailItem) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *EmailItem) GetContent() string {
	if m != nil {
		return m.Content
	}
	return ""
}

func (m *EmailItem) GetSendTime() int64 {
	if m != nil {
		return m.SendTime
	}
	return 0
}

func (m *EmailItem) GetInvalidTime() int64 {
	if m != nil {
		return m.InvalidTime
	}
	return 0
}

func (m *EmailItem) GetAttachment() []*Attachment_Item {
	if m != nil {
		return m.Attachment
	}
	return nil
}

func (m *EmailItem) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

//一条简易电子邮件 数据结构
type SimpleEmailItem struct {
	Id                   int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Title                string   `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Sender               string   `protobuf:"bytes,3,opt,name=sender,proto3" json:"sender,omitempty"`
	Status               int32    `protobuf:"varint,4,opt,name=status,proto3" json:"status,omitempty"`
	SendTime             int64    `protobuf:"varint,5,opt,name=sendTime,proto3" json:"sendTime,omitempty"`
	InvalidTime          int64    `protobuf:"varint,6,opt,name=invalidTime,proto3" json:"invalidTime,omitempty"`
	HaveAttachment       bool     `protobuf:"varint,7,opt,name=haveAttachment,proto3" json:"haveAttachment,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SimpleEmailItem) Reset()         { *m = SimpleEmailItem{} }
func (m *SimpleEmailItem) String() string { return proto.CompactTextString(m) }
func (*SimpleEmailItem) ProtoMessage()    {}
func (*SimpleEmailItem) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1680e55bbb2433d, []int{136}
}
func (m *SimpleEmailItem) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *SimpleEmailItem) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_SimpleEmailItem.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *SimpleEmailItem) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SimpleEmailItem.Merge(m, src)
}
func (m *SimpleEmailItem) XXX_Size() int {
	return m.Size()
}
func (m *SimpleEmailItem) XXX_DiscardUnknown() {
	xxx_messageInfo_SimpleEmailItem.DiscardUnknown(m)
}

var xxx_messageInfo_SimpleEmailItem proto.InternalMessageInfo

func (m *SimpleEmailItem) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *SimpleEmailItem) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *SimpleEmailItem) GetSender() string {
	if m != nil {
		return m.Sender
	}
	return ""
}

func (m *SimpleEmailItem) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *SimpleEmailItem) GetSendTime() int64 {
	if m != nil {
		return m.SendTime
	}
	return 0
}

func (m *SimpleEmailItem) GetInvalidTime() int64 {
	if m != nil {
		return m.InvalidTime
	}
	return 0
}

func (m *SimpleEmailItem) GetHaveAttachment() bool {
	if m != nil {
		return m.HaveAttachment
	}
	return false
}

//批量的简易电子邮件
type S2C_SimpleEmailItemList struct {
	SimpleItems          []*SimpleEmailItem `protobuf:"bytes,1,rep,name=simpleItems,proto3" json:"simpleItems,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *S2C_SimpleEmailItemList) Reset()         { *m = S2C_SimpleEmailItemList{} }
func (m *S2C_SimpleEmailItemList) String() string { return proto.CompactTextString(m) }
func (*S2C_SimpleEmailItemList) ProtoMessage()    {}
func (*S2C_SimpleEmailItemList) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1680e55bbb2433d, []int{137}
}
func (m *S2C_SimpleEmailItemList) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *S2C_SimpleEmailItemList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_S2C_SimpleEmailItemList.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *S2C_SimpleEmailItemList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_S2C_SimpleEmailItemList.Merge(m, src)
}
func (m *S2C_SimpleEmailItemList) XXX_Size() int {
	return m.Size()
}
func (m *S2C_SimpleEmailItemList) XXX_DiscardUnknown() {
	xxx_messageInfo_S2C_SimpleEmailItemList.DiscardUnknown(m)
}

var xxx_messageInfo_S2C_SimpleEmailItemList proto.InternalMessageInfo

func (m *S2C_SimpleEmailItemList) GetSimpleItems() []*SimpleEmailItem {
	if m != nil {
		return m.SimpleItems
	}
	return nil
}

//对电子邮件进行操作的 返回结果
type S2C_EmailOpResult struct {
	Id                   int32                `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Res                  *OperationResult     `protobuf:"bytes,2,opt,name=res,proto3" json:"res,omitempty"`
	Op                   Enum_Email_Operation `protobuf:"varint,3,opt,name=op,proto3,enum=protocol.Enum_Email_Operation" json:"op,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *S2C_EmailOpResult) Reset()         { *m = S2C_EmailOpResult{} }
func (m *S2C_EmailOpResult) String() string { return proto.CompactTextString(m) }
func (*S2C_EmailOpResult) ProtoMessage()    {}
func (*S2C_EmailOpResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1680e55bbb2433d, []int{138}
}
func (m *S2C_EmailOpResult) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *S2C_EmailOpResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_S2C_EmailOpResult.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *S2C_EmailOpResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_S2C_EmailOpResult.Merge(m, src)
}
func (m *S2C_EmailOpResult) XXX_Size() int {
	return m.Size()
}
func (m *S2C_EmailOpResult) XXX_DiscardUnknown() {
	xxx_messageInfo_S2C_EmailOpResult.DiscardUnknown(m)
}

var xxx_messageInfo_S2C_EmailOpResult proto.InternalMessageInfo

func (m *S2C_EmailOpResult) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *S2C_EmailOpResult) GetRes() *OperationResult {
	if m != nil {
		return m.Res
	}
	return nil
}

func (m *S2C_EmailOpResult) GetOp() Enum_Email_Operation {
	if m != nil {
		return m.Op
	}
	return Enum_Email_Operation_enEmail_NoUse
}

//客户端对电子邮件进行操作
type C2S_EmailOp struct {
	Id                   int32                `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Op                   Enum_Email_Operation `protobuf:"varint,2,opt,name=op,proto3,enum=protocol.Enum_Email_Operation" json:"op,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *C2S_EmailOp) Reset()         { *m = C2S_EmailOp{} }
func (m *C2S_EmailOp) String() string { return proto.CompactTextString(m) }
func (*C2S_EmailOp) ProtoMessage()    {}
func (*C2S_EmailOp) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1680e55bbb2433d, []int{139}
}
func (m *C2S_EmailOp) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *C2S_EmailOp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_C2S_EmailOp.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *C2S_EmailOp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_C2S_EmailOp.Merge(m, src)
}
func (m *C2S_EmailOp) XXX_Size() int {
	return m.Size()
}
func (m *C2S_EmailOp) XXX_DiscardUnknown() {
	xxx_messageInfo_C2S_EmailOp.DiscardUnknown(m)
}

var xxx_messageInfo_C2S_EmailOp proto.InternalMessageInfo

func (m *C2S_EmailOp) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *C2S_EmailOp) GetOp() Enum_Email_Operation {
	if m != nil {
		return m.Op
	}
	return Enum_Email_Operation_enEmail_NoUse
}

//-----------------------------------好友 begin---------------------------------
type FriendInfo struct {
	CharmPoint           int32             `protobuf:"varint,1,opt,name=charmPoint,proto3" json:"charmPoint,omitempty"`
	Info                 *FriendSimpleInfo `protobuf:"bytes,2,opt,name=info,proto3" json:"info,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *FriendInfo) Reset()         { *m = FriendInfo{} }
func (m *FriendInfo) String() string { return proto.CompactTextString(m) }
func (*FriendInfo) ProtoMessage()    {}
func (*FriendInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1680e55bbb2433d, []int{140}
}
func (m *FriendInfo) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *FriendInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_FriendInfo.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *FriendInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FriendInfo.Merge(m, src)
}
func (m *FriendInfo) XXX_Size() int {
	return m.Size()
}
func (m *FriendInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_FriendInfo.DiscardUnknown(m)
}

var xxx_messageInfo_FriendInfo proto.InternalMessageInfo

func (m *FriendInfo) GetCharmPoint() int32 {
	if m != nil {
		return m.CharmPoint
	}
	return 0
}

func (m *FriendInfo) GetInfo() *FriendSimpleInfo {
	if m != nil {
		return m.Info
	}
	return nil
}

type FriendSimpleInfo struct {
	UserId                  int32    `protobuf:"varint,1,opt,name=userId,proto3" json:"userId,omitempty"`
	NickName                string   `protobuf:"bytes,2,opt,name=nickName,proto3" json:"nickName,omitempty"`
	Remarks                 string   `protobuf:"bytes,3,opt,name=remarks,proto3" json:"remarks,omitempty"`
	Lv                      int32    `protobuf:"varint,4,opt,name=lv,proto3" json:"lv,omitempty"`
	GameId                  int32    `protobuf:"varint,5,opt,name=gameId,proto3" json:"gameId,omitempty"`
	State                   bool     `protobuf:"varint,6,opt,name=state,proto3" json:"state,omitempty"`
	OfflineDate             int32    `protobuf:"varint,7,opt,name=offlineDate,proto3" json:"offlineDate,omitempty"`
	Icon                    int32    `protobuf:"varint,8,opt,name=icon,proto3" json:"icon,omitempty"`
	Frame                   int32    `protobuf:"varint,9,opt,name=frame,proto3" json:"frame,omitempty"`
	IsFriendSendMeEnergy    bool     `protobuf:"varint,10,opt,name=isFriendSendMeEnergy,proto3" json:"isFriendSendMeEnergy,omitempty"`
	IsGetFriendSendMeEnergy bool     `protobuf:"varint,11,opt,name=isGetFriendSendMeEnergy,proto3" json:"isGetFriendSendMeEnergy,omitempty"`
	IsSendFriendEnergy      bool     `protobuf:"varint,12,opt,name=isSendFriendEnergy,proto3" json:"isSendFriendEnergy,omitempty"`
	ManorName               string   `protobuf:"bytes,13,opt,name=manorName,proto3" json:"manorName,omitempty"`
	XXX_NoUnkeyedLiteral    struct{} `json:"-"`
	XXX_unrecognized        []byte   `json:"-"`
	XXX_sizecache           int32    `json:"-"`
}

func (m *FriendSimpleInfo) Reset()         { *m = FriendSimpleInfo{} }
func (m *FriendSimpleInfo) String() string { return proto.CompactTextString(m) }
func (*FriendSimpleInfo) ProtoMessage()    {}
func (*FriendSimpleInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1680e55bbb2433d, []int{141}
}
func (m *FriendSimpleInfo) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *FriendSimpleInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_FriendSimpleInfo.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *FriendSimpleInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FriendSimpleInfo.Merge(m, src)
}
func (m *FriendSimpleInfo) XXX_Size() int {
	return m.Size()
}
func (m *FriendSimpleInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_FriendSimpleInfo.DiscardUnknown(m)
}

var xxx_messageInfo_FriendSimpleInfo proto.InternalMessageInfo

func (m *FriendSimpleInfo) GetUserId() int32 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *FriendSimpleInfo) GetNickName() string {
	if m != nil {
		return m.NickName
	}
	return ""
}

func (m *FriendSimpleInfo) GetRemarks() string {
	if m != nil {
		return m.Remarks
	}
	return ""
}

func (m *FriendSimpleInfo) GetLv() int32 {
	if m != nil {
		return m.Lv
	}
	return 0
}

func (m *FriendSimpleInfo) GetGameId() int32 {
	if m != nil {
		return m.GameId
	}
	return 0
}

func (m *FriendSimpleInfo) GetState() bool {
	if m != nil {
		return m.State
	}
	return false
}

func (m *FriendSimpleInfo) GetOfflineDate() int32 {
	if m != nil {
		return m.OfflineDate
	}
	return 0
}

func (m *FriendSimpleInfo) GetIcon() int32 {
	if m != nil {
		return m.Icon
	}
	return 0
}

func (m *FriendSimpleInfo) GetFrame() int32 {
	if m != nil {
		return m.Frame
	}
	return 0
}

func (m *FriendSimpleInfo) GetIsFriendSendMeEnergy() bool {
	if m != nil {
		return m.IsFriendSendMeEnergy
	}
	return false
}

func (m *FriendSimpleInfo) GetIsGetFriendSendMeEnergy() bool {
	if m != nil {
		return m.IsGetFriendSendMeEnergy
	}
	return false
}

func (m *FriendSimpleInfo) GetIsSendFriendEnergy() bool {
	if m != nil {
		return m.IsSendFriendEnergy
	}
	return false
}

func (m *FriendSimpleInfo) GetManorName() string {
	if m != nil {
		return m.ManorName
	}
	return ""
}

type BlockPerson struct {
	UserId               int32    `protobuf:"varint,1,opt,name=userId,proto3" json:"userId,omitempty"`
	Cloth                int32    `protobuf:"varint,2,opt,name=cloth,proto3" json:"cloth,omitempty"`
	Frame                int32    `protobuf:"varint,3,opt,name=frame,proto3" json:"frame,omitempty"`
	NickName             string   `protobuf:"bytes,4,opt,name=nickName,proto3" json:"nickName,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BlockPerson) Reset()         { *m = BlockPerson{} }
func (m *BlockPerson) String() string { return proto.CompactTextString(m) }
func (*BlockPerson) ProtoMessage()    {}
func (*BlockPerson) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1680e55bbb2433d, []int{142}
}
func (m *BlockPerson) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *BlockPerson) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_BlockPerson.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *BlockPerson) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BlockPerson.Merge(m, src)
}
func (m *BlockPerson) XXX_Size() int {
	return m.Size()
}
func (m *BlockPerson) XXX_DiscardUnknown() {
	xxx_messageInfo_BlockPerson.DiscardUnknown(m)
}

var xxx_messageInfo_BlockPerson proto.InternalMessageInfo

func (m *BlockPerson) GetUserId() int32 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *BlockPerson) GetCloth() int32 {
	if m != nil {
		return m.Cloth
	}
	return 0
}

func (m *BlockPerson) GetFrame() int32 {
	if m != nil {
		return m.Frame
	}
	return 0
}

func (m *BlockPerson) GetNickName() string {
	if m != nil {
		return m.NickName
	}
	return ""
}

// 客户端请求好友列表 message C2S_Empty
// 服务器回复好友列表
type S2C_Friend_GetList struct {
	Friends              []*FriendSimpleInfo `protobuf:"bytes,1,rep,name=friends,proto3" json:"friends,omitempty"`
	GetFriendEnergyNo    int32               `protobuf:"varint,2,opt,name=GetFriendEnergyNo,proto3" json:"GetFriendEnergyNo,omitempty"`
	BlockList            []*BlockPerson      `protobuf:"bytes,3,rep,name=blockList,proto3" json:"blockList,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *S2C_Friend_GetList) Reset()         { *m = S2C_Friend_GetList{} }
func (m *S2C_Friend_GetList) String() string { return proto.CompactTextString(m) }
func (*S2C_Friend_GetList) ProtoMessage()    {}
func (*S2C_Friend_GetList) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1680e55bbb2433d, []int{143}
}
func (m *S2C_Friend_GetList) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *S2C_Friend_GetList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_S2C_Friend_GetList.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *S2C_Friend_GetList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_S2C_Friend_GetList.Merge(m, src)
}
func (m *S2C_Friend_GetList) XXX_Size() int {
	return m.Size()
}
func (m *S2C_Friend_GetList) XXX_DiscardUnknown() {
	xxx_messageInfo_S2C_Friend_GetList.DiscardUnknown(m)
}

var xxx_messageInfo_S2C_Friend_GetList proto.InternalMessageInfo

func (m *S2C_Friend_GetList) GetFriends() []*FriendSimpleInfo {
	if m != nil {
		return m.Friends
	}
	return nil
}

func (m *S2C_Friend_GetList) GetGetFriendEnergyNo() int32 {
	if m != nil {
		return m.GetFriendEnergyNo
	}
	return 0
}

func (m *S2C_Friend_GetList) GetBlockList() []*BlockPerson {
	if m != nil {
		return m.BlockList
	}
	return nil
}

//客户端请求申请添加好友
type C2S_Friend_Apply struct {
	UserId               int32    `protobuf:"varint,1,opt,name=userId,proto3" json:"userId,omitempty"`
	Remarks              string   `protobuf:"bytes,2,opt,name=remarks,proto3" json:"remarks,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *C2S_Friend_Apply) Reset()         { *m = C2S_Friend_Apply{} }
func (m *C2S_Friend_Apply) String() string { return proto.CompactTextString(m) }
func (*C2S_Friend_Apply) ProtoMessage()    {}
func (*C2S_Friend_Apply) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1680e55bbb2433d, []int{144}
}
func (m *C2S_Friend_Apply) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *C2S_Friend_Apply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_C2S_Friend_Apply.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *C2S_Friend_Apply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_C2S_Friend_Apply.Merge(m, src)
}
func (m *C2S_Friend_Apply) XXX_Size() int {
	return m.Size()
}
func (m *C2S_Friend_Apply) XXX_DiscardUnknown() {
	xxx_messageInfo_C2S_Friend_Apply.DiscardUnknown(m)
}

var xxx_messageInfo_C2S_Friend_Apply proto.InternalMessageInfo

func (m *C2S_Friend_Apply) GetUserId() int32 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *C2S_Friend_Apply) GetRemarks() string {
	if m != nil {
		return m.Remarks
	}
	return ""
}

//服务器回复申请好友请求
type S2C_Friend_Apply struct {
	SenderId             int32            `protobuf:"varint,1,opt,name=senderId,proto3" json:"senderId,omitempty"`
	ReceiverId           int32            `protobuf:"varint,2,opt,name=receiverId,proto3" json:"receiverId,omitempty"`
	Result               *OperationResult `protobuf:"bytes,3,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *S2C_Friend_Apply) Reset()         { *m = S2C_Friend_Apply{} }
func (m *S2C_Friend_Apply) String() string { return proto.CompactTextString(m) }
func (*S2C_Friend_Apply) ProtoMessage()    {}
func (*S2C_Friend_Apply) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1680e55bbb2433d, []int{145}
}
func (m *S2C_Friend_Apply) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *S2C_Friend_Apply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_S2C_Friend_Apply.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *S2C_Friend_Apply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_S2C_Friend_Apply.Merge(m, src)
}
func (m *S2C_Friend_Apply) XXX_Size() int {
	return m.Size()
}
func (m *S2C_Friend_Apply) XXX_DiscardUnknown() {
	xxx_messageInfo_S2C_Friend_Apply.DiscardUnknown(m)
}

var xxx_messageInfo_S2C_Friend_Apply proto.InternalMessageInfo

func (m *S2C_Friend_Apply) GetSenderId() int32 {
	if m != nil {
		return m.SenderId
	}
	return 0
}

func (m *S2C_Friend_Apply) GetReceiverId() int32 {
	if m != nil {
		return m.ReceiverId
	}
	return 0
}

func (m *S2C_Friend_Apply) GetResult() *OperationResult {
	if m != nil {
		return m.Result
	}
	return nil
}

//客户端请求删除好友
type C2S_Friend_Delete struct {
	UserId               int32    `protobuf:"varint,1,opt,name=userId,proto3" json:"userId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *C2S_Friend_Delete) Reset()         { *m = C2S_Friend_Delete{} }
func (m *C2S_Friend_Delete) String() string { return proto.CompactTextString(m) }
func (*C2S_Friend_Delete) ProtoMessage()    {}
func (*C2S_Friend_Delete) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1680e55bbb2433d, []int{146}
}
func (m *C2S_Friend_Delete) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *C2S_Friend_Delete) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_C2S_Friend_Delete.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *C2S_Friend_Delete) XXX_Merge(src proto.Message) {
	xxx_messageInfo_C2S_Friend_Delete.Merge(m, src)
}
func (m *C2S_Friend_Delete) XXX_Size() int {
	return m.Size()
}
func (m *C2S_Friend_Delete) XXX_DiscardUnknown() {
	xxx_messageInfo_C2S_Friend_Delete.DiscardUnknown(m)
}

var xxx_messageInfo_C2S_Friend_Delete proto.InternalMessageInfo

func (m *C2S_Friend_Delete) GetUserId() int32 {
	if m != nil {
		return m.UserId
	}
	return 0
}

//服务器回复删除好友请求
type S2C_Friend_Delete struct {
	UserId               int32            `protobuf:"varint,1,opt,name=userId,proto3" json:"userId,omitempty"`
	Result               *OperationResult `protobuf:"bytes,2,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *S2C_Friend_Delete) Reset()         { *m = S2C_Friend_Delete{} }
func (m *S2C_Friend_Delete) String() string { return proto.CompactTextString(m) }
func (*S2C_Friend_Delete) ProtoMessage()    {}
func (*S2C_Friend_Delete) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1680e55bbb2433d, []int{147}
}
func (m *S2C_Friend_Delete) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *S2C_Friend_Delete) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_S2C_Friend_Delete.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *S2C_Friend_Delete) XXX_Merge(src proto.Message) {
	xxx_messageInfo_S2C_Friend_Delete.Merge(m, src)
}
func (m *S2C_Friend_Delete) XXX_Size() int {
	return m.Size()
}
func (m *S2C_Friend_Delete) XXX_DiscardUnknown() {
	xxx_messageInfo_S2C_Friend_Delete.DiscardUnknown(m)
}

var xxx_messageInfo_S2C_Friend_Delete proto.InternalMessageInfo

func (m *S2C_Friend_Delete) GetUserId() int32 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *S2C_Friend_Delete) GetResult() *OperationResult {
	if m != nil {
		return m.Result
	}
	return nil
}

//客户端发送聊天信息
type C2S_Friend_Chat struct {
	UserId               int32    `protobuf:"varint,1,opt,name=userId,proto3" json:"userId,omitempty"`
	MsgId                int32    `protobuf:"varint,2,opt,name=msgId,proto3" json:"msgId,omitempty"`
	Msg                  string   `protobuf:"bytes,3,opt,name=msg,proto3" json:"msg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *C2S_Friend_Chat) Reset()         { *m = C2S_Friend_Chat{} }
func (m *C2S_Friend_Chat) String() string { return proto.CompactTextString(m) }
func (*C2S_Friend_Chat) ProtoMessage()    {}
func (*C2S_Friend_Chat) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1680e55bbb2433d, []int{148}
}
func (m *C2S_Friend_Chat) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *C2S_Friend_Chat) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_C2S_Friend_Chat.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *C2S_Friend_Chat) XXX_Merge(src proto.Message) {
	xxx_messageInfo_C2S_Friend_Chat.Merge(m, src)
}
func (m *C2S_Friend_Chat) XXX_Size() int {
	return m.Size()
}
func (m *C2S_Friend_Chat) XXX_DiscardUnknown() {
	xxx_messageInfo_C2S_Friend_Chat.DiscardUnknown(m)
}

var xxx_messageInfo_C2S_Friend_Chat proto.InternalMessageInfo

func (m *C2S_Friend_Chat) GetUserId() int32 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *C2S_Friend_Chat) GetMsgId() int32 {
	if m != nil {
		return m.MsgId
	}
	return 0
}

func (m *C2S_Friend_Chat) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

//回复消息发送结果
type S2C_Friend_Chat struct {
	MsgId                int32            `protobuf:"varint,1,opt,name=msgId,proto3" json:"msgId,omitempty"`
	Ret                  *OperationResult `protobuf:"bytes,2,opt,name=ret,proto3" json:"ret,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *S2C_Friend_Chat) Reset()         { *m = S2C_Friend_Chat{} }
func (m *S2C_Friend_Chat) String() string { return proto.CompactTextString(m) }
func (*S2C_Friend_Chat) ProtoMessage()    {}
func (*S2C_Friend_Chat) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1680e55bbb2433d, []int{149}
}
func (m *S2C_Friend_Chat) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *S2C_Friend_Chat) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_S2C_Friend_Chat.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *S2C_Friend_Chat) XXX_Merge(src proto.Message) {
	xxx_messageInfo_S2C_Friend_Chat.Merge(m, src)
}
func (m *S2C_Friend_Chat) XXX_Size() int {
	return m.Size()
}
func (m *S2C_Friend_Chat) XXX_DiscardUnknown() {
	xxx_messageInfo_S2C_Friend_Chat.DiscardUnknown(m)
}

var xxx_messageInfo_S2C_Friend_Chat proto.InternalMessageInfo

func (m *S2C_Friend_Chat) GetMsgId() int32 {
	if m != nil {
		return m.MsgId
	}
	return 0
}

func (m *S2C_Friend_Chat) GetRet() *OperationResult {
	if m != nil {
		return m.Ret
	}
	return nil
}

//聊天消息内容
type ChatInfo struct {
	SenderId             int32    `protobuf:"varint,1,opt,name=senderId,proto3" json:"senderId,omitempty"`
	Msg                  string   `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	SendDate             int32    `protobuf:"varint,3,opt,name=sendDate,proto3" json:"sendDate,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ChatInfo) Reset()         { *m = ChatInfo{} }
func (m *ChatInfo) String() string { return proto.CompactTextString(m) }
func (*ChatInfo) ProtoMessage()    {}
func (*ChatInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1680e55bbb2433d, []int{150}
}
func (m *ChatInfo) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ChatInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ChatInfo.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ChatInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChatInfo.Merge(m, src)
}
func (m *ChatInfo) XXX_Size() int {
	return m.Size()
}
func (m *ChatInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_ChatInfo.DiscardUnknown(m)
}

var xxx_messageInfo_ChatInfo proto.InternalMessageInfo

func (m *ChatInfo) GetSenderId() int32 {
	if m != nil {
		return m.SenderId
	}
	return 0
}

func (m *ChatInfo) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

func (m *ChatInfo) GetSendDate() int32 {
	if m != nil {
		return m.SendDate
	}
	return 0
}

//服务器转发在线聊天信息给玩家
type S2C_Friend_OnLineMsg struct {
	Msg                  *ChatInfo `protobuf:"bytes,1,opt,name=msg,proto3" json:"msg,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *S2C_Friend_OnLineMsg) Reset()         { *m = S2C_Friend_OnLineMsg{} }
func (m *S2C_Friend_OnLineMsg) String() string { return proto.CompactTextString(m) }
func (*S2C_Friend_OnLineMsg) ProtoMessage()    {}
func (*S2C_Friend_OnLineMsg) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1680e55bbb2433d, []int{151}
}
func (m *S2C_Friend_OnLineMsg) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *S2C_Friend_OnLineMsg) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_S2C_Friend_OnLineMsg.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *S2C_Friend_OnLineMsg) XXX_Merge(src proto.Message) {
	xxx_messageInfo_S2C_Friend_OnLineMsg.Merge(m, src)
}
func (m *S2C_Friend_OnLineMsg) XXX_Size() int {
	return m.Size()
}
func (m *S2C_Friend_OnLineMsg) XXX_DiscardUnknown() {
	xxx_messageInfo_S2C_Friend_OnLineMsg.DiscardUnknown(m)
}

var xxx_messageInfo_S2C_Friend_OnLineMsg proto.InternalMessageInfo

func (m *S2C_Friend_OnLineMsg) GetMsg() *ChatInfo {
	if m != nil {
		return m.Msg
	}
	return nil
}

//服务器转发离线聊天信息给玩家
type S2C_Friend_OfflineMsg struct {
	Msg                  []*ChatInfo `protobuf:"bytes,1,rep,name=msg,proto3" json:"msg,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *S2C_Friend_OfflineMsg) Reset()         { *m = S2C_Friend_OfflineMsg{} }
func (m *S2C_Friend_OfflineMsg) String() string { return proto.CompactTextString(m) }
func (*S2C_Friend_OfflineMsg) ProtoMessage()    {}
func (*S2C_Friend_OfflineMsg) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1680e55bbb2433d, []int{152}
}
func (m *S2C_Friend_OfflineMsg) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *S2C_Friend_OfflineMsg) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_S2C_Friend_OfflineMsg.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *S2C_Friend_OfflineMsg) XXX_Merge(src proto.Message) {
	xxx_messageInfo_S2C_Friend_OfflineMsg.Merge(m, src)
}
func (m *S2C_Friend_OfflineMsg) XXX_Size() int {
	return m.Size()
}
func (m *S2C_Friend_OfflineMsg) XXX_DiscardUnknown() {
	xxx_messageInfo_S2C_Friend_OfflineMsg.DiscardUnknown(m)
}

var xxx_messageInfo_S2C_Friend_OfflineMsg proto.InternalMessageInfo

func (m *S2C_Friend_OfflineMsg) GetMsg() []*ChatInfo {
	if m != nil {
		return m.Msg
	}
	return nil
}

//客户端请求给玩家添加或修改备注
type C2S_Friend_Remarks struct {
	UserId               int32    `protobuf:"varint,1,opt,name=userId,proto3" json:"userId,omitempty"`
	Remarks              string   `protobuf:"bytes,2,opt,name=remarks,proto3" json:"remarks,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *C2S_Friend_Remarks) Reset()         { *m = C2S_Friend_Remarks{} }
func (m *C2S_Friend_Remarks) String() string { return proto.CompactTextString(m) }
func (*C2S_Friend_Remarks) ProtoMessage()    {}
func (*C2S_Friend_Remarks) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1680e55bbb2433d, []int{153}
}
func (m *C2S_Friend_Remarks) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *C2S_Friend_Remarks) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_C2S_Friend_Remarks.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *C2S_Friend_Remarks) XXX_Merge(src proto.Message) {
	xxx_messageInfo_C2S_Friend_Remarks.Merge(m, src)
}
func (m *C2S_Friend_Remarks) XXX_Size() int {
	return m.Size()
}
func (m *C2S_Friend_Remarks) XXX_DiscardUnknown() {
	xxx_messageInfo_C2S_Friend_Remarks.DiscardUnknown(m)
}

var xxx_messageInfo_C2S_Friend_Remarks proto.InternalMessageInfo

func (m *C2S_Friend_Remarks) GetUserId() int32 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *C2S_Friend_Remarks) GetRemarks() string {
	if m != nil {
		return m.Remarks
	}
	return ""
}

//服务器回复添加或修改备注结果
type S2C_Friend_Remarks struct {
	UserId               int32            `protobuf:"varint,1,opt,name=userId,proto3" json:"userId,omitempty"`
	Remarks              string           `protobuf:"bytes,2,opt,name=remarks,proto3" json:"remarks,omitempty"`
	Result               *OperationResult `protobuf:"bytes,3,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *S2C_Friend_Remarks) Reset()         { *m = S2C_Friend_Remarks{} }
func (m *S2C_Friend_Remarks) String() string { return proto.CompactTextString(m) }
func (*S2C_Friend_Remarks) ProtoMessage()    {}
func (*S2C_Friend_Remarks) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1680e55bbb2433d, []int{154}
}
func (m *S2C_Friend_Remarks) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *S2C_Friend_Remarks) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_S2C_Friend_Remarks.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *S2C_Friend_Remarks) XXX_Merge(src proto.Message) {
	xxx_messageInfo_S2C_Friend_Remarks.Merge(m, src)
}
func (m *S2C_Friend_Remarks) XXX_Size() int {
	return m.Size()
}
func (m *S2C_Friend_Remarks) XXX_DiscardUnknown() {
	xxx_messageInfo_S2C_Friend_Remarks.DiscardUnknown(m)
}

var xxx_messageInfo_S2C_Friend_Remarks proto.InternalMessageInfo

func (m *S2C_Friend_Remarks) GetUserId() int32 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *S2C_Friend_Remarks) GetRemarks() string {
	if m != nil {
		return m.Remarks
	}
	return ""
}

func (m *S2C_Friend_Remarks) GetResult() *OperationResult {
	if m != nil {
		return m.Result
	}
	return nil
}

//客户端请求推荐好友message C2S_Empty
//服务器回复推荐好友
type S2C_Friend_Recommend struct {
	Friends              []*FriendSimpleInfo `protobuf:"bytes,1,rep,name=friends,proto3" json:"friends,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *S2C_Friend_Recommend) Reset()         { *m = S2C_Friend_Recommend{} }
func (m *S2C_Friend_Recommend) String() string { return proto.CompactTextString(m) }
func (*S2C_Friend_Recommend) ProtoMessage()    {}
func (*S2C_Friend_Recommend) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1680e55bbb2433d, []int{155}
}
func (m *S2C_Friend_Recommend) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *S2C_Friend_Recommend) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_S2C_Friend_Recommend.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *S2C_Friend_Recommend) XXX_Merge(src proto.Message) {
	xxx_messageInfo_S2C_Friend_Recommend.Merge(m, src)
}
func (m *S2C_Friend_Recommend) XXX_Size() int {
	return m.Size()
}
func (m *S2C_Friend_Recommend) XXX_DiscardUnknown() {
	xxx_messageInfo_S2C_Friend_Recommend.DiscardUnknown(m)
}

var xxx_messageInfo_S2C_Friend_Recommend proto.InternalMessageInfo

func (m *S2C_Friend_Recommend) GetFriends() []*FriendSimpleInfo {
	if m != nil {
		return m.Friends
	}
	return nil
}

//服务器下发玩家在线状态变化
type S2C_Friend_State struct {
	Info                 *FriendInfo `protobuf:"bytes,1,opt,name=info,proto3" json:"info,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *S2C_Friend_State) Reset()         { *m = S2C_Friend_State{} }
func (m *S2C_Friend_State) String() string { return proto.CompactTextString(m) }
func (*S2C_Friend_State) ProtoMessage()    {}
func (*S2C_Friend_State) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1680e55bbb2433d, []int{156}
}
func (m *S2C_Friend_State) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *S2C_Friend_State) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_S2C_Friend_State.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *S2C_Friend_State) XXX_Merge(src proto.Message) {
	xxx_messageInfo_S2C_Friend_State.Merge(m, src)
}
func (m *S2C_Friend_State) XXX_Size() int {
	return m.Size()
}
func (m *S2C_Friend_State) XXX_DiscardUnknown() {
	xxx_messageInfo_S2C_Friend_State.DiscardUnknown(m)
}

var xxx_messageInfo_S2C_Friend_State proto.InternalMessageInfo

func (m *S2C_Friend_State) GetInfo() *FriendInfo {
	if m != nil {
		return m.Info
	}
	return nil
}

//客户端请求好友名片
type C2S_Friend_Card struct {
	UserId               int32    `protobuf:"varint,1,opt,name=userId,proto3" json:"userId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *C2S_Friend_Card) Reset()         { *m = C2S_Friend_Card{} }
func (m *C2S_Friend_Card) String() string { return proto.CompactTextString(m) }
func (*C2S_Friend_Card) ProtoMessage()    {}
func (*C2S_Friend_Card) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1680e55bbb2433d, []int{157}
}
func (m *C2S_Friend_Card) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *C2S_Friend_Card) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_C2S_Friend_Card.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *C2S_Friend_Card) XXX_Merge(src proto.Message) {
	xxx_messageInfo_C2S_Friend_Card.Merge(m, src)
}
func (m *C2S_Friend_Card) XXX_Size() int {
	return m.Size()
}
func (m *C2S_Friend_Card) XXX_DiscardUnknown() {
	xxx_messageInfo_C2S_Friend_Card.DiscardUnknown(m)
}

var xxx_messageInfo_C2S_Friend_Card proto.InternalMessageInfo

func (m *C2S_Friend_Card) GetUserId() int32 {
	if m != nil {
		return m.UserId
	}
	return 0
}

//服务器回复好友名片请求
type S2C_Friend_Card struct {
	Friend               *FriendInfo `protobuf:"bytes,1,opt,name=friend,proto3" json:"friend,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *S2C_Friend_Card) Reset()         { *m = S2C_Friend_Card{} }
func (m *S2C_Friend_Card) String() string { return proto.CompactTextString(m) }
func (*S2C_Friend_Card) ProtoMessage()    {}
func (*S2C_Friend_Card) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1680e55bbb2433d, []int{158}
}
func (m *S2C_Friend_Card) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *S2C_Friend_Card) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_S2C_Friend_Card.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *S2C_Friend_Card) XXX_Merge(src proto.Message) {
	xxx_messageInfo_S2C_Friend_Card.Merge(m, src)
}
func (m *S2C_Friend_Card) XXX_Size() int {
	return m.Size()
}
func (m *S2C_Friend_Card) XXX_DiscardUnknown() {
	xxx_messageInfo_S2C_Friend_Card.DiscardUnknown(m)
}

var xxx_messageInfo_S2C_Friend_Card proto.InternalMessageInfo

func (m *S2C_Friend_Card) GetFriend() *FriendInfo {
	if m != nil {
		return m.Friend
	}
	return nil
}

//客户端请求搜索玩家
type C2S_Friend_Search struct {
	GameId               int32    `protobuf:"varint,1,opt,name=gameId,proto3" json:"gameId,omitempty"`
	NickName             string   `protobuf:"bytes,2,opt,name=nickName,proto3" json:"nickName,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *C2S_Friend_Search) Reset()         { *m = C2S_Friend_Search{} }
func (m *C2S_Friend_Search) String() string { return proto.CompactTextString(m) }
func (*C2S_Friend_Search) ProtoMessage()    {}
func (*C2S_Friend_Search) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1680e55bbb2433d, []int{159}
}
func (m *C2S_Friend_Search) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *C2S_Friend_Search) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_C2S_Friend_Search.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *C2S_Friend_Search) XXX_Merge(src proto.Message) {
	xxx_messageInfo_C2S_Friend_Search.Merge(m, src)
}
func (m *C2S_Friend_Search) XXX_Size() int {
	return m.Size()
}
func (m *C2S_Friend_Search) XXX_DiscardUnknown() {
	xxx_messageInfo_C2S_Friend_Search.DiscardUnknown(m)
}

var xxx_messageInfo_C2S_Friend_Search proto.InternalMessageInfo

func (m *C2S_Friend_Search) GetGameId() int32 {
	if m != nil {
		return m.GameId
	}
	return 0
}

func (m *C2S_Friend_Search) GetNickName() string {
	if m != nil {
		return m.NickName
	}
	return ""
}

//服务器回复搜索玩家结果
type S2C_Friend_Search struct {
	Friends              []*FriendInfo `protobuf:"bytes,1,rep,name=friends,proto3" json:"friends,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *S2C_Friend_Search) Reset()         { *m = S2C_Friend_Search{} }
func (m *S2C_Friend_Search) String() string { return proto.CompactTextString(m) }
func (*S2C_Friend_Search) ProtoMessage()    {}
func (*S2C_Friend_Search) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1680e55bbb2433d, []int{160}
}
func (m *S2C_Friend_Search) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *S2C_Friend_Search) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_S2C_Friend_Search.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *S2C_Friend_Search) XXX_Merge(src proto.Message) {
	xxx_messageInfo_S2C_Friend_Search.Merge(m, src)
}
func (m *S2C_Friend_Search) XXX_Size() int {
	return m.Size()
}
func (m *S2C_Friend_Search) XXX_DiscardUnknown() {
	xxx_messageInfo_S2C_Friend_Search.DiscardUnknown(m)
}

var xxx_messageInfo_S2C_Friend_Search proto.InternalMessageInfo

func (m *S2C_Friend_Search) GetFriends() []*FriendInfo {
	if m != nil {
		return m.Friends
	}
	return nil
}

// 客户端处理别人的添加好友请求
type C2S_Friend_DealApply struct {
	UserId               []int32  `protobuf:"varint,1,rep,packed,name=userId,proto3" json:"userId,omitempty"`
	Result               bool     `protobuf:"varint,2,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *C2S_Friend_DealApply) Reset()         { *m = C2S_Friend_DealApply{} }
func (m *C2S_Friend_DealApply) String() string { return proto.CompactTextString(m) }
func (*C2S_Friend_DealApply) ProtoMessage()    {}
func (*C2S_Friend_DealApply) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1680e55bbb2433d, []int{161}
}
func (m *C2S_Friend_DealApply) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *C2S_Friend_DealApply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_C2S_Friend_DealApply.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *C2S_Friend_DealApply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_C2S_Friend_DealApply.Merge(m, src)
}
func (m *C2S_Friend_DealApply) XXX_Size() int {
	return m.Size()
}
func (m *C2S_Friend_DealApply) XXX_DiscardUnknown() {
	xxx_messageInfo_C2S_Friend_DealApply.DiscardUnknown(m)
}

var xxx_messageInfo_C2S_Friend_DealApply proto.InternalMessageInfo

func (m *C2S_Friend_DealApply) GetUserId() []int32 {
	if m != nil {
		return m.UserId
	}
	return nil
}

func (m *C2S_Friend_DealApply) GetResult() bool {
	if m != nil {
		return m.Result
	}
	return false
}

// 服务器回复客户端处理别人的添加好友请求 通过
type S2C_Friend_DealApplyPass struct {
	Result               *OperationResult `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	Friends              []*FriendInfo    `protobuf:"bytes,2,rep,name=friends,proto3" json:"friends,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *S2C_Friend_DealApplyPass) Reset()         { *m = S2C_Friend_DealApplyPass{} }
func (m *S2C_Friend_DealApplyPass) String() string { return proto.CompactTextString(m) }
func (*S2C_Friend_DealApplyPass) ProtoMessage()    {}
func (*S2C_Friend_DealApplyPass) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1680e55bbb2433d, []int{162}
}
func (m *S2C_Friend_DealApplyPass) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *S2C_Friend_DealApplyPass) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_S2C_Friend_DealApplyPass.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *S2C_Friend_DealApplyPass) XXX_Merge(src proto.Message) {
	xxx_messageInfo_S2C_Friend_DealApplyPass.Merge(m, src)
}
func (m *S2C_Friend_DealApplyPass) XXX_Size() int {
	return m.Size()
}
func (m *S2C_Friend_DealApplyPass) XXX_DiscardUnknown() {
	xxx_messageInfo_S2C_Friend_DealApplyPass.DiscardUnknown(m)
}

var xxx_messageInfo_S2C_Friend_DealApplyPass proto.InternalMessageInfo

func (m *S2C_Friend_DealApplyPass) GetResult() *OperationResult {
	if m != nil {
		return m.Result
	}
	return nil
}

func (m *S2C_Friend_DealApplyPass) GetFriends() []*FriendInfo {
	if m != nil {
		return m.Friends
	}
	return nil
}

// 服务器回复客户端处理别人的添加好友请求 忽略
type S2C_Friend_DealApplyIgnore struct {
	Result               *OperationResult `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	FriendIds            []int32          `protobuf:"varint,2,rep,packed,name=friendIds,proto3" json:"friendIds,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *S2C_Friend_DealApplyIgnore) Reset()         { *m = S2C_Friend_DealApplyIgnore{} }
func (m *S2C_Friend_DealApplyIgnore) String() string { return proto.CompactTextString(m) }
func (*S2C_Friend_DealApplyIgnore) ProtoMessage()    {}
func (*S2C_Friend_DealApplyIgnore) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1680e55bbb2433d, []int{163}
}
func (m *S2C_Friend_DealApplyIgnore) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *S2C_Friend_DealApplyIgnore) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_S2C_Friend_DealApplyIgnore.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *S2C_Friend_DealApplyIgnore) XXX_Merge(src proto.Message) {
	xxx_messageInfo_S2C_Friend_DealApplyIgnore.Merge(m, src)
}
func (m *S2C_Friend_DealApplyIgnore) XXX_Size() int {
	return m.Size()
}
func (m *S2C_Friend_DealApplyIgnore) XXX_DiscardUnknown() {
	xxx_messageInfo_S2C_Friend_DealApplyIgnore.DiscardUnknown(m)
}

var xxx_messageInfo_S2C_Friend_DealApplyIgnore proto.InternalMessageInfo

func (m *S2C_Friend_DealApplyIgnore) GetResult() *OperationResult {
	if m != nil {
		return m.Result
	}
	return nil
}

func (m *S2C_Friend_DealApplyIgnore) GetFriendIds() []int32 {
	if m != nil {
		return m.FriendIds
	}
	return nil
}

// 服务器下发玩家被申请加好友的请求列表
type S2C_Friend_ApplyList struct {
	Applications         []*FriendSimpleInfo `protobuf:"bytes,1,rep,name=applications,proto3" json:"applications,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *S2C_Friend_ApplyList) Reset()         { *m = S2C_Friend_ApplyList{} }
func (m *S2C_Friend_ApplyList) String() string { return proto.CompactTextString(m) }
func (*S2C_Friend_ApplyList) ProtoMessage()    {}
func (*S2C_Friend_ApplyList) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1680e55bbb2433d, []int{164}
}
func (m *S2C_Friend_ApplyList) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *S2C_Friend_ApplyList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_S2C_Friend_ApplyList.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *S2C_Friend_ApplyList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_S2C_Friend_ApplyList.Merge(m, src)
}
func (m *S2C_Friend_ApplyList) XXX_Size() int {
	return m.Size()
}
func (m *S2C_Friend_ApplyList) XXX_DiscardUnknown() {
	xxx_messageInfo_S2C_Friend_ApplyList.DiscardUnknown(m)
}

var xxx_messageInfo_S2C_Friend_ApplyList proto.InternalMessageInfo

func (m *S2C_Friend_ApplyList) GetApplications() []*FriendSimpleInfo {
	if m != nil {
		return m.Applications
	}
	return nil
}

// 客户端请求赠送体力
type C2S_Friend_SendEnergy struct {
	UserId               int32    `protobuf:"varint,1,opt,name=userId,proto3" json:"userId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *C2S_Friend_SendEnergy) Reset()         { *m = C2S_Friend_SendEnergy{} }
func (m *C2S_Friend_SendEnergy) String() string { return proto.CompactTextString(m) }
func (*C2S_Friend_SendEnergy) ProtoMessage()    {}
func (*C2S_Friend_SendEnergy) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1680e55bbb2433d, []int{165}
}
func (m *C2S_Friend_SendEnergy) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *C2S_Friend_SendEnergy) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_C2S_Friend_SendEnergy.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *C2S_Friend_SendEnergy) XXX_Merge(src proto.Message) {
	xxx_messageInfo_C2S_Friend_SendEnergy.Merge(m, src)
}
func (m *C2S_Friend_SendEnergy) XXX_Size() int {
	return m.Size()
}
func (m *C2S_Friend_SendEnergy) XXX_DiscardUnknown() {
	xxx_messageInfo_C2S_Friend_SendEnergy.DiscardUnknown(m)
}

var xxx_messageInfo_C2S_Friend_SendEnergy proto.InternalMessageInfo

func (m *C2S_Friend_SendEnergy) GetUserId() int32 {
	if m != nil {
		return m.UserId
	}
	return 0
}

// 服务器回复赠送结果
type S2C_Friend_SendEnergy struct {
	SenderId             int32            `protobuf:"varint,1,opt,name=senderId,proto3" json:"senderId,omitempty"`
	RecvId               int32            `protobuf:"varint,2,opt,name=recvId,proto3" json:"recvId,omitempty"`
	Result               *OperationResult `protobuf:"bytes,3,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *S2C_Friend_SendEnergy) Reset()         { *m = S2C_Friend_SendEnergy{} }
func (m *S2C_Friend_SendEnergy) String() string { return proto.CompactTextString(m) }
func (*S2C_Friend_SendEnergy) ProtoMessage()    {}
func (*S2C_Friend_SendEnergy) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1680e55bbb2433d, []int{166}
}
func (m *S2C_Friend_SendEnergy) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *S2C_Friend_SendEnergy) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_S2C_Friend_SendEnergy.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *S2C_Friend_SendEnergy) XXX_Merge(src proto.Message) {
	xxx_messageInfo_S2C_Friend_SendEnergy.Merge(m, src)
}
func (m *S2C_Friend_SendEnergy) XXX_Size() int {
	return m.Size()
}
func (m *S2C_Friend_SendEnergy) XXX_DiscardUnknown() {
	xxx_messageInfo_S2C_Friend_SendEnergy.DiscardUnknown(m)
}

var xxx_messageInfo_S2C_Friend_SendEnergy proto.InternalMessageInfo

func (m *S2C_Friend_SendEnergy) GetSenderId() int32 {
	if m != nil {
		return m.SenderId
	}
	return 0
}

func (m *S2C_Friend_SendEnergy) GetRecvId() int32 {
	if m != nil {
		return m.RecvId
	}
	return 0
}

func (m *S2C_Friend_SendEnergy) GetResult() *OperationResult {
	if m != nil {
		return m.Result
	}
	return nil
}

// 服务器回复一键赠送体力
type S2C_Friend_SendEnergyAll struct {
	UserIds              []int32          `protobuf:"varint,1,rep,packed,name=userIds,proto3" json:"userIds,omitempty"`
	Result               *OperationResult `protobuf:"bytes,2,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *S2C_Friend_SendEnergyAll) Reset()         { *m = S2C_Friend_SendEnergyAll{} }
func (m *S2C_Friend_SendEnergyAll) String() string { return proto.CompactTextString(m) }
func (*S2C_Friend_SendEnergyAll) ProtoMessage()    {}
func (*S2C_Friend_SendEnergyAll) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1680e55bbb2433d, []int{167}
}
func (m *S2C_Friend_SendEnergyAll) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *S2C_Friend_SendEnergyAll) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_S2C_Friend_SendEnergyAll.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *S2C_Friend_SendEnergyAll) XXX_Merge(src proto.Message) {
	xxx_messageInfo_S2C_Friend_SendEnergyAll.Merge(m, src)
}
func (m *S2C_Friend_SendEnergyAll) XXX_Size() int {
	return m.Size()
}
func (m *S2C_Friend_SendEnergyAll) XXX_DiscardUnknown() {
	xxx_messageInfo_S2C_Friend_SendEnergyAll.DiscardUnknown(m)
}

var xxx_messageInfo_S2C_Friend_SendEnergyAll proto.InternalMessageInfo

func (m *S2C_Friend_SendEnergyAll) GetUserIds() []int32 {
	if m != nil {
		return m.UserIds
	}
	return nil
}

func (m *S2C_Friend_SendEnergyAll) GetResult() *OperationResult {
	if m != nil {
		return m.Result
	}
	return nil
}

// 服务器回复一键接收体力
type S2C_Friend_GetEnergyAll struct {
	UserIds              []int32          `protobuf:"varint,1,rep,packed,name=userIds,proto3" json:"userIds,omitempty"`
	Result               *OperationResult `protobuf:"bytes,2,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *S2C_Friend_GetEnergyAll) Reset()         { *m = S2C_Friend_GetEnergyAll{} }
func (m *S2C_Friend_GetEnergyAll) String() string { return proto.CompactTextString(m) }
func (*S2C_Friend_GetEnergyAll) ProtoMessage()    {}
func (*S2C_Friend_GetEnergyAll) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1680e55bbb2433d, []int{168}
}
func (m *S2C_Friend_GetEnergyAll) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *S2C_Friend_GetEnergyAll) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_S2C_Friend_GetEnergyAll.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *S2C_Friend_GetEnergyAll) XXX_Merge(src proto.Message) {
	xxx_messageInfo_S2C_Friend_GetEnergyAll.Merge(m, src)
}
func (m *S2C_Friend_GetEnergyAll) XXX_Size() int {
	return m.Size()
}
func (m *S2C_Friend_GetEnergyAll) XXX_DiscardUnknown() {
	xxx_messageInfo_S2C_Friend_GetEnergyAll.DiscardUnknown(m)
}

var xxx_messageInfo_S2C_Friend_GetEnergyAll proto.InternalMessageInfo

func (m *S2C_Friend_GetEnergyAll) GetUserIds() []int32 {
	if m != nil {
		return m.UserIds
	}
	return nil
}

func (m *S2C_Friend_GetEnergyAll) GetResult() *OperationResult {
	if m != nil {
		return m.Result
	}
	return nil
}

// 服务器回复客户端请求领取体力
type S2C_Friend_GetEnergy struct {
	UserId               int32            `protobuf:"varint,1,opt,name=userId,proto3" json:"userId,omitempty"`
	Result               *OperationResult `protobuf:"bytes,2,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *S2C_Friend_GetEnergy) Reset()         { *m = S2C_Friend_GetEnergy{} }
func (m *S2C_Friend_GetEnergy) String() string { return proto.CompactTextString(m) }
func (*S2C_Friend_GetEnergy) ProtoMessage()    {}
func (*S2C_Friend_GetEnergy) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1680e55bbb2433d, []int{169}
}
func (m *S2C_Friend_GetEnergy) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *S2C_Friend_GetEnergy) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_S2C_Friend_GetEnergy.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *S2C_Friend_GetEnergy) XXX_Merge(src proto.Message) {
	xxx_messageInfo_S2C_Friend_GetEnergy.Merge(m, src)
}
func (m *S2C_Friend_GetEnergy) XXX_Size() int {
	return m.Size()
}
func (m *S2C_Friend_GetEnergy) XXX_DiscardUnknown() {
	xxx_messageInfo_S2C_Friend_GetEnergy.DiscardUnknown(m)
}

var xxx_messageInfo_S2C_Friend_GetEnergy proto.InternalMessageInfo

func (m *S2C_Friend_GetEnergy) GetUserId() int32 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *S2C_Friend_GetEnergy) GetResult() *OperationResult {
	if m != nil {
		return m.Result
	}
	return nil
}

// 客户端请求领取体力
type C2S_Friend_GetEnergy struct {
	UserId               int32    `protobuf:"varint,1,opt,name=userId,proto3" json:"userId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *C2S_Friend_GetEnergy) Reset()         { *m = C2S_Friend_GetEnergy{} }
func (m *C2S_Friend_GetEnergy) String() string { return proto.CompactTextString(m) }
func (*C2S_Friend_GetEnergy) ProtoMessage()    {}
func (*C2S_Friend_GetEnergy) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1680e55bbb2433d, []int{170}
}
func (m *C2S_Friend_GetEnergy) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *C2S_Friend_GetEnergy) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_C2S_Friend_GetEnergy.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *C2S_Friend_GetEnergy) XXX_Merge(src proto.Message) {
	xxx_messageInfo_C2S_Friend_GetEnergy.Merge(m, src)
}
func (m *C2S_Friend_GetEnergy) XXX_Size() int {
	return m.Size()
}
func (m *C2S_Friend_GetEnergy) XXX_DiscardUnknown() {
	xxx_messageInfo_C2S_Friend_GetEnergy.DiscardUnknown(m)
}

var xxx_messageInfo_C2S_Friend_GetEnergy proto.InternalMessageInfo

func (m *C2S_Friend_GetEnergy) GetUserId() int32 {
	if m != nil {
		return m.UserId
	}
	return 0
}

// 添加到屏蔽列表
type C2S_Friend_AddBlock struct {
	UserId               int32    `protobuf:"varint,1,opt,name=userId,proto3" json:"userId,omitempty"`
	Cloth                int32    `protobuf:"varint,2,opt,name=cloth,proto3" json:"cloth,omitempty"`
	Frame                int32    `protobuf:"varint,3,opt,name=frame,proto3" json:"frame,omitempty"`
	NickName             string   `protobuf:"bytes,4,opt,name=nickName,proto3" json:"nickName,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *C2S_Friend_AddBlock) Reset()         { *m = C2S_Friend_AddBlock{} }
func (m *C2S_Friend_AddBlock) String() string { return proto.CompactTextString(m) }
func (*C2S_Friend_AddBlock) ProtoMessage()    {}
func (*C2S_Friend_AddBlock) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1680e55bbb2433d, []int{171}
}
func (m *C2S_Friend_AddBlock) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *C2S_Friend_AddBlock) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_C2S_Friend_AddBlock.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *C2S_Friend_AddBlock) XXX_Merge(src proto.Message) {
	xxx_messageInfo_C2S_Friend_AddBlock.Merge(m, src)
}
func (m *C2S_Friend_AddBlock) XXX_Size() int {
	return m.Size()
}
func (m *C2S_Friend_AddBlock) XXX_DiscardUnknown() {
	xxx_messageInfo_C2S_Friend_AddBlock.DiscardUnknown(m)
}

var xxx_messageInfo_C2S_Friend_AddBlock proto.InternalMessageInfo

func (m *C2S_Friend_AddBlock) GetUserId() int32 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *C2S_Friend_AddBlock) GetCloth() int32 {
	if m != nil {
		return m.Cloth
	}
	return 0
}

func (m *C2S_Friend_AddBlock) GetFrame() int32 {
	if m != nil {
		return m.Frame
	}
	return 0
}

func (m *C2S_Friend_AddBlock) GetNickName() string {
	if m != nil {
		return m.NickName
	}
	return ""
}

// 添加到屏蔽列表
type S2C_Friend_AddBlock struct {
	UserId               int32            `protobuf:"varint,1,opt,name=userId,proto3" json:"userId,omitempty"`
	Result               *OperationResult `protobuf:"bytes,2,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *S2C_Friend_AddBlock) Reset()         { *m = S2C_Friend_AddBlock{} }
func (m *S2C_Friend_AddBlock) String() string { return proto.CompactTextString(m) }
func (*S2C_Friend_AddBlock) ProtoMessage()    {}
func (*S2C_Friend_AddBlock) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1680e55bbb2433d, []int{172}
}
func (m *S2C_Friend_AddBlock) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *S2C_Friend_AddBlock) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_S2C_Friend_AddBlock.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *S2C_Friend_AddBlock) XXX_Merge(src proto.Message) {
	xxx_messageInfo_S2C_Friend_AddBlock.Merge(m, src)
}
func (m *S2C_Friend_AddBlock) XXX_Size() int {
	return m.Size()
}
func (m *S2C_Friend_AddBlock) XXX_DiscardUnknown() {
	xxx_messageInfo_S2C_Friend_AddBlock.DiscardUnknown(m)
}

var xxx_messageInfo_S2C_Friend_AddBlock proto.InternalMessageInfo

func (m *S2C_Friend_AddBlock) GetUserId() int32 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *S2C_Friend_AddBlock) GetResult() *OperationResult {
	if m != nil {
		return m.Result
	}
	return nil
}

// 从屏蔽列表删除
type C2S_Friend_DelBlock struct {
	UserId               int32    `protobuf:"varint,1,opt,name=userId,proto3" json:"userId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *C2S_Friend_DelBlock) Reset()         { *m = C2S_Friend_DelBlock{} }
func (m *C2S_Friend_DelBlock) String() string { return proto.CompactTextString(m) }
func (*C2S_Friend_DelBlock) ProtoMessage()    {}
func (*C2S_Friend_DelBlock) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1680e55bbb2433d, []int{173}
}
func (m *C2S_Friend_DelBlock) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *C2S_Friend_DelBlock) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_C2S_Friend_DelBlock.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *C2S_Friend_DelBlock) XXX_Merge(src proto.Message) {
	xxx_messageInfo_C2S_Friend_DelBlock.Merge(m, src)
}
func (m *C2S_Friend_DelBlock) XXX_Size() int {
	return m.Size()
}
func (m *C2S_Friend_DelBlock) XXX_DiscardUnknown() {
	xxx_messageInfo_C2S_Friend_DelBlock.DiscardUnknown(m)
}

var xxx_messageInfo_C2S_Friend_DelBlock proto.InternalMessageInfo

func (m *C2S_Friend_DelBlock) GetUserId() int32 {
	if m != nil {
		return m.UserId
	}
	return 0
}

// 从屏蔽列表删除
type S2C_Friend_DelBlock struct {
	UserId               int32            `protobuf:"varint,1,opt,name=userId,proto3" json:"userId,omitempty"`
	Result               *OperationResult `protobuf:"bytes,2,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *S2C_Friend_DelBlock) Reset()         { *m = S2C_Friend_DelBlock{} }
func (m *S2C_Friend_DelBlock) String() string { return proto.CompactTextString(m) }
func (*S2C_Friend_DelBlock) ProtoMessage()    {}
func (*S2C_Friend_DelBlock) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1680e55bbb2433d, []int{174}
}
func (m *S2C_Friend_DelBlock) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *S2C_Friend_DelBlock) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_S2C_Friend_DelBlock.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *S2C_Friend_DelBlock) XXX_Merge(src proto.Message) {
	xxx_messageInfo_S2C_Friend_DelBlock.Merge(m, src)
}
func (m *S2C_Friend_DelBlock) XXX_Size() int {
	return m.Size()
}
func (m *S2C_Friend_DelBlock) XXX_DiscardUnknown() {
	xxx_messageInfo_S2C_Friend_DelBlock.DiscardUnknown(m)
}

var xxx_messageInfo_S2C_Friend_DelBlock proto.InternalMessageInfo

func (m *S2C_Friend_DelBlock) GetUserId() int32 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *S2C_Friend_DelBlock) GetResult() *OperationResult {
	if m != nil {
		return m.Result
	}
	return nil
}

//-----------------------------------场景 begin----------------------------------
// 场景玩家(简略)信息
type SceneUser struct {
	UserId               int32    `protobuf:"varint,1,opt,name=userId,proto3" json:"userId,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	ClothesId            int32    `protobuf:"varint,3,opt,name=clothesId,proto3" json:"clothesId,omitempty"`
	Level                int32    `protobuf:"varint,4,opt,name=level,proto3" json:"level,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SceneUser) Reset()         { *m = SceneUser{} }
func (m *SceneUser) String() string { return proto.CompactTextString(m) }
func (*SceneUser) ProtoMessage()    {}
func (*SceneUser) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1680e55bbb2433d, []int{175}
}
func (m *SceneUser) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *SceneUser) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_SceneUser.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *SceneUser) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SceneUser.Merge(m, src)
}
func (m *SceneUser) XXX_Size() int {
	return m.Size()
}
func (m *SceneUser) XXX_DiscardUnknown() {
	xxx_messageInfo_SceneUser.DiscardUnknown(m)
}

var xxx_messageInfo_SceneUser proto.InternalMessageInfo

func (m *SceneUser) GetUserId() int32 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *SceneUser) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *SceneUser) GetClothesId() int32 {
	if m != nil {
		return m.ClothesId
	}
	return 0
}

func (m *SceneUser) GetLevel() int32 {
	if m != nil {
		return m.Level
	}
	return 0
}

// 玩家位置信息
type PosInfo struct {
	UserId               int32    `protobuf:"varint,1,opt,name=userId,proto3" json:"userId,omitempty"`
	PosX                 float64  `protobuf:"fixed64,2,opt,name=posX,proto3" json:"posX,omitempty"`
	PosZ                 float64  `protobuf:"fixed64,3,opt,name=posZ,proto3" json:"posZ,omitempty"`
	DirX                 float64  `protobuf:"fixed64,4,opt,name=dirX,proto3" json:"dirX,omitempty"`
	DirZ                 float64  `protobuf:"fixed64,5,opt,name=dirZ,proto3" json:"dirZ,omitempty"`
	FindWay              bool     `protobuf:"varint,6,opt,name=findWay,proto3" json:"findWay,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PosInfo) Reset()         { *m = PosInfo{} }
func (m *PosInfo) String() string { return proto.CompactTextString(m) }
func (*PosInfo) ProtoMessage()    {}
func (*PosInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1680e55bbb2433d, []int{176}
}
func (m *PosInfo) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *PosInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_PosInfo.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *PosInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PosInfo.Merge(m, src)
}
func (m *PosInfo) XXX_Size() int {
	return m.Size()
}
func (m *PosInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_PosInfo.DiscardUnknown(m)
}

var xxx_messageInfo_PosInfo proto.InternalMessageInfo

func (m *PosInfo) GetUserId() int32 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *PosInfo) GetPosX() float64 {
	if m != nil {
		return m.PosX
	}
	return 0
}

func (m *PosInfo) GetPosZ() float64 {
	if m != nil {
		return m.PosZ
	}
	return 0
}

func (m *PosInfo) GetDirX() float64 {
	if m != nil {
		return m.DirX
	}
	return 0
}

func (m *PosInfo) GetDirZ() float64 {
	if m != nil {
		return m.DirZ
	}
	return 0
}

func (m *PosInfo) GetFindWay() bool {
	if m != nil {
		return m.FindWay
	}
	return false
}

// 请求进入场景
type C2S_Syn_EnterScene struct {
	TemplateId           int32    `protobuf:"varint,1,opt,name=templateId,proto3" json:"templateId,omitempty"`
	Index                int32    `protobuf:"varint,2,opt,name=index,proto3" json:"index,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *C2S_Syn_EnterScene) Reset()         { *m = C2S_Syn_EnterScene{} }
func (m *C2S_Syn_EnterScene) String() string { return proto.CompactTextString(m) }
func (*C2S_Syn_EnterScene) ProtoMessage()    {}
func (*C2S_Syn_EnterScene) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1680e55bbb2433d, []int{177}
}
func (m *C2S_Syn_EnterScene) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *C2S_Syn_EnterScene) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_C2S_Syn_EnterScene.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *C2S_Syn_EnterScene) XXX_Merge(src proto.Message) {
	xxx_messageInfo_C2S_Syn_EnterScene.Merge(m, src)
}
func (m *C2S_Syn_EnterScene) XXX_Size() int {
	return m.Size()
}
func (m *C2S_Syn_EnterScene) XXX_DiscardUnknown() {
	xxx_messageInfo_C2S_Syn_EnterScene.DiscardUnknown(m)
}

var xxx_messageInfo_C2S_Syn_EnterScene proto.InternalMessageInfo

func (m *C2S_Syn_EnterScene) GetTemplateId() int32 {
	if m != nil {
		return m.TemplateId
	}
	return 0
}

func (m *C2S_Syn_EnterScene) GetIndex() int32 {
	if m != nil {
		return m.Index
	}
	return 0
}

// 进入场景结果
type S2C_Syn_EnterScene struct {
	SceneId              int64            `protobuf:"varint,1,opt,name=sceneId,proto3" json:"sceneId,omitempty"`
	Result               *OperationResult `protobuf:"bytes,2,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *S2C_Syn_EnterScene) Reset()         { *m = S2C_Syn_EnterScene{} }
func (m *S2C_Syn_EnterScene) String() string { return proto.CompactTextString(m) }
func (*S2C_Syn_EnterScene) ProtoMessage()    {}
func (*S2C_Syn_EnterScene) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1680e55bbb2433d, []int{178}
}
func (m *S2C_Syn_EnterScene) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *S2C_Syn_EnterScene) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_S2C_Syn_EnterScene.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *S2C_Syn_EnterScene) XXX_Merge(src proto.Message) {
	xxx_messageInfo_S2C_Syn_EnterScene.Merge(m, src)
}
func (m *S2C_Syn_EnterScene) XXX_Size() int {
	return m.Size()
}
func (m *S2C_Syn_EnterScene) XXX_DiscardUnknown() {
	xxx_messageInfo_S2C_Syn_EnterScene.DiscardUnknown(m)
}

var xxx_messageInfo_S2C_Syn_EnterScene proto.InternalMessageInfo

func (m *S2C_Syn_EnterScene) GetSceneId() int64 {
	if m != nil {
		return m.SceneId
	}
	return 0
}

func (m *S2C_Syn_EnterScene) GetResult() *OperationResult {
	if m != nil {
		return m.Result
	}
	return nil
}

// 请求场景(所有)玩家数据
type C2S_Syn_SceneData struct {
	SceneId              int64    `protobuf:"varint,1,opt,name=sceneId,proto3" json:"sceneId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *C2S_Syn_SceneData) Reset()         { *m = C2S_Syn_SceneData{} }
func (m *C2S_Syn_SceneData) String() string { return proto.CompactTextString(m) }
func (*C2S_Syn_SceneData) ProtoMessage()    {}
func (*C2S_Syn_SceneData) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1680e55bbb2433d, []int{179}
}
func (m *C2S_Syn_SceneData) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *C2S_Syn_SceneData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_C2S_Syn_SceneData.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *C2S_Syn_SceneData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_C2S_Syn_SceneData.Merge(m, src)
}
func (m *C2S_Syn_SceneData) XXX_Size() int {
	return m.Size()
}
func (m *C2S_Syn_SceneData) XXX_DiscardUnknown() {
	xxx_messageInfo_C2S_Syn_SceneData.DiscardUnknown(m)
}

var xxx_messageInfo_C2S_Syn_SceneData proto.InternalMessageInfo

func (m *C2S_Syn_SceneData) GetSceneId() int64 {
	if m != nil {
		return m.SceneId
	}
	return 0
}

// 返回场景(所有)玩家数据
type S2C_Syn_SceneData struct {
	BaseData             []*SceneUser `protobuf:"bytes,1,rep,name=baseData,proto3" json:"baseData,omitempty"`
	Posdata              []*PosInfo   `protobuf:"bytes,2,rep,name=posdata,proto3" json:"posdata,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *S2C_Syn_SceneData) Reset()         { *m = S2C_Syn_SceneData{} }
func (m *S2C_Syn_SceneData) String() string { return proto.CompactTextString(m) }
func (*S2C_Syn_SceneData) ProtoMessage()    {}
func (*S2C_Syn_SceneData) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1680e55bbb2433d, []int{180}
}
func (m *S2C_Syn_SceneData) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *S2C_Syn_SceneData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_S2C_Syn_SceneData.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *S2C_Syn_SceneData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_S2C_Syn_SceneData.Merge(m, src)
}
func (m *S2C_Syn_SceneData) XXX_Size() int {
	return m.Size()
}
func (m *S2C_Syn_SceneData) XXX_DiscardUnknown() {
	xxx_messageInfo_S2C_Syn_SceneData.DiscardUnknown(m)
}

var xxx_messageInfo_S2C_Syn_SceneData proto.InternalMessageInfo

func (m *S2C_Syn_SceneData) GetBaseData() []*SceneUser {
	if m != nil {
		return m.BaseData
	}
	return nil
}

func (m *S2C_Syn_SceneData) GetPosdata() []*PosInfo {
	if m != nil {
		return m.Posdata
	}
	return nil
}

// 同步玩家基础信息
type S2C_Syn_Info struct {
	Data                 *SceneUser `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *S2C_Syn_Info) Reset()         { *m = S2C_Syn_Info{} }
func (m *S2C_Syn_Info) String() string { return proto.CompactTextString(m) }
func (*S2C_Syn_Info) ProtoMessage()    {}
func (*S2C_Syn_Info) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1680e55bbb2433d, []int{181}
}
func (m *S2C_Syn_Info) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *S2C_Syn_Info) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_S2C_Syn_Info.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *S2C_Syn_Info) XXX_Merge(src proto.Message) {
	xxx_messageInfo_S2C_Syn_Info.Merge(m, src)
}
func (m *S2C_Syn_Info) XXX_Size() int {
	return m.Size()
}
func (m *S2C_Syn_Info) XXX_DiscardUnknown() {
	xxx_messageInfo_S2C_Syn_Info.DiscardUnknown(m)
}

var xxx_messageInfo_S2C_Syn_Info proto.InternalMessageInfo

func (m *S2C_Syn_Info) GetData() *SceneUser {
	if m != nil {
		return m.Data
	}
	return nil
}

// 同步玩家位置信息
type S2C_Syn_Pos struct {
	Data                 *PosInfo `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *S2C_Syn_Pos) Reset()         { *m = S2C_Syn_Pos{} }
func (m *S2C_Syn_Pos) String() string { return proto.CompactTextString(m) }
func (*S2C_Syn_Pos) ProtoMessage()    {}
func (*S2C_Syn_Pos) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1680e55bbb2433d, []int{182}
}
func (m *S2C_Syn_Pos) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *S2C_Syn_Pos) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_S2C_Syn_Pos.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *S2C_Syn_Pos) XXX_Merge(src proto.Message) {
	xxx_messageInfo_S2C_Syn_Pos.Merge(m, src)
}
func (m *S2C_Syn_Pos) XXX_Size() int {
	return m.Size()
}
func (m *S2C_Syn_Pos) XXX_DiscardUnknown() {
	xxx_messageInfo_S2C_Syn_Pos.DiscardUnknown(m)
}

var xxx_messageInfo_S2C_Syn_Pos proto.InternalMessageInfo

func (m *S2C_Syn_Pos) GetData() *PosInfo {
	if m != nil {
		return m.Data
	}
	return nil
}

// 请求位置变更(开始移动，方向变更，停止移动)
type C2S_Syn_Move struct {
	Data                 *PosInfo `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *C2S_Syn_Move) Reset()         { *m = C2S_Syn_Move{} }
func (m *C2S_Syn_Move) String() string { return proto.CompactTextString(m) }
func (*C2S_Syn_Move) ProtoMessage()    {}
func (*C2S_Syn_Move) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1680e55bbb2433d, []int{183}
}
func (m *C2S_Syn_Move) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *C2S_Syn_Move) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_C2S_Syn_Move.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *C2S_Syn_Move) XXX_Merge(src proto.Message) {
	xxx_messageInfo_C2S_Syn_Move.Merge(m, src)
}
func (m *C2S_Syn_Move) XXX_Size() int {
	return m.Size()
}
func (m *C2S_Syn_Move) XXX_DiscardUnknown() {
	xxx_messageInfo_C2S_Syn_Move.DiscardUnknown(m)
}

var xxx_messageInfo_C2S_Syn_Move proto.InternalMessageInfo

func (m *C2S_Syn_Move) GetData() *PosInfo {
	if m != nil {
		return m.Data
	}
	return nil
}

// 请求修改(接收场景内玩家基础/坐标信息)状态
type C2S_Syn_ModifyRecvMsgStatus struct {
	Status               bool     `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *C2S_Syn_ModifyRecvMsgStatus) Reset()         { *m = C2S_Syn_ModifyRecvMsgStatus{} }
func (m *C2S_Syn_ModifyRecvMsgStatus) String() string { return proto.CompactTextString(m) }
func (*C2S_Syn_ModifyRecvMsgStatus) ProtoMessage()    {}
func (*C2S_Syn_ModifyRecvMsgStatus) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1680e55bbb2433d, []int{184}
}
func (m *C2S_Syn_ModifyRecvMsgStatus) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *C2S_Syn_ModifyRecvMsgStatus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_C2S_Syn_ModifyRecvMsgStatus.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *C2S_Syn_ModifyRecvMsgStatus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_C2S_Syn_ModifyRecvMsgStatus.Merge(m, src)
}
func (m *C2S_Syn_ModifyRecvMsgStatus) XXX_Size() int {
	return m.Size()
}
func (m *C2S_Syn_ModifyRecvMsgStatus) XXX_DiscardUnknown() {
	xxx_messageInfo_C2S_Syn_ModifyRecvMsgStatus.DiscardUnknown(m)
}

var xxx_messageInfo_C2S_Syn_ModifyRecvMsgStatus proto.InternalMessageInfo

func (m *C2S_Syn_ModifyRecvMsgStatus) GetStatus() bool {
	if m != nil {
		return m.Status
	}
	return false
}

// 告知有玩家离开场景
type S2C_Syn_LeaveScene struct {
	UserId               int32    `protobuf:"varint,1,opt,name=userId,proto3" json:"userId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *S2C_Syn_LeaveScene) Reset()         { *m = S2C_Syn_LeaveScene{} }
func (m *S2C_Syn_LeaveScene) String() string { return proto.CompactTextString(m) }
func (*S2C_Syn_LeaveScene) ProtoMessage()    {}
func (*S2C_Syn_LeaveScene) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1680e55bbb2433d, []int{185}
}
func (m *S2C_Syn_LeaveScene) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *S2C_Syn_LeaveScene) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_S2C_Syn_LeaveScene.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *S2C_Syn_LeaveScene) XXX_Merge(src proto.Message) {
	xxx_messageInfo_S2C_Syn_LeaveScene.Merge(m, src)
}
func (m *S2C_Syn_LeaveScene) XXX_Size() int {
	return m.Size()
}
func (m *S2C_Syn_LeaveScene) XXX_DiscardUnknown() {
	xxx_messageInfo_S2C_Syn_LeaveScene.DiscardUnknown(m)
}

var xxx_messageInfo_S2C_Syn_LeaveScene proto.InternalMessageInfo

func (m *S2C_Syn_LeaveScene) GetUserId() int32 {
	if m != nil {
		return m.UserId
	}
	return 0
}

//-----------------------------------打地鼠 begin--------------------------------
type Mouse struct {
	MouseId              int32    `protobuf:"varint,1,opt,name=mouseId,proto3" json:"mouseId,omitempty"`
	MouseType            int32    `protobuf:"varint,2,opt,name=mouseType,proto3" json:"mouseType,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Mouse) Reset()         { *m = Mouse{} }
func (m *Mouse) String() string { return proto.CompactTextString(m) }
func (*Mouse) ProtoMessage()    {}
func (*Mouse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1680e55bbb2433d, []int{186}
}
func (m *Mouse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Mouse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Mouse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Mouse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Mouse.Merge(m, src)
}
func (m *Mouse) XXX_Size() int {
	return m.Size()
}
func (m *Mouse) XXX_DiscardUnknown() {
	xxx_messageInfo_Mouse.DiscardUnknown(m)
}

var xxx_messageInfo_Mouse proto.InternalMessageInfo

func (m *Mouse) GetMouseId() int32 {
	if m != nil {
		return m.MouseId
	}
	return 0
}

func (m *Mouse) GetMouseType() int32 {
	if m != nil {
		return m.MouseType
	}
	return 0
}

// 客户端请求进入老鼠洞(开始游戏)
type C2S_Mouse_EnterHole struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *C2S_Mouse_EnterHole) Reset()         { *m = C2S_Mouse_EnterHole{} }
func (m *C2S_Mouse_EnterHole) String() string { return proto.CompactTextString(m) }
func (*C2S_Mouse_EnterHole) ProtoMessage()    {}
func (*C2S_Mouse_EnterHole) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1680e55bbb2433d, []int{187}
}
func (m *C2S_Mouse_EnterHole) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *C2S_Mouse_EnterHole) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_C2S_Mouse_EnterHole.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *C2S_Mouse_EnterHole) XXX_Merge(src proto.Message) {
	xxx_messageInfo_C2S_Mouse_EnterHole.Merge(m, src)
}
func (m *C2S_Mouse_EnterHole) XXX_Size() int {
	return m.Size()
}
func (m *C2S_Mouse_EnterHole) XXX_DiscardUnknown() {
	xxx_messageInfo_C2S_Mouse_EnterHole.DiscardUnknown(m)
}

var xxx_messageInfo_C2S_Mouse_EnterHole proto.InternalMessageInfo

// 服务端返回进入结果
type S2C_Mouse_EnterHole struct {
	Result               *OperationResult `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *S2C_Mouse_EnterHole) Reset()         { *m = S2C_Mouse_EnterHole{} }
func (m *S2C_Mouse_EnterHole) String() string { return proto.CompactTextString(m) }
func (*S2C_Mouse_EnterHole) ProtoMessage()    {}
func (*S2C_Mouse_EnterHole) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1680e55bbb2433d, []int{188}
}
func (m *S2C_Mouse_EnterHole) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *S2C_Mouse_EnterHole) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_S2C_Mouse_EnterHole.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *S2C_Mouse_EnterHole) XXX_Merge(src proto.Message) {
	xxx_messageInfo_S2C_Mouse_EnterHole.Merge(m, src)
}
func (m *S2C_Mouse_EnterHole) XXX_Size() int {
	return m.Size()
}
func (m *S2C_Mouse_EnterHole) XXX_DiscardUnknown() {
	xxx_messageInfo_S2C_Mouse_EnterHole.DiscardUnknown(m)
}

var xxx_messageInfo_S2C_Mouse_EnterHole proto.InternalMessageInfo

func (m *S2C_Mouse_EnterHole) GetResult() *OperationResult {
	if m != nil {
		return m.Result
	}
	return nil
}

// 老鼠洞生成新老鼠
type S2C_Mouse_NewMouse struct {
	MouseList            []*Mouse `protobuf:"bytes,1,rep,name=mouseList,proto3" json:"mouseList,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *S2C_Mouse_NewMouse) Reset()         { *m = S2C_Mouse_NewMouse{} }
func (m *S2C_Mouse_NewMouse) String() string { return proto.CompactTextString(m) }
func (*S2C_Mouse_NewMouse) ProtoMessage()    {}
func (*S2C_Mouse_NewMouse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1680e55bbb2433d, []int{189}
}
func (m *S2C_Mouse_NewMouse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *S2C_Mouse_NewMouse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_S2C_Mouse_NewMouse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *S2C_Mouse_NewMouse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_S2C_Mouse_NewMouse.Merge(m, src)
}
func (m *S2C_Mouse_NewMouse) XXX_Size() int {
	return m.Size()
}
func (m *S2C_Mouse_NewMouse) XXX_DiscardUnknown() {
	xxx_messageInfo_S2C_Mouse_NewMouse.DiscardUnknown(m)
}

var xxx_messageInfo_S2C_Mouse_NewMouse proto.InternalMessageInfo

func (m *S2C_Mouse_NewMouse) GetMouseList() []*Mouse {
	if m != nil {
		return m.MouseList
	}
	return nil
}

// 客户端告知击中某只老鼠
type C2S_Mouse_Hit struct {
	MouseId              int64    `protobuf:"varint,1,opt,name=mouseId,proto3" json:"mouseId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *C2S_Mouse_Hit) Reset()         { *m = C2S_Mouse_Hit{} }
func (m *C2S_Mouse_Hit) String() string { return proto.CompactTextString(m) }
func (*C2S_Mouse_Hit) ProtoMessage()    {}
func (*C2S_Mouse_Hit) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1680e55bbb2433d, []int{190}
}
func (m *C2S_Mouse_Hit) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *C2S_Mouse_Hit) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_C2S_Mouse_Hit.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *C2S_Mouse_Hit) XXX_Merge(src proto.Message) {
	xxx_messageInfo_C2S_Mouse_Hit.Merge(m, src)
}
func (m *C2S_Mouse_Hit) XXX_Size() int {
	return m.Size()
}
func (m *C2S_Mouse_Hit) XXX_DiscardUnknown() {
	xxx_messageInfo_C2S_Mouse_Hit.DiscardUnknown(m)
}

var xxx_messageInfo_C2S_Mouse_Hit proto.InternalMessageInfo

func (m *C2S_Mouse_Hit) GetMouseId() int64 {
	if m != nil {
		return m.MouseId
	}
	return 0
}

// 客户端告知白菜被吃了一口
type C2S_Mouse_Eat struct {
	MouseId              int64    `protobuf:"varint,1,opt,name=mouseId,proto3" json:"mouseId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *C2S_Mouse_Eat) Reset()         { *m = C2S_Mouse_Eat{} }
func (m *C2S_Mouse_Eat) String() string { return proto.CompactTextString(m) }
func (*C2S_Mouse_Eat) ProtoMessage()    {}
func (*C2S_Mouse_Eat) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1680e55bbb2433d, []int{191}
}
func (m *C2S_Mouse_Eat) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *C2S_Mouse_Eat) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_C2S_Mouse_Eat.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *C2S_Mouse_Eat) XXX_Merge(src proto.Message) {
	xxx_messageInfo_C2S_Mouse_Eat.Merge(m, src)
}
func (m *C2S_Mouse_Eat) XXX_Size() int {
	return m.Size()
}
func (m *C2S_Mouse_Eat) XXX_DiscardUnknown() {
	xxx_messageInfo_C2S_Mouse_Eat.DiscardUnknown(m)
}

var xxx_messageInfo_C2S_Mouse_Eat proto.InternalMessageInfo

func (m *C2S_Mouse_Eat) GetMouseId() int64 {
	if m != nil {
		return m.MouseId
	}
	return 0
}

// 客户端告知放炸弹了
type C2S_Mouse_Bomb struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *C2S_Mouse_Bomb) Reset()         { *m = C2S_Mouse_Bomb{} }
func (m *C2S_Mouse_Bomb) String() string { return proto.CompactTextString(m) }
func (*C2S_Mouse_Bomb) ProtoMessage()    {}
func (*C2S_Mouse_Bomb) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1680e55bbb2433d, []int{192}
}
func (m *C2S_Mouse_Bomb) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *C2S_Mouse_Bomb) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_C2S_Mouse_Bomb.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *C2S_Mouse_Bomb) XXX_Merge(src proto.Message) {
	xxx_messageInfo_C2S_Mouse_Bomb.Merge(m, src)
}
func (m *C2S_Mouse_Bomb) XXX_Size() int {
	return m.Size()
}
func (m *C2S_Mouse_Bomb) XXX_DiscardUnknown() {
	xxx_messageInfo_C2S_Mouse_Bomb.DiscardUnknown(m)
}

var xxx_messageInfo_C2S_Mouse_Bomb proto.InternalMessageInfo

// 服务端告知游戏结束
type S2C_Mouse_Over struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *S2C_Mouse_Over) Reset()         { *m = S2C_Mouse_Over{} }
func (m *S2C_Mouse_Over) String() string { return proto.CompactTextString(m) }
func (*S2C_Mouse_Over) ProtoMessage()    {}
func (*S2C_Mouse_Over) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1680e55bbb2433d, []int{193}
}
func (m *S2C_Mouse_Over) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *S2C_Mouse_Over) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_S2C_Mouse_Over.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *S2C_Mouse_Over) XXX_Merge(src proto.Message) {
	xxx_messageInfo_S2C_Mouse_Over.Merge(m, src)
}
func (m *S2C_Mouse_Over) XXX_Size() int {
	return m.Size()
}
func (m *S2C_Mouse_Over) XXX_DiscardUnknown() {
	xxx_messageInfo_S2C_Mouse_Over.DiscardUnknown(m)
}

var xxx_messageInfo_S2C_Mouse_Over proto.InternalMessageInfo

//-----------------------------------钓鱼 begin----------------------------------
type Fish struct {
	FishId               int32    `protobuf:"varint,1,opt,name=fishId,proto3" json:"fishId,omitempty"`
	TemplateId           int32    `protobuf:"varint,2,opt,name=templateId,proto3" json:"templateId,omitempty"`
	LifeTime             int32    `protobuf:"varint,3,opt,name=lifeTime,proto3" json:"lifeTime,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Fish) Reset()         { *m = Fish{} }
func (m *Fish) String() string { return proto.CompactTextString(m) }
func (*Fish) ProtoMessage()    {}
func (*Fish) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1680e55bbb2433d, []int{194}
}
func (m *Fish) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Fish) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Fish.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Fish) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Fish.Merge(m, src)
}
func (m *Fish) XXX_Size() int {
	return m.Size()
}
func (m *Fish) XXX_DiscardUnknown() {
	xxx_messageInfo_Fish.DiscardUnknown(m)
}

var xxx_messageInfo_Fish proto.InternalMessageInfo

func (m *Fish) GetFishId() int32 {
	if m != nil {
		return m.FishId
	}
	return 0
}

func (m *Fish) GetTemplateId() int32 {
	if m != nil {
		return m.TemplateId
	}
	return 0
}

func (m *Fish) GetLifeTime() int32 {
	if m != nil {
		return m.LifeTime
	}
	return 0
}

// 客户端请求坐下(初始化自己鱼塘，需扣除精力)
type C2S_Fish_SitDown struct {
	FishPondId           int32    `protobuf:"varint,1,opt,name=fishPondId,proto3" json:"fishPondId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *C2S_Fish_SitDown) Reset()         { *m = C2S_Fish_SitDown{} }
func (m *C2S_Fish_SitDown) String() string { return proto.CompactTextString(m) }
func (*C2S_Fish_SitDown) ProtoMessage()    {}
func (*C2S_Fish_SitDown) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1680e55bbb2433d, []int{195}
}
func (m *C2S_Fish_SitDown) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *C2S_Fish_SitDown) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_C2S_Fish_SitDown.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *C2S_Fish_SitDown) XXX_Merge(src proto.Message) {
	xxx_messageInfo_C2S_Fish_SitDown.Merge(m, src)
}
func (m *C2S_Fish_SitDown) XXX_Size() int {
	return m.Size()
}
func (m *C2S_Fish_SitDown) XXX_DiscardUnknown() {
	xxx_messageInfo_C2S_Fish_SitDown.DiscardUnknown(m)
}

var xxx_messageInfo_C2S_Fish_SitDown proto.InternalMessageInfo

func (m *C2S_Fish_SitDown) GetFishPondId() int32 {
	if m != nil {
		return m.FishPondId
	}
	return 0
}

// 服务端返回坐下(初始化鱼塘)结果
type S2C_Fish_SitDown struct {
	Result               *OperationResult `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *S2C_Fish_SitDown) Reset()         { *m = S2C_Fish_SitDown{} }
func (m *S2C_Fish_SitDown) String() string { return proto.CompactTextString(m) }
func (*S2C_Fish_SitDown) ProtoMessage()    {}
func (*S2C_Fish_SitDown) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1680e55bbb2433d, []int{196}
}
func (m *S2C_Fish_SitDown) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *S2C_Fish_SitDown) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_S2C_Fish_SitDown.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *S2C_Fish_SitDown) XXX_Merge(src proto.Message) {
	xxx_messageInfo_S2C_Fish_SitDown.Merge(m, src)
}
func (m *S2C_Fish_SitDown) XXX_Size() int {
	return m.Size()
}
func (m *S2C_Fish_SitDown) XXX_DiscardUnknown() {
	xxx_messageInfo_S2C_Fish_SitDown.DiscardUnknown(m)
}

var xxx_messageInfo_S2C_Fish_SitDown proto.InternalMessageInfo

func (m *S2C_Fish_SitDown) GetResult() *OperationResult {
	if m != nil {
		return m.Result
	}
	return nil
}

// 客户端请求离开鱼塘
type C2S_Fish_StandUp struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *C2S_Fish_StandUp) Reset()         { *m = C2S_Fish_StandUp{} }
func (m *C2S_Fish_StandUp) String() string { return proto.CompactTextString(m) }
func (*C2S_Fish_StandUp) ProtoMessage()    {}
func (*C2S_Fish_StandUp) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1680e55bbb2433d, []int{197}
}
func (m *C2S_Fish_StandUp) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *C2S_Fish_StandUp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_C2S_Fish_StandUp.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *C2S_Fish_StandUp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_C2S_Fish_StandUp.Merge(m, src)
}
func (m *C2S_Fish_StandUp) XXX_Size() int {
	return m.Size()
}
func (m *C2S_Fish_StandUp) XXX_DiscardUnknown() {
	xxx_messageInfo_C2S_Fish_StandUp.DiscardUnknown(m)
}

var xxx_messageInfo_C2S_Fish_StandUp proto.InternalMessageInfo

// 客户端请求鱼塘所有鱼
type C2S_Fish_GetAllFish struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *C2S_Fish_GetAllFish) Reset()         { *m = C2S_Fish_GetAllFish{} }
func (m *C2S_Fish_GetAllFish) String() string { return proto.CompactTextString(m) }
func (*C2S_Fish_GetAllFish) ProtoMessage()    {}
func (*C2S_Fish_GetAllFish) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1680e55bbb2433d, []int{198}
}
func (m *C2S_Fish_GetAllFish) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *C2S_Fish_GetAllFish) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_C2S_Fish_GetAllFish.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *C2S_Fish_GetAllFish) XXX_Merge(src proto.Message) {
	xxx_messageInfo_C2S_Fish_GetAllFish.Merge(m, src)
}
func (m *C2S_Fish_GetAllFish) XXX_Size() int {
	return m.Size()
}
func (m *C2S_Fish_GetAllFish) XXX_DiscardUnknown() {
	xxx_messageInfo_C2S_Fish_GetAllFish.DiscardUnknown(m)
}

var xxx_messageInfo_C2S_Fish_GetAllFish proto.InternalMessageInfo

// 服务端返回鱼塘所以鱼
type S2C_Fish_GetAllFish struct {
	FishList             []*Fish  `protobuf:"bytes,1,rep,name=fishList,proto3" json:"fishList,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *S2C_Fish_GetAllFish) Reset()         { *m = S2C_Fish_GetAllFish{} }
func (m *S2C_Fish_GetAllFish) String() string { return proto.CompactTextString(m) }
func (*S2C_Fish_GetAllFish) ProtoMessage()    {}
func (*S2C_Fish_GetAllFish) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1680e55bbb2433d, []int{199}
}
func (m *S2C_Fish_GetAllFish) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *S2C_Fish_GetAllFish) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_S2C_Fish_GetAllFish.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *S2C_Fish_GetAllFish) XXX_Merge(src proto.Message) {
	xxx_messageInfo_S2C_Fish_GetAllFish.Merge(m, src)
}
func (m *S2C_Fish_GetAllFish) XXX_Size() int {
	return m.Size()
}
func (m *S2C_Fish_GetAllFish) XXX_DiscardUnknown() {
	xxx_messageInfo_S2C_Fish_GetAllFish.DiscardUnknown(m)
}

var xxx_messageInfo_S2C_Fish_GetAllFish proto.InternalMessageInfo

func (m *S2C_Fish_GetAllFish) GetFishList() []*Fish {
	if m != nil {
		return m.FishList
	}
	return nil
}

// 客户端请求拉钩
type C2S_Fish_PullHook struct {
	FishId               int64    `protobuf:"varint,1,opt,name=fishId,proto3" json:"fishId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *C2S_Fish_PullHook) Reset()         { *m = C2S_Fish_PullHook{} }
func (m *C2S_Fish_PullHook) String() string { return proto.CompactTextString(m) }
func (*C2S_Fish_PullHook) ProtoMessage()    {}
func (*C2S_Fish_PullHook) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1680e55bbb2433d, []int{200}
}
func (m *C2S_Fish_PullHook) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *C2S_Fish_PullHook) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_C2S_Fish_PullHook.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *C2S_Fish_PullHook) XXX_Merge(src proto.Message) {
	xxx_messageInfo_C2S_Fish_PullHook.Merge(m, src)
}
func (m *C2S_Fish_PullHook) XXX_Size() int {
	return m.Size()
}
func (m *C2S_Fish_PullHook) XXX_DiscardUnknown() {
	xxx_messageInfo_C2S_Fish_PullHook.DiscardUnknown(m)
}

var xxx_messageInfo_C2S_Fish_PullHook proto.InternalMessageInfo

func (m *C2S_Fish_PullHook) GetFishId() int64 {
	if m != nil {
		return m.FishId
	}
	return 0
}

// 服务端返回拉钩结果
type S2C_Fish_PullHook struct {
	FishId               int64            `protobuf:"varint,1,opt,name=fishId,proto3" json:"fishId,omitempty"`
	Result               *OperationResult `protobuf:"bytes,2,opt,name=result,proto3" json:"result,omitempty"`
	ItemId               int32            `protobuf:"varint,3,opt,name=itemId,proto3" json:"itemId,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *S2C_Fish_PullHook) Reset()         { *m = S2C_Fish_PullHook{} }
func (m *S2C_Fish_PullHook) String() string { return proto.CompactTextString(m) }
func (*S2C_Fish_PullHook) ProtoMessage()    {}
func (*S2C_Fish_PullHook) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1680e55bbb2433d, []int{201}
}
func (m *S2C_Fish_PullHook) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *S2C_Fish_PullHook) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_S2C_Fish_PullHook.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *S2C_Fish_PullHook) XXX_Merge(src proto.Message) {
	xxx_messageInfo_S2C_Fish_PullHook.Merge(m, src)
}
func (m *S2C_Fish_PullHook) XXX_Size() int {
	return m.Size()
}
func (m *S2C_Fish_PullHook) XXX_DiscardUnknown() {
	xxx_messageInfo_S2C_Fish_PullHook.DiscardUnknown(m)
}

var xxx_messageInfo_S2C_Fish_PullHook proto.InternalMessageInfo

func (m *S2C_Fish_PullHook) GetFishId() int64 {
	if m != nil {
		return m.FishId
	}
	return 0
}

func (m *S2C_Fish_PullHook) GetResult() *OperationResult {
	if m != nil {
		return m.Result
	}
	return nil
}

func (m *S2C_Fish_PullHook) GetItemId() int32 {
	if m != nil {
		return m.ItemId
	}
	return 0
}

// 鱼塘生成新鱼摆摆
type S2C_Fish_NewFish struct {
	NewFish              *Fish    `protobuf:"bytes,1,opt,name=newFish,proto3" json:"newFish,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *S2C_Fish_NewFish) Reset()         { *m = S2C_Fish_NewFish{} }
func (m *S2C_Fish_NewFish) String() string { return proto.CompactTextString(m) }
func (*S2C_Fish_NewFish) ProtoMessage()    {}
func (*S2C_Fish_NewFish) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1680e55bbb2433d, []int{202}
}
func (m *S2C_Fish_NewFish) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *S2C_Fish_NewFish) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_S2C_Fish_NewFish.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *S2C_Fish_NewFish) XXX_Merge(src proto.Message) {
	xxx_messageInfo_S2C_Fish_NewFish.Merge(m, src)
}
func (m *S2C_Fish_NewFish) XXX_Size() int {
	return m.Size()
}
func (m *S2C_Fish_NewFish) XXX_DiscardUnknown() {
	xxx_messageInfo_S2C_Fish_NewFish.DiscardUnknown(m)
}

var xxx_messageInfo_S2C_Fish_NewFish proto.InternalMessageInfo

func (m *S2C_Fish_NewFish) GetNewFish() *Fish {
	if m != nil {
		return m.NewFish
	}
	return nil
}

//------------------------------------庄园 begin-----------------------------------
type ManorBuilding struct {
	Uid                  int32    `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	BuildId              int32    `protobuf:"varint,2,opt,name=buildId,proto3" json:"buildId,omitempty"`
	PosX                 int32    `protobuf:"varint,3,opt,name=posX,proto3" json:"posX,omitempty"`
	PosY                 int32    `protobuf:"varint,4,opt,name=posY,proto3" json:"posY,omitempty"`
	Orientation          int32    `protobuf:"varint,5,opt,name=orientation,proto3" json:"orientation,omitempty"`
	HasFinishBuild       bool     `protobuf:"varint,6,opt,name=hasFinishBuild,proto3" json:"hasFinishBuild,omitempty"`
	BuildEndTime         int64    `protobuf:"varint,7,opt,name=buildEndTime,proto3" json:"buildEndTime,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ManorBuilding) Reset()         { *m = ManorBuilding{} }
func (m *ManorBuilding) String() string { return proto.CompactTextString(m) }
func (*ManorBuilding) ProtoMessage()    {}
func (*ManorBuilding) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1680e55bbb2433d, []int{203}
}
func (m *ManorBuilding) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ManorBuilding) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ManorBuilding.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ManorBuilding) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ManorBuilding.Merge(m, src)
}
func (m *ManorBuilding) XXX_Size() int {
	return m.Size()
}
func (m *ManorBuilding) XXX_DiscardUnknown() {
	xxx_messageInfo_ManorBuilding.DiscardUnknown(m)
}

var xxx_messageInfo_ManorBuilding proto.InternalMessageInfo

func (m *ManorBuilding) GetUid() int32 {
	if m != nil {
		return m.Uid
	}
	return 0
}

func (m *ManorBuilding) GetBuildId() int32 {
	if m != nil {
		return m.BuildId
	}
	return 0
}

func (m *ManorBuilding) GetPosX() int32 {
	if m != nil {
		return m.PosX
	}
	return 0
}

func (m *ManorBuilding) GetPosY() int32 {
	if m != nil {
		return m.PosY
	}
	return 0
}

func (m *ManorBuilding) GetOrientation() int32 {
	if m != nil {
		return m.Orientation
	}
	return 0
}

func (m *ManorBuilding) GetHasFinishBuild() bool {
	if m != nil {
		return m.HasFinishBuild
	}
	return false
}

func (m *ManorBuilding) GetBuildEndTime() int64 {
	if m != nil {
		return m.BuildEndTime
	}
	return 0
}

type ManorStock struct {
	BuildId              int32    `protobuf:"varint,1,opt,name=buildId,proto3" json:"buildId,omitempty"`
	No                   int32    `protobuf:"varint,2,opt,name=no,proto3" json:"no,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ManorStock) Reset()         { *m = ManorStock{} }
func (m *ManorStock) String() string { return proto.CompactTextString(m) }
func (*ManorStock) ProtoMessage()    {}
func (*ManorStock) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1680e55bbb2433d, []int{204}
}
func (m *ManorStock) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ManorStock) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ManorStock.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ManorStock) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ManorStock.Merge(m, src)
}
func (m *ManorStock) XXX_Size() int {
	return m.Size()
}
func (m *ManorStock) XXX_DiscardUnknown() {
	xxx_messageInfo_ManorStock.DiscardUnknown(m)
}

var xxx_messageInfo_ManorStock proto.InternalMessageInfo

func (m *ManorStock) GetBuildId() int32 {
	if m != nil {
		return m.BuildId
	}
	return 0
}

func (m *ManorStock) GetNo() int32 {
	if m != nil {
		return m.No
	}
	return 0
}

type S2C_Manor_AllInfo struct {
	BuildingList         []*ManorBuilding `protobuf:"bytes,1,rep,name=buildingList,proto3" json:"buildingList,omitempty"`
	FreshList            []*ManorStock    `protobuf:"bytes,2,rep,name=freshList,proto3" json:"freshList,omitempty"`
	JunkList             []*ManorStock    `protobuf:"bytes,3,rep,name=junkList,proto3" json:"junkList,omitempty"`
	OwnerId              int32            `protobuf:"varint,4,opt,name=ownerId,proto3" json:"ownerId,omitempty"`
	ManorName            string           `protobuf:"bytes,5,opt,name=manorName,proto3" json:"manorName,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *S2C_Manor_AllInfo) Reset()         { *m = S2C_Manor_AllInfo{} }
func (m *S2C_Manor_AllInfo) String() string { return proto.CompactTextString(m) }
func (*S2C_Manor_AllInfo) ProtoMessage()    {}
func (*S2C_Manor_AllInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1680e55bbb2433d, []int{205}
}
func (m *S2C_Manor_AllInfo) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *S2C_Manor_AllInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_S2C_Manor_AllInfo.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *S2C_Manor_AllInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_S2C_Manor_AllInfo.Merge(m, src)
}
func (m *S2C_Manor_AllInfo) XXX_Size() int {
	return m.Size()
}
func (m *S2C_Manor_AllInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_S2C_Manor_AllInfo.DiscardUnknown(m)
}

var xxx_messageInfo_S2C_Manor_AllInfo proto.InternalMessageInfo

func (m *S2C_Manor_AllInfo) GetBuildingList() []*ManorBuilding {
	if m != nil {
		return m.BuildingList
	}
	return nil
}

func (m *S2C_Manor_AllInfo) GetFreshList() []*ManorStock {
	if m != nil {
		return m.FreshList
	}
	return nil
}

func (m *S2C_Manor_AllInfo) GetJunkList() []*ManorStock {
	if m != nil {
		return m.JunkList
	}
	return nil
}

func (m *S2C_Manor_AllInfo) GetOwnerId() int32 {
	if m != nil {
		return m.OwnerId
	}
	return 0
}

func (m *S2C_Manor_AllInfo) GetManorName() string {
	if m != nil {
		return m.ManorName
	}
	return ""
}

type C2S_Manor_SaveAllPos struct {
	BuildingList         []*ManorBuilding `protobuf:"bytes,1,rep,name=buildingList,proto3" json:"buildingList,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *C2S_Manor_SaveAllPos) Reset()         { *m = C2S_Manor_SaveAllPos{} }
func (m *C2S_Manor_SaveAllPos) String() string { return proto.CompactTextString(m) }
func (*C2S_Manor_SaveAllPos) ProtoMessage()    {}
func (*C2S_Manor_SaveAllPos) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1680e55bbb2433d, []int{206}
}
func (m *C2S_Manor_SaveAllPos) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *C2S_Manor_SaveAllPos) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_C2S_Manor_SaveAllPos.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *C2S_Manor_SaveAllPos) XXX_Merge(src proto.Message) {
	xxx_messageInfo_C2S_Manor_SaveAllPos.Merge(m, src)
}
func (m *C2S_Manor_SaveAllPos) XXX_Size() int {
	return m.Size()
}
func (m *C2S_Manor_SaveAllPos) XXX_DiscardUnknown() {
	xxx_messageInfo_C2S_Manor_SaveAllPos.DiscardUnknown(m)
}

var xxx_messageInfo_C2S_Manor_SaveAllPos proto.InternalMessageInfo

func (m *C2S_Manor_SaveAllPos) GetBuildingList() []*ManorBuilding {
	if m != nil {
		return m.BuildingList
	}
	return nil
}

type C2S_Manor_ChangeOne struct {
	Uid                  int32    `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	BuildId              int32    `protobuf:"varint,2,opt,name=buildId,proto3" json:"buildId,omitempty"`
	Action               int32    `protobuf:"varint,3,opt,name=action,proto3" json:"action,omitempty"`
	PosX                 int32    `protobuf:"varint,4,opt,name=posX,proto3" json:"posX,omitempty"`
	PosY                 int32    `protobuf:"varint,5,opt,name=posY,proto3" json:"posY,omitempty"`
	Orientation          int32    `protobuf:"varint,6,opt,name=orientation,proto3" json:"orientation,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *C2S_Manor_ChangeOne) Reset()         { *m = C2S_Manor_ChangeOne{} }
func (m *C2S_Manor_ChangeOne) String() string { return proto.CompactTextString(m) }
func (*C2S_Manor_ChangeOne) ProtoMessage()    {}
func (*C2S_Manor_ChangeOne) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1680e55bbb2433d, []int{207}
}
func (m *C2S_Manor_ChangeOne) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *C2S_Manor_ChangeOne) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_C2S_Manor_ChangeOne.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *C2S_Manor_ChangeOne) XXX_Merge(src proto.Message) {
	xxx_messageInfo_C2S_Manor_ChangeOne.Merge(m, src)
}
func (m *C2S_Manor_ChangeOne) XXX_Size() int {
	return m.Size()
}
func (m *C2S_Manor_ChangeOne) XXX_DiscardUnknown() {
	xxx_messageInfo_C2S_Manor_ChangeOne.DiscardUnknown(m)
}

var xxx_messageInfo_C2S_Manor_ChangeOne proto.InternalMessageInfo

func (m *C2S_Manor_ChangeOne) GetUid() int32 {
	if m != nil {
		return m.Uid
	}
	return 0
}

func (m *C2S_Manor_ChangeOne) GetBuildId() int32 {
	if m != nil {
		return m.BuildId
	}
	return 0
}

func (m *C2S_Manor_ChangeOne) GetAction() int32 {
	if m != nil {
		return m.Action
	}
	return 0
}

func (m *C2S_Manor_ChangeOne) GetPosX() int32 {
	if m != nil {
		return m.PosX
	}
	return 0
}

func (m *C2S_Manor_ChangeOne) GetPosY() int32 {
	if m != nil {
		return m.PosY
	}
	return 0
}

func (m *C2S_Manor_ChangeOne) GetOrientation() int32 {
	if m != nil {
		return m.Orientation
	}
	return 0
}

type S2C_Manor_ChangeOne struct {
	Res                  *OperationResult `protobuf:"bytes,1,opt,name=res,proto3" json:"res,omitempty"`
	BuildResult          *ManorBuilding   `protobuf:"bytes,2,opt,name=buildResult,proto3" json:"buildResult,omitempty"`
	Action               int32            `protobuf:"varint,3,opt,name=action,proto3" json:"action,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *S2C_Manor_ChangeOne) Reset()         { *m = S2C_Manor_ChangeOne{} }
func (m *S2C_Manor_ChangeOne) String() string { return proto.CompactTextString(m) }
func (*S2C_Manor_ChangeOne) ProtoMessage()    {}
func (*S2C_Manor_ChangeOne) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1680e55bbb2433d, []int{208}
}
func (m *S2C_Manor_ChangeOne) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *S2C_Manor_ChangeOne) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_S2C_Manor_ChangeOne.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *S2C_Manor_ChangeOne) XXX_Merge(src proto.Message) {
	xxx_messageInfo_S2C_Manor_ChangeOne.Merge(m, src)
}
func (m *S2C_Manor_ChangeOne) XXX_Size() int {
	return m.Size()
}
func (m *S2C_Manor_ChangeOne) XXX_DiscardUnknown() {
	xxx_messageInfo_S2C_Manor_ChangeOne.DiscardUnknown(m)
}

var xxx_messageInfo_S2C_Manor_ChangeOne proto.InternalMessageInfo

func (m *S2C_Manor_ChangeOne) GetRes() *OperationResult {
	if m != nil {
		return m.Res
	}
	return nil
}

func (m *S2C_Manor_ChangeOne) GetBuildResult() *ManorBuilding {
	if m != nil {
		return m.BuildResult
	}
	return nil
}

func (m *S2C_Manor_ChangeOne) GetAction() int32 {
	if m != nil {
		return m.Action
	}
	return 0
}

type S2C_Manor_BuyBuilding struct {
	Res                  *OperationResult `protobuf:"bytes,1,opt,name=res,proto3" json:"res,omitempty"`
	BuildId              int32            `protobuf:"varint,2,opt,name=buildId,proto3" json:"buildId,omitempty"`
	BuildUid             int32            `protobuf:"varint,3,opt,name=buildUid,proto3" json:"buildUid,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *S2C_Manor_BuyBuilding) Reset()         { *m = S2C_Manor_BuyBuilding{} }
func (m *S2C_Manor_BuyBuilding) String() string { return proto.CompactTextString(m) }
func (*S2C_Manor_BuyBuilding) ProtoMessage()    {}
func (*S2C_Manor_BuyBuilding) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1680e55bbb2433d, []int{209}
}
func (m *S2C_Manor_BuyBuilding) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *S2C_Manor_BuyBuilding) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_S2C_Manor_BuyBuilding.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *S2C_Manor_BuyBuilding) XXX_Merge(src proto.Message) {
	xxx_messageInfo_S2C_Manor_BuyBuilding.Merge(m, src)
}
func (m *S2C_Manor_BuyBuilding) XXX_Size() int {
	return m.Size()
}
func (m *S2C_Manor_BuyBuilding) XXX_DiscardUnknown() {
	xxx_messageInfo_S2C_Manor_BuyBuilding.DiscardUnknown(m)
}

var xxx_messageInfo_S2C_Manor_BuyBuilding proto.InternalMessageInfo

func (m *S2C_Manor_BuyBuilding) GetRes() *OperationResult {
	if m != nil {
		return m.Res
	}
	return nil
}

func (m *S2C_Manor_BuyBuilding) GetBuildId() int32 {
	if m != nil {
		return m.BuildId
	}
	return 0
}

func (m *S2C_Manor_BuyBuilding) GetBuildUid() int32 {
	if m != nil {
		return m.BuildUid
	}
	return 0
}

//----------------------------------自由操作 begin-------------------------------
type XAnything struct {
	Id                   int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Count                int32    `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *XAnything) Reset()         { *m = XAnything{} }
func (m *XAnything) String() string { return proto.CompactTextString(m) }
func (*XAnything) ProtoMessage()    {}
func (*XAnything) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1680e55bbb2433d, []int{210}
}
func (m *XAnything) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *XAnything) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_XAnything.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *XAnything) XXX_Merge(src proto.Message) {
	xxx_messageInfo_XAnything.Merge(m, src)
}
func (m *XAnything) XXX_Size() int {
	return m.Size()
}
func (m *XAnything) XXX_DiscardUnknown() {
	xxx_messageInfo_XAnything.DiscardUnknown(m)
}

var xxx_messageInfo_XAnything proto.InternalMessageInfo

func (m *XAnything) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *XAnything) GetCount() int32 {
	if m != nil {
		return m.Count
	}
	return 0
}

// 添加游戏内任何东西(物品/货币/属性等)
type C2S_Anything_Add struct {
	Data                 []*XAnything `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *C2S_Anything_Add) Reset()         { *m = C2S_Anything_Add{} }
func (m *C2S_Anything_Add) String() string { return proto.CompactTextString(m) }
func (*C2S_Anything_Add) ProtoMessage()    {}
func (*C2S_Anything_Add) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1680e55bbb2433d, []int{211}
}
func (m *C2S_Anything_Add) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *C2S_Anything_Add) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_C2S_Anything_Add.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *C2S_Anything_Add) XXX_Merge(src proto.Message) {
	xxx_messageInfo_C2S_Anything_Add.Merge(m, src)
}
func (m *C2S_Anything_Add) XXX_Size() int {
	return m.Size()
}
func (m *C2S_Anything_Add) XXX_DiscardUnknown() {
	xxx_messageInfo_C2S_Anything_Add.DiscardUnknown(m)
}

var xxx_messageInfo_C2S_Anything_Add proto.InternalMessageInfo

func (m *C2S_Anything_Add) GetData() []*XAnything {
	if m != nil {
		return m.Data
	}
	return nil
}

// 回复添加结果
type S2C_Anything_Add struct {
	Ret                  *OperationResult `protobuf:"bytes,1,opt,name=ret,proto3" json:"ret,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *S2C_Anything_Add) Reset()         { *m = S2C_Anything_Add{} }
func (m *S2C_Anything_Add) String() string { return proto.CompactTextString(m) }
func (*S2C_Anything_Add) ProtoMessage()    {}
func (*S2C_Anything_Add) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1680e55bbb2433d, []int{212}
}
func (m *S2C_Anything_Add) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *S2C_Anything_Add) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_S2C_Anything_Add.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *S2C_Anything_Add) XXX_Merge(src proto.Message) {
	xxx_messageInfo_S2C_Anything_Add.Merge(m, src)
}
func (m *S2C_Anything_Add) XXX_Size() int {
	return m.Size()
}
func (m *S2C_Anything_Add) XXX_DiscardUnknown() {
	xxx_messageInfo_S2C_Anything_Add.DiscardUnknown(m)
}

var xxx_messageInfo_S2C_Anything_Add proto.InternalMessageInfo

func (m *S2C_Anything_Add) GetRet() *OperationResult {
	if m != nil {
		return m.Ret
	}
	return nil
}

// 扣除游戏内任何东西(物品/货币/属性等)
type C2S_Anything_Sub struct {
	Data                 []*XAnything `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *C2S_Anything_Sub) Reset()         { *m = C2S_Anything_Sub{} }
func (m *C2S_Anything_Sub) String() string { return proto.CompactTextString(m) }
func (*C2S_Anything_Sub) ProtoMessage()    {}
func (*C2S_Anything_Sub) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1680e55bbb2433d, []int{213}
}
func (m *C2S_Anything_Sub) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *C2S_Anything_Sub) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_C2S_Anything_Sub.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *C2S_Anything_Sub) XXX_Merge(src proto.Message) {
	xxx_messageInfo_C2S_Anything_Sub.Merge(m, src)
}
func (m *C2S_Anything_Sub) XXX_Size() int {
	return m.Size()
}
func (m *C2S_Anything_Sub) XXX_DiscardUnknown() {
	xxx_messageInfo_C2S_Anything_Sub.DiscardUnknown(m)
}

var xxx_messageInfo_C2S_Anything_Sub proto.InternalMessageInfo

func (m *C2S_Anything_Sub) GetData() []*XAnything {
	if m != nil {
		return m.Data
	}
	return nil
}

// 回复扣除结果
type S2C_Anything_Sub struct {
	Ret                  *OperationResult `protobuf:"bytes,1,opt,name=ret,proto3" json:"ret,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *S2C_Anything_Sub) Reset()         { *m = S2C_Anything_Sub{} }
func (m *S2C_Anything_Sub) String() string { return proto.CompactTextString(m) }
func (*S2C_Anything_Sub) ProtoMessage()    {}
func (*S2C_Anything_Sub) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1680e55bbb2433d, []int{214}
}
func (m *S2C_Anything_Sub) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *S2C_Anything_Sub) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_S2C_Anything_Sub.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *S2C_Anything_Sub) XXX_Merge(src proto.Message) {
	xxx_messageInfo_S2C_Anything_Sub.Merge(m, src)
}
func (m *S2C_Anything_Sub) XXX_Size() int {
	return m.Size()
}
func (m *S2C_Anything_Sub) XXX_DiscardUnknown() {
	xxx_messageInfo_S2C_Anything_Sub.DiscardUnknown(m)
}

var xxx_messageInfo_S2C_Anything_Sub proto.InternalMessageInfo

func (m *S2C_Anything_Sub) GetRet() *OperationResult {
	if m != nil {
		return m.Ret
	}
	return nil
}

//---------------------------------自定义变量 begin------------------------------
// 自定义bool变量
type XCustomizeVarBool struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Value                bool     `protobuf:"varint,2,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *XCustomizeVarBool) Reset()         { *m = XCustomizeVarBool{} }
func (m *XCustomizeVarBool) String() string { return proto.CompactTextString(m) }
func (*XCustomizeVarBool) ProtoMessage()    {}
func (*XCustomizeVarBool) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1680e55bbb2433d, []int{215}
}
func (m *XCustomizeVarBool) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *XCustomizeVarBool) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_XCustomizeVarBool.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *XCustomizeVarBool) XXX_Merge(src proto.Message) {
	xxx_messageInfo_XCustomizeVarBool.Merge(m, src)
}
func (m *XCustomizeVarBool) XXX_Size() int {
	return m.Size()
}
func (m *XCustomizeVarBool) XXX_DiscardUnknown() {
	xxx_messageInfo_XCustomizeVarBool.DiscardUnknown(m)
}

var xxx_messageInfo_XCustomizeVarBool proto.InternalMessageInfo

func (m *XCustomizeVarBool) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *XCustomizeVarBool) GetValue() bool {
	if m != nil {
		return m.Value
	}
	return false
}

// 自定义int变量
type XCustomizeVarDouble struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Value                float64  `protobuf:"fixed64,2,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *XCustomizeVarDouble) Reset()         { *m = XCustomizeVarDouble{} }
func (m *XCustomizeVarDouble) String() string { return proto.CompactTextString(m) }
func (*XCustomizeVarDouble) ProtoMessage()    {}
func (*XCustomizeVarDouble) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1680e55bbb2433d, []int{216}
}
func (m *XCustomizeVarDouble) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *XCustomizeVarDouble) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_XCustomizeVarDouble.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *XCustomizeVarDouble) XXX_Merge(src proto.Message) {
	xxx_messageInfo_XCustomizeVarDouble.Merge(m, src)
}
func (m *XCustomizeVarDouble) XXX_Size() int {
	return m.Size()
}
func (m *XCustomizeVarDouble) XXX_DiscardUnknown() {
	xxx_messageInfo_XCustomizeVarDouble.DiscardUnknown(m)
}

var xxx_messageInfo_XCustomizeVarDouble proto.InternalMessageInfo

func (m *XCustomizeVarDouble) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *XCustomizeVarDouble) GetValue() float64 {
	if m != nil {
		return m.Value
	}
	return 0
}

// 自定义string变量
type XCustomizeVarString struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Value                string   `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *XCustomizeVarString) Reset()         { *m = XCustomizeVarString{} }
func (m *XCustomizeVarString) String() string { return proto.CompactTextString(m) }
func (*XCustomizeVarString) ProtoMessage()    {}
func (*XCustomizeVarString) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1680e55bbb2433d, []int{217}
}
func (m *XCustomizeVarString) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *XCustomizeVarString) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_XCustomizeVarString.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *XCustomizeVarString) XXX_Merge(src proto.Message) {
	xxx_messageInfo_XCustomizeVarString.Merge(m, src)
}
func (m *XCustomizeVarString) XXX_Size() int {
	return m.Size()
}
func (m *XCustomizeVarString) XXX_DiscardUnknown() {
	xxx_messageInfo_XCustomizeVarString.DiscardUnknown(m)
}

var xxx_messageInfo_XCustomizeVarString proto.InternalMessageInfo

func (m *XCustomizeVarString) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *XCustomizeVarString) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

// 获取所有自定义变量
type C2S_CustomizeVar_GetAll struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *C2S_CustomizeVar_GetAll) Reset()         { *m = C2S_CustomizeVar_GetAll{} }
func (m *C2S_CustomizeVar_GetAll) String() string { return proto.CompactTextString(m) }
func (*C2S_CustomizeVar_GetAll) ProtoMessage()    {}
func (*C2S_CustomizeVar_GetAll) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1680e55bbb2433d, []int{218}
}
func (m *C2S_CustomizeVar_GetAll) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *C2S_CustomizeVar_GetAll) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_C2S_CustomizeVar_GetAll.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *C2S_CustomizeVar_GetAll) XXX_Merge(src proto.Message) {
	xxx_messageInfo_C2S_CustomizeVar_GetAll.Merge(m, src)
}
func (m *C2S_CustomizeVar_GetAll) XXX_Size() int {
	return m.Size()
}
func (m *C2S_CustomizeVar_GetAll) XXX_DiscardUnknown() {
	xxx_messageInfo_C2S_CustomizeVar_GetAll.DiscardUnknown(m)
}

var xxx_messageInfo_C2S_CustomizeVar_GetAll proto.InternalMessageInfo

// 返回所有自定义变量值
type S2C_CustomizeVar_GetAll struct {
	DataBool             []*XCustomizeVarBool   `protobuf:"bytes,1,rep,name=dataBool,proto3" json:"dataBool,omitempty"`
	DataDouble           []*XCustomizeVarDouble `protobuf:"bytes,2,rep,name=dataDouble,proto3" json:"dataDouble,omitempty"`
	DataString           []*XCustomizeVarString `protobuf:"bytes,3,rep,name=dataString,proto3" json:"dataString,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *S2C_CustomizeVar_GetAll) Reset()         { *m = S2C_CustomizeVar_GetAll{} }
func (m *S2C_CustomizeVar_GetAll) String() string { return proto.CompactTextString(m) }
func (*S2C_CustomizeVar_GetAll) ProtoMessage()    {}
func (*S2C_CustomizeVar_GetAll) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1680e55bbb2433d, []int{219}
}
func (m *S2C_CustomizeVar_GetAll) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *S2C_CustomizeVar_GetAll) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_S2C_CustomizeVar_GetAll.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *S2C_CustomizeVar_GetAll) XXX_Merge(src proto.Message) {
	xxx_messageInfo_S2C_CustomizeVar_GetAll.Merge(m, src)
}
func (m *S2C_CustomizeVar_GetAll) XXX_Size() int {
	return m.Size()
}
func (m *S2C_CustomizeVar_GetAll) XXX_DiscardUnknown() {
	xxx_messageInfo_S2C_CustomizeVar_GetAll.DiscardUnknown(m)
}

var xxx_messageInfo_S2C_CustomizeVar_GetAll proto.InternalMessageInfo

func (m *S2C_CustomizeVar_GetAll) GetDataBool() []*XCustomizeVarBool {
	if m != nil {
		return m.DataBool
	}
	return nil
}

func (m *S2C_CustomizeVar_GetAll) GetDataDouble() []*XCustomizeVarDouble {
	if m != nil {
		return m.DataDouble
	}
	return nil
}

func (m *S2C_CustomizeVar_GetAll) GetDataString() []*XCustomizeVarString {
	if m != nil {
		return m.DataString
	}
	return nil
}

// 获取bool类型变量值
type C2S_CustomizeVar_GetBoolValue struct {
	UserId               int32    `protobuf:"varint,1,opt,name=userId,proto3" json:"userId,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	DefaultValue         bool     `protobuf:"varint,3,opt,name=defaultValue,proto3" json:"defaultValue,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *C2S_CustomizeVar_GetBoolValue) Reset()         { *m = C2S_CustomizeVar_GetBoolValue{} }
func (m *C2S_CustomizeVar_GetBoolValue) String() string { return proto.CompactTextString(m) }
func (*C2S_CustomizeVar_GetBoolValue) ProtoMessage()    {}
func (*C2S_CustomizeVar_GetBoolValue) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1680e55bbb2433d, []int{220}
}
func (m *C2S_CustomizeVar_GetBoolValue) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *C2S_CustomizeVar_GetBoolValue) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_C2S_CustomizeVar_GetBoolValue.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *C2S_CustomizeVar_GetBoolValue) XXX_Merge(src proto.Message) {
	xxx_messageInfo_C2S_CustomizeVar_GetBoolValue.Merge(m, src)
}
func (m *C2S_CustomizeVar_GetBoolValue) XXX_Size() int {
	return m.Size()
}
func (m *C2S_CustomizeVar_GetBoolValue) XXX_DiscardUnknown() {
	xxx_messageInfo_C2S_CustomizeVar_GetBoolValue.DiscardUnknown(m)
}

var xxx_messageInfo_C2S_CustomizeVar_GetBoolValue proto.InternalMessageInfo

func (m *C2S_CustomizeVar_GetBoolValue) GetUserId() int32 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *C2S_CustomizeVar_GetBoolValue) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *C2S_CustomizeVar_GetBoolValue) GetDefaultValue() bool {
	if m != nil {
		return m.DefaultValue
	}
	return false
}

// 返回bool类型变量值
type S2C_CustomizeVar_GetBoolValue struct {
	UserId               int32              `protobuf:"varint,1,opt,name=userId,proto3" json:"userId,omitempty"`
	Data                 *XCustomizeVarBool `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *S2C_CustomizeVar_GetBoolValue) Reset()         { *m = S2C_CustomizeVar_GetBoolValue{} }
func (m *S2C_CustomizeVar_GetBoolValue) String() string { return proto.CompactTextString(m) }
func (*S2C_CustomizeVar_GetBoolValue) ProtoMessage()    {}
func (*S2C_CustomizeVar_GetBoolValue) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1680e55bbb2433d, []int{221}
}
func (m *S2C_CustomizeVar_GetBoolValue) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *S2C_CustomizeVar_GetBoolValue) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_S2C_CustomizeVar_GetBoolValue.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *S2C_CustomizeVar_GetBoolValue) XXX_Merge(src proto.Message) {
	xxx_messageInfo_S2C_CustomizeVar_GetBoolValue.Merge(m, src)
}
func (m *S2C_CustomizeVar_GetBoolValue) XXX_Size() int {
	return m.Size()
}
func (m *S2C_CustomizeVar_GetBoolValue) XXX_DiscardUnknown() {
	xxx_messageInfo_S2C_CustomizeVar_GetBoolValue.DiscardUnknown(m)
}

var xxx_messageInfo_S2C_CustomizeVar_GetBoolValue proto.InternalMessageInfo

func (m *S2C_CustomizeVar_GetBoolValue) GetUserId() int32 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *S2C_CustomizeVar_GetBoolValue) GetData() *XCustomizeVarBool {
	if m != nil {
		return m.Data
	}
	return nil
}

// 获取double类型变量值
type C2S_CustomizeVar_GetDoubleValue struct {
	UserId               int32    `protobuf:"varint,1,opt,name=userId,proto3" json:"userId,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	DefaultValue         float64  `protobuf:"fixed64,3,opt,name=defaultValue,proto3" json:"defaultValue,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *C2S_CustomizeVar_GetDoubleValue) Reset()         { *m = C2S_CustomizeVar_GetDoubleValue{} }
func (m *C2S_CustomizeVar_GetDoubleValue) String() string { return proto.CompactTextString(m) }
func (*C2S_CustomizeVar_GetDoubleValue) ProtoMessage()    {}
func (*C2S_CustomizeVar_GetDoubleValue) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1680e55bbb2433d, []int{222}
}
func (m *C2S_CustomizeVar_GetDoubleValue) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *C2S_CustomizeVar_GetDoubleValue) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_C2S_CustomizeVar_GetDoubleValue.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *C2S_CustomizeVar_GetDoubleValue) XXX_Merge(src proto.Message) {
	xxx_messageInfo_C2S_CustomizeVar_GetDoubleValue.Merge(m, src)
}
func (m *C2S_CustomizeVar_GetDoubleValue) XXX_Size() int {
	return m.Size()
}
func (m *C2S_CustomizeVar_GetDoubleValue) XXX_DiscardUnknown() {
	xxx_messageInfo_C2S_CustomizeVar_GetDoubleValue.DiscardUnknown(m)
}

var xxx_messageInfo_C2S_CustomizeVar_GetDoubleValue proto.InternalMessageInfo

func (m *C2S_CustomizeVar_GetDoubleValue) GetUserId() int32 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *C2S_CustomizeVar_GetDoubleValue) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *C2S_CustomizeVar_GetDoubleValue) GetDefaultValue() float64 {
	if m != nil {
		return m.DefaultValue
	}
	return 0
}

// 返回double类型变量值
type S2C_CustomizeVar_GetDoubleValue struct {
	UserId               int32                `protobuf:"varint,1,opt,name=userId,proto3" json:"userId,omitempty"`
	Data                 *XCustomizeVarDouble `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *S2C_CustomizeVar_GetDoubleValue) Reset()         { *m = S2C_CustomizeVar_GetDoubleValue{} }
func (m *S2C_CustomizeVar_GetDoubleValue) String() string { return proto.CompactTextString(m) }
func (*S2C_CustomizeVar_GetDoubleValue) ProtoMessage()    {}
func (*S2C_CustomizeVar_GetDoubleValue) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1680e55bbb2433d, []int{223}
}
func (m *S2C_CustomizeVar_GetDoubleValue) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *S2C_CustomizeVar_GetDoubleValue) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_S2C_CustomizeVar_GetDoubleValue.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *S2C_CustomizeVar_GetDoubleValue) XXX_Merge(src proto.Message) {
	xxx_messageInfo_S2C_CustomizeVar_GetDoubleValue.Merge(m, src)
}
func (m *S2C_CustomizeVar_GetDoubleValue) XXX_Size() int {
	return m.Size()
}
func (m *S2C_CustomizeVar_GetDoubleValue) XXX_DiscardUnknown() {
	xxx_messageInfo_S2C_CustomizeVar_GetDoubleValue.DiscardUnknown(m)
}

var xxx_messageInfo_S2C_CustomizeVar_GetDoubleValue proto.InternalMessageInfo

func (m *S2C_CustomizeVar_GetDoubleValue) GetUserId() int32 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *S2C_CustomizeVar_GetDoubleValue) GetData() *XCustomizeVarDouble {
	if m != nil {
		return m.Data
	}
	return nil
}

// 获取string类型变量值
type C2S_CustomizeVar_GetStringValue struct {
	UserId               int32    `protobuf:"varint,1,opt,name=userId,proto3" json:"userId,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	DefaultValue         string   `protobuf:"bytes,3,opt,name=defaultValue,proto3" json:"defaultValue,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *C2S_CustomizeVar_GetStringValue) Reset()         { *m = C2S_CustomizeVar_GetStringValue{} }
func (m *C2S_CustomizeVar_GetStringValue) String() string { return proto.CompactTextString(m) }
func (*C2S_CustomizeVar_GetStringValue) ProtoMessage()    {}
func (*C2S_CustomizeVar_GetStringValue) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1680e55bbb2433d, []int{224}
}
func (m *C2S_CustomizeVar_GetStringValue) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *C2S_CustomizeVar_GetStringValue) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_C2S_CustomizeVar_GetStringValue.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *C2S_CustomizeVar_GetStringValue) XXX_Merge(src proto.Message) {
	xxx_messageInfo_C2S_CustomizeVar_GetStringValue.Merge(m, src)
}
func (m *C2S_CustomizeVar_GetStringValue) XXX_Size() int {
	return m.Size()
}
func (m *C2S_CustomizeVar_GetStringValue) XXX_DiscardUnknown() {
	xxx_messageInfo_C2S_CustomizeVar_GetStringValue.DiscardUnknown(m)
}

var xxx_messageInfo_C2S_CustomizeVar_GetStringValue proto.InternalMessageInfo

func (m *C2S_CustomizeVar_GetStringValue) GetUserId() int32 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *C2S_CustomizeVar_GetStringValue) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *C2S_CustomizeVar_GetStringValue) GetDefaultValue() string {
	if m != nil {
		return m.DefaultValue
	}
	return ""
}

// 返回string类型变量值
type S2C_CustomizeVar_GetStringValue struct {
	UserId               int32                `protobuf:"varint,1,opt,name=userId,proto3" json:"userId,omitempty"`
	Data                 *XCustomizeVarString `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *S2C_CustomizeVar_GetStringValue) Reset()         { *m = S2C_CustomizeVar_GetStringValue{} }
func (m *S2C_CustomizeVar_GetStringValue) String() string { return proto.CompactTextString(m) }
func (*S2C_CustomizeVar_GetStringValue) ProtoMessage()    {}
func (*S2C_CustomizeVar_GetStringValue) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1680e55bbb2433d, []int{225}
}
func (m *S2C_CustomizeVar_GetStringValue) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *S2C_CustomizeVar_GetStringValue) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_S2C_CustomizeVar_GetStringValue.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *S2C_CustomizeVar_GetStringValue) XXX_Merge(src proto.Message) {
	xxx_messageInfo_S2C_CustomizeVar_GetStringValue.Merge(m, src)
}
func (m *S2C_CustomizeVar_GetStringValue) XXX_Size() int {
	return m.Size()
}
func (m *S2C_CustomizeVar_GetStringValue) XXX_DiscardUnknown() {
	xxx_messageInfo_S2C_CustomizeVar_GetStringValue.DiscardUnknown(m)
}

var xxx_messageInfo_S2C_CustomizeVar_GetStringValue proto.InternalMessageInfo

func (m *S2C_CustomizeVar_GetStringValue) GetUserId() int32 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *S2C_CustomizeVar_GetStringValue) GetData() *XCustomizeVarString {
	if m != nil {
		return m.Data
	}
	return nil
}

// 设置bool类型变量值
type C2S_CustomizeVar_SetBoolValue struct {
	Data                 *XCustomizeVarBool `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *C2S_CustomizeVar_SetBoolValue) Reset()         { *m = C2S_CustomizeVar_SetBoolValue{} }
func (m *C2S_CustomizeVar_SetBoolValue) String() string { return proto.CompactTextString(m) }
func (*C2S_CustomizeVar_SetBoolValue) ProtoMessage()    {}
func (*C2S_CustomizeVar_SetBoolValue) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1680e55bbb2433d, []int{226}
}
func (m *C2S_CustomizeVar_SetBoolValue) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *C2S_CustomizeVar_SetBoolValue) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_C2S_CustomizeVar_SetBoolValue.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *C2S_CustomizeVar_SetBoolValue) XXX_Merge(src proto.Message) {
	xxx_messageInfo_C2S_CustomizeVar_SetBoolValue.Merge(m, src)
}
func (m *C2S_CustomizeVar_SetBoolValue) XXX_Size() int {
	return m.Size()
}
func (m *C2S_CustomizeVar_SetBoolValue) XXX_DiscardUnknown() {
	xxx_messageInfo_C2S_CustomizeVar_SetBoolValue.DiscardUnknown(m)
}

var xxx_messageInfo_C2S_CustomizeVar_SetBoolValue proto.InternalMessageInfo

func (m *C2S_CustomizeVar_SetBoolValue) GetData() *XCustomizeVarBool {
	if m != nil {
		return m.Data
	}
	return nil
}

// 设置int类型变量值
type C2S_CustomizeVar_SetDoubleValue struct {
	Data                 *XCustomizeVarDouble `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *C2S_CustomizeVar_SetDoubleValue) Reset()         { *m = C2S_CustomizeVar_SetDoubleValue{} }
func (m *C2S_CustomizeVar_SetDoubleValue) String() string { return proto.CompactTextString(m) }
func (*C2S_CustomizeVar_SetDoubleValue) ProtoMessage()    {}
func (*C2S_CustomizeVar_SetDoubleValue) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1680e55bbb2433d, []int{227}
}
func (m *C2S_CustomizeVar_SetDoubleValue) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *C2S_CustomizeVar_SetDoubleValue) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_C2S_CustomizeVar_SetDoubleValue.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *C2S_CustomizeVar_SetDoubleValue) XXX_Merge(src proto.Message) {
	xxx_messageInfo_C2S_CustomizeVar_SetDoubleValue.Merge(m, src)
}
func (m *C2S_CustomizeVar_SetDoubleValue) XXX_Size() int {
	return m.Size()
}
func (m *C2S_CustomizeVar_SetDoubleValue) XXX_DiscardUnknown() {
	xxx_messageInfo_C2S_CustomizeVar_SetDoubleValue.DiscardUnknown(m)
}

var xxx_messageInfo_C2S_CustomizeVar_SetDoubleValue proto.InternalMessageInfo

func (m *C2S_CustomizeVar_SetDoubleValue) GetData() *XCustomizeVarDouble {
	if m != nil {
		return m.Data
	}
	return nil
}

// 设置string类型变量值
type C2S_CustomizeVar_SetStringValue struct {
	Data                 *XCustomizeVarString `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *C2S_CustomizeVar_SetStringValue) Reset()         { *m = C2S_CustomizeVar_SetStringValue{} }
func (m *C2S_CustomizeVar_SetStringValue) String() string { return proto.CompactTextString(m) }
func (*C2S_CustomizeVar_SetStringValue) ProtoMessage()    {}
func (*C2S_CustomizeVar_SetStringValue) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1680e55bbb2433d, []int{228}
}
func (m *C2S_CustomizeVar_SetStringValue) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *C2S_CustomizeVar_SetStringValue) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_C2S_CustomizeVar_SetStringValue.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *C2S_CustomizeVar_SetStringValue) XXX_Merge(src proto.Message) {
	xxx_messageInfo_C2S_CustomizeVar_SetStringValue.Merge(m, src)
}
func (m *C2S_CustomizeVar_SetStringValue) XXX_Size() int {
	return m.Size()
}
func (m *C2S_CustomizeVar_SetStringValue) XXX_DiscardUnknown() {
	xxx_messageInfo_C2S_CustomizeVar_SetStringValue.DiscardUnknown(m)
}

var xxx_messageInfo_C2S_CustomizeVar_SetStringValue proto.InternalMessageInfo

func (m *C2S_CustomizeVar_SetStringValue) GetData() *XCustomizeVarString {
	if m != nil {
		return m.Data
	}
	return nil
}

func init() {
	proto.RegisterEnum("protocol.ESpeakChannel", ESpeakChannel_name, ESpeakChannel_value)
	proto.RegisterEnum("protocol.Enum_Occupation", Enum_Occupation_name, Enum_Occupation_value)
	proto.RegisterEnum("protocol.Enum_ErrorCode", Enum_ErrorCode_name, Enum_ErrorCode_value)
	proto.RegisterEnum("protocol.Enum_MissionStatus", Enum_MissionStatus_name, Enum_MissionStatus_value)
	proto.RegisterEnum("protocol.Enum_Mine_EnterCode", Enum_Mine_EnterCode_name, Enum_Mine_EnterCode_value)
	proto.RegisterEnum("protocol.Enum_Mine_DigCode", Enum_Mine_DigCode_name, Enum_Mine_DigCode_value)
	proto.RegisterEnum("protocol.Enum_Mine_RewardType", Enum_Mine_RewardType_name, Enum_Mine_RewardType_value)
	proto.RegisterEnum("protocol.Enum_Mine_GetRewardCode", Enum_Mine_GetRewardCode_name, Enum_Mine_GetRewardCode_value)
	proto.RegisterEnum("protocol.Enum_UserAttr", Enum_UserAttr_name, Enum_UserAttr_value)
	proto.RegisterEnum("protocol.Enum_Shop_Restriction", Enum_Shop_Restriction_name, Enum_Shop_Restriction_value)
	proto.RegisterEnum("protocol.Enum_Email_Operation", Enum_Email_Operation_name, Enum_Email_Operation_value)
	proto.RegisterType((*F2S_RegisterServer)(nil), "protocol.F2S_RegisterServer")
	proto.RegisterType((*XSimpleUser)(nil), "protocol._simpleUser")
	proto.RegisterType((*S2F_RegisterServer)(nil), "protocol.S2F_RegisterServer")
	proto.RegisterType((*S2F_UserLogin)(nil), "protocol.S2F_UserLogin")
	proto.RegisterType((*F2S_UserLogin)(nil), "protocol.F2S_UserLogin")
	proto.RegisterType((*S2F_UserLogout)(nil), "protocol.S2F_UserLogout")
	proto.RegisterType((*S2F_UserAttrChange)(nil), "protocol.S2F_UserAttrChange")
	proto.RegisterType((*S2F_AddFriend)(nil), "protocol.S2F_AddFriend")
	proto.RegisterType((*S2F_DelFriend)(nil), "protocol.S2F_DelFriend")
	proto.RegisterType((*F2S_TalkToOfflineFriend)(nil), "protocol.F2S_TalkToOfflineFriend")
	proto.RegisterType((*C2F_Login)(nil), "protocol.C2F_Login")
	proto.RegisterType((*F2C_Login)(nil), "protocol.F2C_Login")
	proto.RegisterType((*S2F_SyncMyFriendList)(nil), "protocol.S2F_SyncMyFriendList")
	proto.RegisterType((*S2F_AddBlock)(nil), "protocol.S2F_AddBlock")
	proto.RegisterType((*S2F_DelBlock)(nil), "protocol.S2F_DelBlock")
	proto.RegisterType((*S2F_ChannelSpeak)(nil), "protocol.S2F_ChannelSpeak")
	proto.RegisterType((*F2C_ChannelSpeak)(nil), "protocol.F2C_ChannelSpeak")
	proto.RegisterType((*C2F_ChannelSpeak)(nil), "protocol.C2F_ChannelSpeak")
	proto.RegisterType((*F2C_ChannelSpeakResult)(nil), "protocol.F2C_ChannelSpeakResult")
	proto.RegisterType((*A2S_SystemNotice)(nil), "protocol.A2S_SystemNotice")
	proto.RegisterType((*S2F_EnterScene)(nil), "protocol.S2F_EnterScene")
	proto.RegisterType((*XUser)(nil), "protocol._user")
	proto.RegisterType((*C2S_GuestLogin)(nil), "protocol.C2S_GuestLogin")
	proto.RegisterType((*C2S_GameLogout)(nil), "protocol.C2S_GameLogout")
	proto.RegisterType((*C2S_Register)(nil), "protocol.C2S_Register")
	proto.RegisterType((*S2C_Register)(nil), "protocol.S2C_Register")
	proto.RegisterType((*C2S_String)(nil), "protocol.C2S_String")
	proto.RegisterType((*C2SInt32)(nil), "protocol.C2S_int32")
	proto.RegisterType((*C2S_Empty)(nil), "protocol.C2S_Empty")
	proto.RegisterType((*FailNotice)(nil), "protocol.FailNotice")
	proto.RegisterType((*OperationResult)(nil), "protocol.OperationResult")
	proto.RegisterType((*XItem)(nil), "protocol._item")
	proto.RegisterType((*FurnitureItem)(nil), "protocol.furnitureItem")
	proto.RegisterType((*S2C_AllItemInfo)(nil), "protocol.S2C_AllItemInfo")
	proto.RegisterType((*C2S_UseItem)(nil), "protocol.C2S_UseItem")
	proto.RegisterType((*S2C_UpdateItem)(nil), "protocol.S2C_UpdateItem")
	proto.RegisterType((*S2C_BatchUpdateItem)(nil), "protocol.S2C_BatchUpdateItem")
	proto.RegisterType((*C2S_GetItemInfo)(nil), "protocol.C2S_GetItemInfo")
	proto.RegisterType((*S2C_GetItemInfo)(nil), "protocol.S2C_GetItemInfo")
	proto.RegisterType((*S2C_SlotLevels)(nil), "protocol.S2C_SlotLevels")
	proto.RegisterType((*S2C_BatchAddFurniture)(nil), "protocol.S2C_BatchAddFurniture")
	proto.RegisterType((*XPuzzleInfo)(nil), "protocol._puzzleInfo")
	proto.RegisterType((*C2S_Farm_GetFarmInfo)(nil), "protocol.C2S_Farm_GetFarmInfo")
	proto.RegisterType((*S2C_Farm_GetFarmInfo)(nil), "protocol.S2C_Farm_GetFarmInfo")
	proto.RegisterType((*C2S_Farm_Plant)(nil), "protocol.C2S_Farm_Plant")
	proto.RegisterType((*S2C_Farm_Plant)(nil), "protocol.S2C_Farm_Plant")
	proto.RegisterType((*C2S_Farm_Manure)(nil), "protocol.C2S_Farm_Manure")
	proto.RegisterType((*S2C_Farm_Manure)(nil), "protocol.S2C_Farm_Manure")
	proto.RegisterType((*S2C_Farm_PuzzleInfo)(nil), "protocol.S2C_Farm_PuzzleInfo")
	proto.RegisterType((*S2C_Farm_SyncStatus)(nil), "protocol.S2C_Farm_SyncStatus")
	proto.RegisterType((*C2S_Farm_UnlockPuzzle)(nil), "protocol.C2S_Farm_UnlockPuzzle")
	proto.RegisterType((*S2C_Farm_UnlockPuzzle)(nil), "protocol.S2C_Farm_UnlockPuzzle")
	proto.RegisterType((*C2S_Farm_Water)(nil), "protocol.C2S_Farm_Water")
	proto.RegisterType((*S2C_Farm_Water)(nil), "protocol.S2C_Farm_Water")
	proto.RegisterType((*C2S_Farm_Reap)(nil), "protocol.C2S_Farm_Reap")
	proto.RegisterType((*S2C_Farm_Reap)(nil), "protocol.S2C_Farm_Reap")
	proto.RegisterType((*XPlantPuzzleInfo)(nil), "protocol._plantPuzzleInfo")
	proto.RegisterType((*S2C_PlantFarm_GetFarmInfo)(nil), "protocol.S2C_PlantFarm_GetFarmInfo")
	proto.RegisterType((*C2S_PlantFarm_Plant)(nil), "protocol.C2S_PlantFarm_Plant")
	proto.RegisterType((*S2C_PlantFarm_Plant)(nil), "protocol.S2C_PlantFarm_Plant")
	proto.RegisterType((*C2S_PlantFarm_PuzzleAction)(nil), "protocol.C2S_PlantFarm_PuzzleAction")
	proto.RegisterType((*S2C_PlantFarm_PuzzleInfo)(nil), "protocol.S2C_PlantFarm_PuzzleInfo")
	proto.RegisterType((*S2C_PlantFarm_Water)(nil), "protocol.S2C_PlantFarm_Water")
	proto.RegisterType((*S2C_PlantFarm_Reap)(nil), "protocol.S2C_PlantFarm_Reap")
	proto.RegisterType((*XAnimalPuzzleInfo)(nil), "protocol._animalPuzzleInfo")
	proto.RegisterType((*S2C_AnimalFarm_GetFarmInfo)(nil), "protocol.S2C_AnimalFarm_GetFarmInfo")
	proto.RegisterType((*C2S_AnimalFarm_Plant)(nil), "protocol.C2S_AnimalFarm_Plant")
	proto.RegisterType((*S2C_AnimalFarm_Plant)(nil), "protocol.S2C_AnimalFarm_Plant")
	proto.RegisterType((*C2S_AnimalFarm_PuzzleAction)(nil), "protocol.C2S_AnimalFarm_PuzzleAction")
	proto.RegisterType((*S2C_AnimalFarm_PuzzleInfo)(nil), "protocol.S2C_AnimalFarm_PuzzleInfo")
	proto.RegisterType((*S2C_AnimalFarm_Inventory)(nil), "protocol.S2C_AnimalFarm_Inventory")
	proto.RegisterType((*S2C_AnimalFarm_Reap)(nil), "protocol.S2C_AnimalFarm_Reap")
	proto.RegisterType((*XMission)(nil), "protocol._mission")
	proto.RegisterType((*C2S_AllMissionInfo)(nil), "protocol.C2S_AllMissionInfo")
	proto.RegisterType((*S2C_AllMissionInfo)(nil), "protocol.S2C_AllMissionInfo")
	proto.RegisterType((*C2S_OneMissionInfo)(nil), "protocol.C2S_OneMissionInfo")
	proto.RegisterType((*S2C_OneMissionInfo)(nil), "protocol.S2C_OneMissionInfo")
	proto.RegisterType((*C2S_AcceptMission)(nil), "protocol.C2S_AcceptMission")
	proto.RegisterType((*S2C_AcceptMission)(nil), "protocol.S2C_AcceptMission")
	proto.RegisterType((*C2S_ReportMission)(nil), "protocol.C2S_ReportMission")
	proto.RegisterType((*S2C_ReportMission)(nil), "protocol.S2C_ReportMission")
	proto.RegisterType((*C2S_GetMissionReward)(nil), "protocol.C2S_GetMissionReward")
	proto.RegisterType((*S2C_GetMissionReward)(nil), "protocol.S2C_GetMissionReward")
	proto.RegisterType((*S2C_MissionCanAcceptList)(nil), "protocol.S2C_MissionCanAcceptList")
	proto.RegisterType((*XFurniture)(nil), "protocol._furniture")
	proto.RegisterType((*XTheme)(nil), "protocol._theme")
	proto.RegisterType((*XHomeInfo)(nil), "protocol._homeInfo")
	proto.RegisterType((*C2S_GetHomeInfo)(nil), "protocol.C2S_GetHomeInfo")
	proto.RegisterType((*S2C_GetHomeInfo)(nil), "protocol.S2C_GetHomeInfo")
	proto.RegisterType((*C2S_GetAllThemesInfo)(nil), "protocol.C2S_GetAllThemesInfo")
	proto.RegisterType((*S2C_GetAllThemesInfo)(nil), "protocol.S2C_GetAllThemesInfo")
	proto.RegisterType((*C2S_GetSingleThemeInfo)(nil), "protocol.C2S_GetSingleThemeInfo")
	proto.RegisterType((*S2C_GetSingleThemeInfo)(nil), "protocol.S2C_GetSingleThemeInfo")
	proto.RegisterType((*C2S_SaveThemeInfo)(nil), "protocol.C2S_SaveThemeInfo")
	proto.RegisterType((*C2S_HomeUp)(nil), "protocol.C2S_HomeUp")
	proto.RegisterType((*C2S_ChangeThemeName)(nil), "protocol.C2S_ChangeThemeName")
	proto.RegisterType((*C2S_UnlockTheme)(nil), "protocol.C2S_UnlockTheme")
	proto.RegisterType((*C2S_Forest_CutTree)(nil), "protocol.C2S_Forest_CutTree")
	proto.RegisterType((*S2C_Forest_CutTree)(nil), "protocol.S2C_Forest_CutTree")
	proto.RegisterType((*C2S_Mine_GetMaxLayer)(nil), "protocol.C2S_Mine_GetMaxLayer")
	proto.RegisterType((*S2C_Mine_GetMaxLayer)(nil), "protocol.S2C_Mine_GetMaxLayer")
	proto.RegisterType((*C2S_Mine_EnterLayer)(nil), "protocol.C2S_Mine_EnterLayer")
	proto.RegisterType((*S2C_Mine_EnterLayer)(nil), "protocol.S2C_Mine_EnterLayer")
	proto.RegisterType((*C2S_Mine_Dig)(nil), "protocol.C2S_Mine_Dig")
	proto.RegisterType((*S2C_Mine_Dig)(nil), "protocol.S2C_Mine_Dig")
	proto.RegisterType((*C2S_Mine_GetReward)(nil), "protocol.C2S_Mine_GetReward")
	proto.RegisterType((*S2C_Mine_GetReward)(nil), "protocol.S2C_Mine_GetReward")
	proto.RegisterType((*C2S_GetUserAllValue)(nil), "protocol.C2S_GetUserAllValue")
	proto.RegisterType((*S2C_GetUserAllValue)(nil), "protocol.S2C_GetUserAllValue")
	proto.RegisterType((*C2S_ChangeUserIntAttr)(nil), "protocol.C2S_ChangeUserIntAttr")
	proto.RegisterType((*S2C_ChangeUserIntAttr)(nil), "protocol.S2C_ChangeUserIntAttr")
	proto.RegisterType((*C2S_ChangeUserStrAttr)(nil), "protocol.C2S_ChangeUserStrAttr")
	proto.RegisterType((*S2C_ChangeUserStrAttr)(nil), "protocol.S2C_ChangeUserStrAttr")
	proto.RegisterType((*S2C_AddAttrList)(nil), "protocol.S2C_AddAttrList")
	proto.RegisterType((*C2S_StorePosition)(nil), "protocol.C2S_StorePosition")
	proto.RegisterType((*ShopItem)(nil), "protocol.ShopItem")
	proto.RegisterType((*HasBuyItem)(nil), "protocol.HasBuyItem")
	proto.RegisterType((*S2C_Shop_GetAllItems)(nil), "protocol.S2C_Shop_GetAllItems")
	proto.RegisterType((*C2S_Shop_Buy)(nil), "protocol.C2S_Shop_Buy")
	proto.RegisterType((*BuyResult)(nil), "protocol.BuyResult")
	proto.RegisterType((*S2C_Shop_Buy)(nil), "protocol.S2C_Shop_Buy")
	proto.RegisterType((*C2S_Recharge_GetGift)(nil), "protocol.C2S_Recharge_GetGift")
	proto.RegisterType((*S2C_Recharge_GetGift)(nil), "protocol.S2C_Recharge_GetGift")
	proto.RegisterType((*C2S_Recharge_GetGiftConfirm)(nil), "protocol.C2S_Recharge_GetGiftConfirm")
	proto.RegisterType((*C2S_Vip_ExpireDate)(nil), "protocol.C2S_Vip_ExpireDate")
	proto.RegisterType((*S2C_Vip_ExpireDate)(nil), "protocol.S2C_Vip_ExpireDate")
	proto.RegisterType((*S2C_Vip_BuyReward)(nil), "protocol.S2C_Vip_BuyReward")
	proto.RegisterType((*S2C_Vip_DailyReward)(nil), "protocol.S2C_Vip_DailyReward")
	proto.RegisterType((*S2C_AntiAddictInfo)(nil), "protocol.S2C_AntiAddictInfo")
	proto.RegisterType((*C2S_VerifiedIDCard)(nil), "protocol.C2S_VerifiedIDCard")
	proto.RegisterType((*S2C_Functions)(nil), "protocol.S2C_Functions")
	proto.RegisterType((*S2C_ShowNotice)(nil), "protocol.S2C_ShowNotice")
	proto.RegisterType((*XConfig)(nil), "protocol._config")
	proto.RegisterType((*S2C_SyncConfig)(nil), "protocol.S2C_SyncConfig")
	proto.RegisterType((*Attachment_Item)(nil), "protocol.Attachment_Item")
	proto.RegisterType((*EmailItem)(nil), "protocol.EmailItem")
	proto.RegisterType((*SimpleEmailItem)(nil), "protocol.SimpleEmailItem")
	proto.RegisterType((*S2C_SimpleEmailItemList)(nil), "protocol.S2C_SimpleEmailItemList")
	proto.RegisterType((*S2C_EmailOpResult)(nil), "protocol.S2C_EmailOpResult")
	proto.RegisterType((*C2S_EmailOp)(nil), "protocol.C2S_EmailOp")
	proto.RegisterType((*FriendInfo)(nil), "protocol.friendInfo")
	proto.RegisterType((*FriendSimpleInfo)(nil), "protocol.friendSimpleInfo")
	proto.RegisterType((*BlockPerson)(nil), "protocol.blockPerson")
	proto.RegisterType((*S2C_Friend_GetList)(nil), "protocol.S2C_Friend_GetList")
	proto.RegisterType((*C2S_Friend_Apply)(nil), "protocol.C2S_Friend_Apply")
	proto.RegisterType((*S2C_Friend_Apply)(nil), "protocol.S2C_Friend_Apply")
	proto.RegisterType((*C2S_Friend_Delete)(nil), "protocol.C2S_Friend_Delete")
	proto.RegisterType((*S2C_Friend_Delete)(nil), "protocol.S2C_Friend_Delete")
	proto.RegisterType((*C2S_Friend_Chat)(nil), "protocol.C2S_Friend_Chat")
	proto.RegisterType((*S2C_Friend_Chat)(nil), "protocol.S2C_Friend_Chat")
	proto.RegisterType((*ChatInfo)(nil), "protocol.chatInfo")
	proto.RegisterType((*S2C_Friend_OnLineMsg)(nil), "protocol.S2C_Friend_OnLineMsg")
	proto.RegisterType((*S2C_Friend_OfflineMsg)(nil), "protocol.S2C_Friend_OfflineMsg")
	proto.RegisterType((*C2S_Friend_Remarks)(nil), "protocol.C2S_Friend_Remarks")
	proto.RegisterType((*S2C_Friend_Remarks)(nil), "protocol.S2C_Friend_Remarks")
	proto.RegisterType((*S2C_Friend_Recommend)(nil), "protocol.S2C_Friend_Recommend")
	proto.RegisterType((*S2C_Friend_State)(nil), "protocol.S2C_Friend_State")
	proto.RegisterType((*C2S_Friend_Card)(nil), "protocol.C2S_Friend_Card")
	proto.RegisterType((*S2C_Friend_Card)(nil), "protocol.S2C_Friend_Card")
	proto.RegisterType((*C2S_Friend_Search)(nil), "protocol.C2S_Friend_Search")
	proto.RegisterType((*S2C_Friend_Search)(nil), "protocol.S2C_Friend_Search")
	proto.RegisterType((*C2S_Friend_DealApply)(nil), "protocol.C2S_Friend_DealApply")
	proto.RegisterType((*S2C_Friend_DealApplyPass)(nil), "protocol.S2C_Friend_DealApplyPass")
	proto.RegisterType((*S2C_Friend_DealApplyIgnore)(nil), "protocol.S2C_Friend_DealApplyIgnore")
	proto.RegisterType((*S2C_Friend_ApplyList)(nil), "protocol.S2C_Friend_ApplyList")
	proto.RegisterType((*C2S_Friend_SendEnergy)(nil), "protocol.C2S_Friend_SendEnergy")
	proto.RegisterType((*S2C_Friend_SendEnergy)(nil), "protocol.S2C_Friend_SendEnergy")
	proto.RegisterType((*S2C_Friend_SendEnergyAll)(nil), "protocol.S2C_Friend_SendEnergyAll")
	proto.RegisterType((*S2C_Friend_GetEnergyAll)(nil), "protocol.S2C_Friend_GetEnergyAll")
	proto.RegisterType((*S2C_Friend_GetEnergy)(nil), "protocol.S2C_Friend_GetEnergy")
	proto.RegisterType((*C2S_Friend_GetEnergy)(nil), "protocol.C2S_Friend_GetEnergy")
	proto.RegisterType((*C2S_Friend_AddBlock)(nil), "protocol.C2S_Friend_AddBlock")
	proto.RegisterType((*S2C_Friend_AddBlock)(nil), "protocol.S2C_Friend_AddBlock")
	proto.RegisterType((*C2S_Friend_DelBlock)(nil), "protocol.C2S_Friend_DelBlock")
	proto.RegisterType((*S2C_Friend_DelBlock)(nil), "protocol.S2C_Friend_DelBlock")
	proto.RegisterType((*SceneUser)(nil), "protocol.sceneUser")
	proto.RegisterType((*PosInfo)(nil), "protocol.posInfo")
	proto.RegisterType((*C2S_Syn_EnterScene)(nil), "protocol.C2S_Syn_EnterScene")
	proto.RegisterType((*S2C_Syn_EnterScene)(nil), "protocol.S2C_Syn_EnterScene")
	proto.RegisterType((*C2S_Syn_SceneData)(nil), "protocol.C2S_Syn_SceneData")
	proto.RegisterType((*S2C_Syn_SceneData)(nil), "protocol.S2C_Syn_SceneData")
	proto.RegisterType((*S2C_Syn_Info)(nil), "protocol.S2C_Syn_Info")
	proto.RegisterType((*S2C_Syn_Pos)(nil), "protocol.S2C_Syn_Pos")
	proto.RegisterType((*C2S_Syn_Move)(nil), "protocol.C2S_Syn_Move")
	proto.RegisterType((*C2S_Syn_ModifyRecvMsgStatus)(nil), "protocol.C2S_Syn_ModifyRecvMsgStatus")
	proto.RegisterType((*S2C_Syn_LeaveScene)(nil), "protocol.S2C_Syn_LeaveScene")
	proto.RegisterType((*Mouse)(nil), "protocol.mouse")
	proto.RegisterType((*C2S_Mouse_EnterHole)(nil), "protocol.C2S_Mouse_EnterHole")
	proto.RegisterType((*S2C_Mouse_EnterHole)(nil), "protocol.S2C_Mouse_EnterHole")
	proto.RegisterType((*S2C_Mouse_NewMouse)(nil), "protocol.S2C_Mouse_NewMouse")
	proto.RegisterType((*C2S_Mouse_Hit)(nil), "protocol.C2S_Mouse_Hit")
	proto.RegisterType((*C2S_Mouse_Eat)(nil), "protocol.C2S_Mouse_Eat")
	proto.RegisterType((*C2S_Mouse_Bomb)(nil), "protocol.C2S_Mouse_Bomb")
	proto.RegisterType((*S2C_Mouse_Over)(nil), "protocol.S2C_Mouse_Over")
	proto.RegisterType((*Fish)(nil), "protocol.fish")
	proto.RegisterType((*C2S_Fish_SitDown)(nil), "protocol.C2S_Fish_SitDown")
	proto.RegisterType((*S2C_Fish_SitDown)(nil), "protocol.S2C_Fish_SitDown")
	proto.RegisterType((*C2S_Fish_StandUp)(nil), "protocol.C2S_Fish_StandUp")
	proto.RegisterType((*C2S_Fish_GetAllFish)(nil), "protocol.C2S_Fish_GetAllFish")
	proto.RegisterType((*S2C_Fish_GetAllFish)(nil), "protocol.S2C_Fish_GetAllFish")
	proto.RegisterType((*C2S_Fish_PullHook)(nil), "protocol.C2S_Fish_PullHook")
	proto.RegisterType((*S2C_Fish_PullHook)(nil), "protocol.S2C_Fish_PullHook")
	proto.RegisterType((*S2C_Fish_NewFish)(nil), "protocol.S2C_Fish_NewFish")
	proto.RegisterType((*ManorBuilding)(nil), "protocol.ManorBuilding")
	proto.RegisterType((*ManorStock)(nil), "protocol.ManorStock")
	proto.RegisterType((*S2C_Manor_AllInfo)(nil), "protocol.S2C_Manor_AllInfo")
	proto.RegisterType((*C2S_Manor_SaveAllPos)(nil), "protocol.C2S_Manor_SaveAllPos")
	proto.RegisterType((*C2S_Manor_ChangeOne)(nil), "protocol.C2S_Manor_ChangeOne")
	proto.RegisterType((*S2C_Manor_ChangeOne)(nil), "protocol.S2C_Manor_ChangeOne")
	proto.RegisterType((*S2C_Manor_BuyBuilding)(nil), "protocol.S2C_Manor_BuyBuilding")
	proto.RegisterType((*XAnything)(nil), "protocol._Anything")
	proto.RegisterType((*C2S_Anything_Add)(nil), "protocol.C2S_Anything_Add")
	proto.RegisterType((*S2C_Anything_Add)(nil), "protocol.S2C_Anything_Add")
	proto.RegisterType((*C2S_Anything_Sub)(nil), "protocol.C2S_Anything_Sub")
	proto.RegisterType((*S2C_Anything_Sub)(nil), "protocol.S2C_Anything_Sub")
	proto.RegisterType((*XCustomizeVarBool)(nil), "protocol._customizeVarBool")
	proto.RegisterType((*XCustomizeVarDouble)(nil), "protocol._customizeVarDouble")
	proto.RegisterType((*XCustomizeVarString)(nil), "protocol._customizeVarString")
	proto.RegisterType((*C2S_CustomizeVar_GetAll)(nil), "protocol.C2S_CustomizeVar_GetAll")
	proto.RegisterType((*S2C_CustomizeVar_GetAll)(nil), "protocol.S2C_CustomizeVar_GetAll")
	proto.RegisterType((*C2S_CustomizeVar_GetBoolValue)(nil), "protocol.C2S_CustomizeVar_GetBoolValue")
	proto.RegisterType((*S2C_CustomizeVar_GetBoolValue)(nil), "protocol.S2C_CustomizeVar_GetBoolValue")
	proto.RegisterType((*C2S_CustomizeVar_GetDoubleValue)(nil), "protocol.C2S_CustomizeVar_GetDoubleValue")
	proto.RegisterType((*S2C_CustomizeVar_GetDoubleValue)(nil), "protocol.S2C_CustomizeVar_GetDoubleValue")
	proto.RegisterType((*C2S_CustomizeVar_GetStringValue)(nil), "protocol.C2S_CustomizeVar_GetStringValue")
	proto.RegisterType((*S2C_CustomizeVar_GetStringValue)(nil), "protocol.S2C_CustomizeVar_GetStringValue")
	proto.RegisterType((*C2S_CustomizeVar_SetBoolValue)(nil), "protocol.C2S_CustomizeVar_SetBoolValue")
	proto.RegisterType((*C2S_CustomizeVar_SetDoubleValue)(nil), "protocol.C2S_CustomizeVar_SetDoubleValue")
	proto.RegisterType((*C2S_CustomizeVar_SetStringValue)(nil), "protocol.C2S_CustomizeVar_SetStringValue")
}

func init() { proto.RegisterFile("protoGameJiuMi.proto", fileDescriptor_a1680e55bbb2433d) }

var fileDescriptor_a1680e55bbb2433d = []byte{
	// 6845 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xd4, 0x3c, 0x4d, 0x8f, 0x1c, 0xc7,
	0x75, 0xee, 0x99, 0xfd, 0x98, 0xa9, 0xdd, 0x25, 0x7b, 0x9b, 0xe4, 0x72, 0x48, 0x49, 0x14, 0x5d,
	0x96, 0x15, 0x6a, 0x49, 0x51, 0xd6, 0x4a, 0xb2, 0x2c, 0xd3, 0xb2, 0xb4, 0x3b, 0xcb, 0x25, 0xd7,
	0xe6, 0x92, 0x9b, 0x9e, 0xa5, 0x64, 0x0b, 0x76, 0x26, 0xb5, 0x33, 0xb5, 0x3b, 0x6d, 0xf6, 0x74,
	0x8f, 0xbb, 0x7b, 0x96, 0x1c, 0x01, 0x0e, 0x6c, 0x23, 0xa7, 0xe8, 0x90, 0xf8, 0x10, 0xc0, 0x39,
	0xe4, 0x60, 0x24, 0xc8, 0x21, 0x80, 0x0f, 0x4e, 0x2e, 0x49, 0x10, 0x20, 0x88, 0x73, 0x31, 0x90,
	0x04, 0xb0, 0xff, 0x41, 0xe0, 0x00, 0xf1, 0x29, 0x39, 0x05, 0xc8, 0x35, 0x78, 0xef, 0x55, 0x75,
	0x57, 0xf7, 0x7c, 0xec, 0xec, 0x8a, 0x12, 0x92, 0xd3, 0xcc, 0x7b, 0xf5, 0xea, 0xbd, 0x57, 0xaf,
	0x5e, 0xbd, 0x7a, 0xf5, 0xd5, 0xec, 0x7c, 0x2f, 0x0a, 0x93, 0xf0, 0x8e, 0xe8, 0xca, 0xaf, 0x79,
	0xfd, 0x1d, 0xef, 0x26, 0x82, 0x4e, 0x05, 0x7f, 0x5a, 0xa1, 0xcf, 0xaf, 0x31, 0x67, 0x6b, 0xad,
	0xd1, 0x74, 0xe5, 0xa1, 0x17, 0x27, 0x32, 0x6a, 0xc8, 0xe8, 0x48, 0x46, 0x8e, 0xc3, 0x66, 0x5a,
	0x61, 0x5b, 0xd6, 0xac, 0xab, 0xd6, 0xb5, 0xaa, 0x8b, 0xff, 0xf9, 0x3f, 0x94, 0xd8, 0x42, 0x33,
	0xf6, 0xba, 0x3d, 0x5f, 0x3e, 0x8c, 0x65, 0xe4, 0xac, 0xb0, 0xb9, 0x7e, 0x2c, 0xa3, 0xed, 0x36,
	0x52, 0xcd, 0xba, 0x0a, 0x02, 0xfc, 0xa1, 0xe8, 0xca, 0xed, 0x76, 0xad, 0x44, 0x78, 0x82, 0x9c,
	0xcb, 0xac, 0x12, 0x78, 0xad, 0x47, 0xf7, 0x45, 0x57, 0xd6, 0xca, 0xc8, 0x37, 0x85, 0x9d, 0xf3,
	0x6c, 0xd6, 0x97, 0x47, 0xd2, 0xaf, 0xcd, 0x60, 0x15, 0x02, 0x9c, 0xab, 0x6c, 0xe1, 0x40, 0xb4,
	0xe4, 0x56, 0x44, 0xec, 0xe6, 0xb0, 0xcc, 0x44, 0x39, 0xab, 0xcc, 0x7e, 0x2c, 0x45, 0xe4, 0x05,
	0x87, 0x75, 0x3f, 0x4c, 0x3a, 0x32, 0xde, 0x6e, 0xd7, 0xaa, 0x48, 0x36, 0x84, 0x07, 0x19, 0x49,
	0xf8, 0x48, 0x06, 0xb5, 0xb3, 0x28, 0x9c, 0x00, 0xa7, 0xc6, 0xe6, 0x0f, 0x22, 0x4f, 0x06, 0xed,
	0xb8, 0x66, 0x5f, 0x2d, 0x5f, 0x9b, 0x75, 0x35, 0xe8, 0x3c, 0xcb, 0xaa, 0xfb, 0x7e, 0xd8, 0x7a,
	0x74, 0xcf, 0x8b, 0x93, 0xda, 0x32, 0x96, 0x65, 0x08, 0xa8, 0xb7, 0x2f, 0x82, 0x3d, 0xe1, 0x3f,
	0xaa, 0x9d, 0x43, 0x81, 0x1a, 0x84, 0x92, 0xb8, 0x25, 0x03, 0xd0, 0xf8, 0xfc, 0x55, 0xeb, 0x5a,
	0xd9, 0xd5, 0x20, 0x5f, 0x67, 0x4e, 0x63, 0x6d, 0xab, 0x68, 0xeb, 0xeb, 0x6c, 0x16, 0x2c, 0x17,
	0xd7, 0xac, 0xab, 0xe5, 0x6b, 0x0b, 0x6b, 0x17, 0x6e, 0xea, 0xbe, 0xb9, 0x69, 0x58, 0xdb, 0x25,
	0x1a, 0xfe, 0x65, 0xb6, 0x04, 0x2c, 0x00, 0x75, 0x2f, 0x3c, 0xf4, 0x02, 0xe7, 0x25, 0x36, 0x03,
	0x25, 0xd8, 0x07, 0x63, 0x2b, 0x23, 0x09, 0x7f, 0x87, 0x2d, 0x41, 0x57, 0x67, 0x75, 0x27, 0xf4,
	0x60, 0x24, 0xe3, 0xbe, 0x9f, 0x60, 0x0f, 0x56, 0x5c, 0x05, 0xf1, 0x6b, 0xec, 0x8c, 0x21, 0x3c,
	0xec, 0x27, 0xe3, 0x38, 0xf0, 0x9f, 0x58, 0xd4, 0x54, 0x20, 0x5d, 0x4f, 0x92, 0xa8, 0xde, 0x11,
	0xc1, 0xa1, 0x1c, 0x2b, 0xf0, 0x3a, 0x9b, 0x11, 0x49, 0x12, 0xa1, 0xb8, 0x33, 0x6b, 0x17, 0xb3,
	0x46, 0xdc, 0x0e, 0xfa, 0xdd, 0x94, 0x89, 0x8b, 0x44, 0x0e, 0x67, 0x8b, 0xf0, 0xfb, 0x9e, 0xf0,
	0xfb, 0x72, 0x3b, 0x48, 0xd0, 0x97, 0x66, 0xdd, 0x1c, 0x2e, 0x47, 0xd3, 0x48, 0x22, 0x74, 0xab,
	0xaa, 0x9b, 0xc3, 0xf1, 0x3a, 0x99, 0x72, 0xbd, 0xdd, 0xde, 0xc2, 0x1e, 0x1f, 0xab, 0xdd, 0x65,
	0x56, 0x21, 0x9f, 0x48, 0x5d, 0x3a, 0x85, 0x35, 0x93, 0x4d, 0xe9, 0x7f, 0x0c, 0x26, 0x03, 0x76,
	0x11, 0x3a, 0x06, 0xbc, 0x67, 0x2f, 0x7c, 0x70, 0x70, 0xe0, 0x7b, 0x81, 0x54, 0xec, 0x6c, 0x56,
	0xee, 0xc6, 0x87, 0x6a, 0x1c, 0xc2, 0x5f, 0x43, 0x40, 0x29, 0x27, 0xe0, 0x3c, 0x9b, 0xed, 0xc6,
	0x87, 0xdb, 0x6d, 0x65, 0x0f, 0x02, 0x9c, 0x2b, 0x8c, 0x45, 0xb2, 0x25, 0xbd, 0x23, 0xac, 0x41,
	0xa3, 0xcb, 0xc0, 0xf0, 0xb7, 0x58, 0xb5, 0xbe, 0xb6, 0xd5, 0x9c, 0xec, 0x0f, 0xe9, 0xc8, 0x29,
	0x19, 0x23, 0x87, 0x2f, 0xb0, 0xea, 0xd6, 0x5a, 0x9d, 0xaa, 0xf2, 0x03, 0x76, 0x1e, 0xec, 0xd0,
	0x18, 0x04, 0xad, 0x9d, 0x01, 0xe9, 0xae, 0x87, 0x89, 0x1e, 0x5e, 0x56, 0x7e, 0x78, 0x8d, 0x6b,
	0x47, 0x6e, 0xd8, 0x95, 0x0b, 0xc3, 0x8e, 0x6f, 0xb0, 0x45, 0xd5, 0x69, 0x1b, 0x80, 0x9b, 0x64,
	0xee, 0x44, 0x44, 0x87, 0x32, 0xc9, 0xcc, 0xad, 0x61, 0xcd, 0x63, 0x53, 0xfa, 0xa7, 0xe7, 0xf1,
	0x33, 0x8b, 0xd9, 0xc0, 0x04, 0x1c, 0x3b, 0x90, 0x7e, 0xa3, 0x27, 0xc5, 0x44, 0x46, 0x69, 0xe4,
	0x2b, 0x15, 0x22, 0x9f, 0xea, 0xe0, 0x72, 0xd6, 0xc1, 0xb7, 0xd8, 0x62, 0x0c, 0xec, 0x14, 0x6b,
	0xec, 0xb4, 0xfc, 0xa0, 0x68, 0x18, 0xc5, 0x6e, 0x8e, 0x18, 0x44, 0xe9, 0xde, 0xad, 0xcd, 0x92,
	0xce, 0x1a, 0xe6, 0xbf, 0xb1, 0x98, 0x0d, 0x3d, 0xf6, 0x09, 0xe8, 0x7c, 0x8c, 0x9b, 0x0d, 0xb5,
	0x69, 0xf6, 0x24, 0x6d, 0x5a, 0x61, 0x73, 0x10, 0xf3, 0xd3, 0x19, 0x40, 0x41, 0xe4, 0x5b, 0x34,
	0x35, 0xcc, 0x53, 0x08, 0x56, 0x20, 0xff, 0x1e, 0xb3, 0xeb, 0xc5, 0xce, 0x19, 0x1e, 0x49, 0x45,
	0xa5, 0x4a, 0xa7, 0x35, 0x74, 0xb9, 0x60, 0xe8, 0x2d, 0xb6, 0x52, 0xb4, 0xb3, 0x8b, 0x11, 0xd4,
	0xb9, 0x91, 0x46, 0x56, 0x8a, 0xd7, 0xe7, 0x33, 0x61, 0x5b, 0xc2, 0xf3, 0xef, 0x87, 0x89, 0xd7,
	0x92, 0x69, 0xbc, 0xfd, 0x4b, 0x8b, 0xd9, 0xeb, 0x6b, 0x8d, 0x66, 0x63, 0x10, 0x27, 0xb2, 0x4b,
	0x85, 0xce, 0x19, 0x56, 0xf2, 0x74, 0x67, 0x95, 0x3c, 0x1a, 0x2f, 0xf2, 0xd0, 0x0b, 0xf6, 0x3c,
	0xd5, 0x53, 0x30, 0x5e, 0x34, 0x02, 0x6c, 0x24, 0x83, 0x36, 0x96, 0x91, 0x96, 0x1a, 0x84, 0xc9,
	0x35, 0x92, 0x3d, 0x29, 0x12, 0x80, 0x62, 0xd5, 0x67, 0x26, 0x0a, 0x9a, 0xe8, 0x05, 0x89, 0x8c,
	0x8e, 0x84, 0xaf, 0x7d, 0x49, 0xc3, 0xda, 0x9a, 0x73, 0xa9, 0x35, 0xf9, 0x06, 0x4d, 0x0e, 0xb7,
	0x81, 0xa2, 0x01, 0x13, 0xde, 0x58, 0xd7, 0x32, 0x26, 0xc8, 0x52, 0x7e, 0x82, 0xfc, 0xdb, 0x39,
	0x36, 0xdb, 0xec, 0x1f, 0x93, 0x5c, 0x84, 0x3d, 0x19, 0xa8, 0xaa, 0x55, 0x57, 0x41, 0xc0, 0xb3,
	0xd7, 0x09, 0x03, 0x79, 0x3f, 0x54, 0x6e, 0xa9, 0xc1, 0x9c, 0x23, 0xcf, 0x8c, 0x4b, 0x3b, 0x66,
	0xcd, 0xb4, 0xc3, 0x66, 0x65, 0xf9, 0xa4, 0xa7, 0x9c, 0x0d, 0xfe, 0x1a, 0x1e, 0x38, 0x9f, 0xf3,
	0xc0, 0x42, 0x82, 0x52, 0x19, 0x4e, 0x50, 0x56, 0xd8, 0x9c, 0x0c, 0x64, 0x74, 0x38, 0x50, 0x69,
	0x89, 0x82, 0x40, 0x72, 0xab, 0x23, 0xa2, 0x6e, 0x8d, 0x91, 0x64, 0x04, 0x00, 0x1b, 0x77, 0xa4,
	0xef, 0xd7, 0x16, 0x08, 0x8b, 0x00, 0x60, 0x7b, 0x52, 0x44, 0x7e, 0x6d, 0x91, 0xb0, 0x08, 0x40,
	0xbf, 0xe3, 0x9f, 0x0d, 0x2f, 0x68, 0xd7, 0x96, 0xa8, 0xdf, 0x53, 0x84, 0x91, 0x84, 0x9d, 0xc9,
	0x25, 0x61, 0x2b, 0x6c, 0x6e, 0x7b, 0xb3, 0x2e, 0xa2, 0xb6, 0xca, 0x82, 0x14, 0x44, 0xee, 0x2c,
	0x7c, 0xb4, 0x92, 0x4d, 0x56, 0xd2, 0x30, 0x24, 0x59, 0xa2, 0x95, 0x78, 0x47, 0x72, 0x37, 0xf4,
	0x82, 0x64, 0x53, 0x78, 0xfe, 0xa0, 0xb6, 0x4c, 0x49, 0x56, 0x11, 0xef, 0x5c, 0x63, 0x67, 0x0d,
	0xdc, 0xfb, 0x52, 0x3e, 0xaa, 0x39, 0x48, 0x5a, 0x44, 0x4f, 0x48, 0xa0, 0x6e, 0x32, 0xe7, 0x9e,
	0x88, 0x13, 0xca, 0x19, 0x40, 0x03, 0x74, 0xdf, 0xf3, 0x48, 0x34, 0xa2, 0xc4, 0x79, 0x81, 0x2d,
	0xc5, 0x83, 0x20, 0xe9, 0xc8, 0xc4, 0x6b, 0xe1, 0xac, 0x71, 0x01, 0x67, 0x8d, 0x3c, 0x12, 0xfa,
	0xaa, 0x45, 0xb9, 0x20, 0xd2, 0xac, 0x20, 0x8d, 0x89, 0x1a, 0x99, 0x4c, 0x5e, 0x1c, 0x93, 0x4c,
	0x5e, 0x63, 0x67, 0xf7, 0xfb, 0xbe, 0x2f, 0x13, 0x2f, 0xd8, 0x08, 0x45, 0x04, 0xb3, 0x7a, 0x8d,
	0xda, 0x59, 0x40, 0x83, 0x65, 0x77, 0xc5, 0x60, 0x2f, 0x4c, 0x84, 0x5f, 0xbb, 0x44, 0xa3, 0x48,
	0xc3, 0xce, 0x0d, 0xb6, 0x2c, 0xfc, 0x48, 0x8a, 0xf6, 0x40, 0xe7, 0x84, 0xb2, 0x5d, 0xbb, 0x8c,
	0x39, 0xd7, 0x70, 0x01, 0xf4, 0x78, 0x57, 0x04, 0x61, 0x84, 0x9d, 0xf4, 0x12, 0x76, 0x52, 0x86,
	0xe0, 0x3f, 0x2f, 0xb1, 0x33, 0xf5, 0xb5, 0x46, 0xf3, 0x4e, 0x5f, 0xc6, 0x09, 0xcd, 0xe7, 0x58,
	0xa1, 0xd5, 0xf1, 0x70, 0xa8, 0x59, 0xba, 0x82, 0x42, 0x8c, 0x1d, 0x4a, 0xd9, 0xd0, 0x2b, 0x17,
	0x67, 0x84, 0x9e, 0x88, 0xe3, 0xc7, 0x61, 0xd4, 0xd6, 0x03, 0x49, 0xc3, 0x50, 0xc7, 0xeb, 0xad,
	0xb7, 0xdb, 0x34, 0xe9, 0x54, 0x5d, 0x05, 0x41, 0x27, 0xb7, 0x54, 0x74, 0xa5, 0xe1, 0xa4, 0x41,
	0x98, 0x31, 0xda, 0xf2, 0xc8, 0x6b, 0xc9, 0xbd, 0x41, 0x4f, 0xe2, 0xb0, 0xaa, 0xba, 0x06, 0xc6,
	0x70, 0xe0, 0x4a, 0xce, 0x81, 0x6b, 0x6c, 0xbe, 0x2b, 0xbc, 0xe0, 0x3d, 0x19, 0xa9, 0x11, 0xa5,
	0x41, 0x70, 0x03, 0x79, 0x24, 0xfc, 0xbe, 0x48, 0xbc, 0x10, 0xcb, 0x69, 0x68, 0xe5, 0x91, 0x60,
	0x93, 0x4e, 0x98, 0x1c, 0x78, 0x4f, 0x80, 0x82, 0x86, 0x59, 0x86, 0x80, 0x0c, 0x17, 0x6d, 0x28,
	0xba, 0xf2, 0x98, 0x0c, 0xf7, 0x80, 0x2d, 0xd6, 0x8d, 0x75, 0x13, 0xf0, 0x6d, 0xa5, 0x5e, 0x43,
	0xa4, 0x19, 0x62, 0xe2, 0x6c, 0x9a, 0xeb, 0xd6, 0x72, 0xb1, 0x5b, 0x6f, 0x41, 0xb2, 0x52, 0xcf,
	0xe4, 0x5c, 0x67, 0xe5, 0x48, 0xea, 0xe9, 0xe3, 0x52, 0x36, 0x7d, 0x3c, 0xe8, 0xc9, 0x08, 0x1b,
	0x49, 0x33, 0x8d, 0x0b, 0x54, 0xfc, 0x0a, 0x63, 0xa0, 0x64, 0x23, 0x01, 0xe7, 0x85, 0xb8, 0x16,
	0x27, 0x91, 0x9e, 0x01, 0xe3, 0x24, 0xe2, 0xcf, 0x43, 0xf6, 0xd7, 0x68, 0x7a, 0x41, 0xf2, 0xda,
	0x1a, 0xac, 0xf9, 0xda, 0x22, 0x11, 0x4a, 0x79, 0xfc, 0x0f, 0x39, 0x1e, 0x10, 0xdc, 0xee, 0xf6,
	0x92, 0x01, 0xff, 0x06, 0x63, 0xd9, 0x24, 0x85, 0x09, 0xad, 0xf0, 0xfc, 0xba, 0x5e, 0x26, 0x42,
	0x42, 0xab, 0x60, 0x8c, 0x58, 0x22, 0x12, 0xdd, 0x5a, 0xe9, 0x6a, 0x19, 0x12, 0x46, 0x04, 0x70,
	0xbe, 0x16, 0x9e, 0xbf, 0x93, 0xa6, 0x0e, 0x1a, 0xe4, 0x1f, 0x59, 0xec, 0x6c, 0xa1, 0x01, 0x60,
	0x16, 0x2f, 0x6e, 0xf4, 0x5b, 0x2d, 0x19, 0xc7, 0x28, 0xa0, 0xe2, 0x66, 0x08, 0x67, 0x8d, 0xcd,
	0xcb, 0x28, 0x42, 0xe1, 0x34, 0x6d, 0xd7, 0x0a, 0x8b, 0x86, 0xdb, 0x51, 0x14, 0x62, 0xb9, 0xab,
	0x09, 0x9d, 0x17, 0xb3, 0xb4, 0x65, 0xdc, 0xcc, 0x8b, 0x33, 0xd9, 0x37, 0xd9, 0x6c, 0xd3, 0x4b,
	0x64, 0x17, 0x2c, 0xd2, 0xef, 0xa7, 0x93, 0x2d, 0xfe, 0x47, 0x4f, 0x4f, 0x64, 0x37, 0x4b, 0x5b,
	0x09, 0x82, 0x69, 0x39, 0x08, 0xd5, 0x88, 0x29, 0x05, 0x21, 0x98, 0x40, 0x3e, 0x49, 0x22, 0xa1,
	0x86, 0x0a, 0x01, 0xfc, 0x4d, 0xb6, 0x74, 0xd0, 0x8f, 0x02, 0x2f, 0xe9, 0x47, 0x72, 0x1b, 0x44,
	0x64, 0xec, 0xac, 0x11, 0xec, 0x4a, 0x9a, 0x1d, 0xff, 0xa9, 0xc5, 0xce, 0x82, 0x1f, 0xac, 0xfb,
	0x3e, 0xd4, 0xdb, 0x0e, 0x0e, 0x42, 0x18, 0x42, 0xb1, 0x1f, 0x26, 0x75, 0xe9, 0xfb, 0xf7, 0x43,
	0x95, 0x5e, 0x1b, 0x18, 0xe7, 0xf3, 0x6c, 0x16, 0xb8, 0xc5, 0xd8, 0x0b, 0x0b, 0x6b, 0x67, 0x8d,
	0xb5, 0x21, 0xe0, 0x5d, 0x2a, 0x75, 0xde, 0x60, 0xd5, 0x54, 0x27, 0x4c, 0xb8, 0x17, 0xcc, 0x1c,
	0x28, 0xa7, 0xae, 0x9b, 0x51, 0x42, 0xff, 0x1c, 0xf8, 0x61, 0x18, 0x61, 0x34, 0x9d, 0xa1, 0x3c,
	0x3d, 0x45, 0xf0, 0xbb, 0x6c, 0xa1, 0x4e, 0x6b, 0x4d, 0x6c, 0xe6, 0xe7, 0xd8, 0x0c, 0x08, 0x53,
	0x6e, 0x3b, 0xa4, 0x09, 0x16, 0x9a, 0x5e, 0x63, 0xa5, 0x5e, 0xc3, 0x7f, 0x68, 0x41, 0x62, 0x51,
	0x6f, 0x3e, 0xec, 0xb5, 0x45, 0x42, 0xdc, 0x4e, 0xd2, 0x2f, 0x2f, 0xb0, 0xa5, 0x56, 0x3f, 0x8a,
	0x64, 0x90, 0xdc, 0xef, 0x77, 0xf7, 0xd3, 0x64, 0x2d, 0x8f, 0x04, 0x53, 0x86, 0x91, 0x77, 0xa8,
	0x48, 0x54, 0xfe, 0x9a, 0x61, 0xf8, 0xb7, 0xd9, 0x39, 0xd0, 0x61, 0x43, 0x24, 0xad, 0x8e, 0xa1,
	0xc8, 0x4d, 0x6d, 0x61, 0x5a, 0xba, 0x1b, 0x3e, 0x98, 0xd7, 0x58, 0x9b, 0x1a, 0x17, 0xd6, 0x22,
	0x0e, 0x03, 0xad, 0x24, 0x41, 0xfc, 0x6d, 0x76, 0x16, 0xc3, 0x8e, 0x4c, 0xd2, 0xce, 0x3d, 0x41,
	0x1b, 0xf9, 0x17, 0xc9, 0x37, 0xcc, 0xea, 0xd3, 0x18, 0x9c, 0x7f, 0x81, 0x2c, 0xdb, 0xf0, 0xc3,
	0xe4, 0x1e, 0x64, 0x3e, 0xf1, 0x71, 0x2e, 0xc5, 0x0f, 0xd8, 0x85, 0xd4, 0x0e, 0xb0, 0x70, 0x4e,
	0xbd, 0x21, 0xe7, 0x44, 0xd6, 0xd4, 0x4e, 0x34, 0xce, 0x20, 0x3f, 0x29, 0xb1, 0x85, 0x66, 0xaf,
	0xff, 0xe1, 0x87, 0xbe, 0xc4, 0xe6, 0xc0, 0xdc, 0x43, 0x90, 0xb6, 0x48, 0x0a, 0x1f, 0x93, 0x00,
	0x5f, 0x65, 0x0b, 0x5d, 0x11, 0xf4, 0x23, 0x49, 0x69, 0x2e, 0xf5, 0xbe, 0x89, 0x02, 0xde, 0x87,
	0x91, 0x78, 0xec, 0x8a, 0x44, 0xaa, 0x9e, 0x4f, 0x61, 0xe7, 0x45, 0x76, 0xa6, 0x15, 0xfa, 0xbe,
	0x6c, 0x25, 0xb2, 0x4d, 0x0c, 0x28, 0x53, 0x2c, 0x60, 0xa1, 0x1d, 0xb1, 0x94, 0xed, 0x6c, 0x89,
	0x42, 0x10, 0xd8, 0x93, 0xf4, 0x4c, 0x67, 0xb9, 0x59, 0xd7, 0xc0, 0x80, 0x77, 0x06, 0xf2, 0x49,
	0xd2, 0x48, 0xc4, 0x21, 0x65, 0x39, 0x34, 0xd9, 0xe5, 0x91, 0x98, 0x16, 0x02, 0xa0, 0x66, 0x3c,
	0x02, 0xf8, 0x0a, 0x3b, 0x0f, 0x4e, 0xb3, 0x25, 0xa2, 0x2e, 0x74, 0x3d, 0xfc, 0x82, 0xad, 0xf8,
	0x77, 0x61, 0x29, 0x5e, 0x1f, 0xc2, 0x3b, 0xaf, 0xb1, 0xaa, 0xf0, 0xfd, 0x5d, 0x14, 0x3e, 0x62,
	0xaf, 0x29, 0xb3, 0xb6, 0x9b, 0xd1, 0xe1, 0xa4, 0x0a, 0xc1, 0x7f, 0x57, 0x5b, 0xbf, 0x44, 0xb9,
	0x55, 0x0e, 0xc9, 0x37, 0x69, 0xda, 0x44, 0x91, 0xbb, 0xbe, 0x08, 0x92, 0x89, 0x1d, 0x96, 0x19,
	0xab, 0x64, 0x1a, 0x8b, 0x7f, 0x8b, 0xdc, 0xd1, 0xe0, 0xb2, 0x92, 0x5b, 0x2e, 0xcd, 0xea, 0x85,
	0x51, 0x8e, 0x7b, 0x69, 0x98, 0xbb, 0x1a, 0x24, 0xe5, 0xdc, 0x20, 0xf9, 0x6d, 0x1a, 0x63, 0xc8,
	0x7d, 0x07, 0xbb, 0x7f, 0xa2, 0x92, 0x9c, 0x2d, 0x1e, 0xc8, 0x28, 0xf1, 0x7c, 0xef, 0x43, 0x63,
	0x93, 0x22, 0x87, 0xe3, 0xdf, 0xa6, 0x71, 0x67, 0xb2, 0x7c, 0x9a, 0x1a, 0x6f, 0x52, 0xd0, 0x21,
	0x7b, 0x64, 0x63, 0xe1, 0x65, 0x36, 0xd7, 0xd3, 0x9d, 0x68, 0x8d, 0xef, 0x44, 0x45, 0xc4, 0x43,
	0x83, 0x4b, 0x63, 0x10, 0xb4, 0x1a, 0x89, 0x48, 0xfa, 0xf1, 0xb1, 0x1d, 0x84, 0x54, 0x69, 0x07,
	0x51, 0x9d, 0x21, 0x6f, 0x2d, 0x8f, 0xf0, 0x56, 0xde, 0x60, 0x17, 0x52, 0x43, 0x3f, 0x0c, 0xfc,
	0xb0, 0xf5, 0x48, 0xf9, 0x52, 0x7e, 0x30, 0x58, 0x43, 0x83, 0x61, 0x82, 0x8d, 0xf8, 0xd7, 0x29,
	0xf0, 0x0c, 0x33, 0x3d, 0x85, 0xc1, 0xf9, 0x0d, 0xc3, 0x5d, 0xdf, 0x17, 0x90, 0x55, 0x4d, 0xb0,
	0x06, 0x38, 0x77, 0x2a, 0x9a, 0xa8, 0x4f, 0x23, 0xf3, 0x3a, 0x5b, 0x4a, 0x65, 0xba, 0x52, 0xf4,
	0x26, 0x8a, 0xfc, 0x81, 0xc5, 0x96, 0x52, 0x99, 0x48, 0x7d, 0x1a, 0xbf, 0xc2, 0x35, 0xdd, 0x63,
	0x5a, 0x9c, 0xa4, 0x5b, 0x14, 0x04, 0xd3, 0xea, 0x1f, 0xfe, 0xd7, 0xc3, 0x7e, 0x90, 0x64, 0xab,
	0xff, 0x14, 0xc5, 0x7f, 0x61, 0x31, 0xbb, 0xd9, 0x83, 0x61, 0xb8, 0x7b, 0xca, 0x38, 0x5c, 0x36,
	0xe3, 0xf0, 0x70, 0x24, 0x2d, 0x1f, 0x13, 0x49, 0x67, 0x72, 0x91, 0x74, 0xc8, 0xf7, 0x66, 0x51,
	0xc2, 0xb8, 0x48, 0x39, 0x67, 0x46, 0xca, 0x9f, 0x59, 0xec, 0x12, 0x98, 0x13, 0x83, 0xca, 0x50,
	0x5c, 0xbc, 0xcc, 0x2a, 0xfb, 0x7d, 0xcf, 0x6f, 0x3f, 0xcc, 0xda, 0xa4, 0x61, 0x5c, 0xa4, 0xc2,
	0xff, 0xd4, 0xba, 0x1a, 0x74, 0xbe, 0x64, 0x46, 0x53, 0xca, 0x9a, 0x2e, 0x9b, 0x03, 0x31, 0x6f,
	0xb8, 0x89, 0x21, 0x75, 0x66, 0x54, 0x48, 0x95, 0xec, 0x1c, 0xf8, 0x4b, 0xa6, 0x72, 0x1a, 0x57,
	0xc7, 0x2a, 0x7b, 0x4c, 0x8c, 0x51, 0x66, 0x2d, 0xe7, 0x62, 0xee, 0x8f, 0x2d, 0x0a, 0x0f, 0x27,
	0x91, 0xf3, 0x6a, 0xee, 0x78, 0x60, 0xe2, 0x2a, 0x64, 0x94, 0x9b, 0x96, 0xc7, 0x86, 0xbf, 0x99,
	0x5c, 0xf8, 0xf3, 0xd9, 0xe5, 0x82, 0x05, 0xb0, 0xc6, 0x7a, 0x0b, 0xf8, 0x7f, 0x1c, 0x43, 0x08,
	0xe4, 0xa0, 0x0d, 0x41, 0x10, 0xff, 0x0e, 0xab, 0x15, 0xec, 0x90, 0xf3, 0xfa, 0xb1, 0xb2, 0xd6,
	0xd2, 0x68, 0x4c, 0xc6, 0x98, 0xe4, 0x04, 0x3a, 0x24, 0x7f, 0x7f, 0xc8, 0xe8, 0x69, 0x14, 0xfa,
	0x94, 0x8c, 0xce, 0xff, 0x11, 0x0f, 0x68, 0x4c, 0x15, 0x74, 0x50, 0xfa, 0xb4, 0xba, 0xfd, 0x59,
	0x56, 0xd5, 0xd1, 0x28, 0xd6, 0xeb, 0x87, 0x14, 0x01, 0xd3, 0xaf, 0x11, 0x8c, 0x20, 0xed, 0x02,
	0x82, 0x1c, 0x8e, 0xff, 0x8f, 0xc5, 0x96, 0x9b, 0x22, 0xf0, 0xba, 0xc2, 0xff, 0x3f, 0x11, 0xa2,
	0xa0, 0x3e, 0xad, 0x2a, 0x1a, 0x22, 0xf1, 0x64, 0x32, 0x48, 0x93, 0xc5, 0x1c, 0xd6, 0x59, 0x65,
	0x76, 0x20, 0x65, 0x1b, 0xb7, 0x80, 0x34, 0x25, 0xc5, 0xab, 0x21, 0x7c, 0x16, 0xd0, 0xe6, 0xcd,
	0x80, 0xf6, 0x2b, 0x8b, 0x5d, 0xc6, 0xd5, 0x20, 0x36, 0xfe, 0x29, 0x45, 0xb4, 0xb7, 0x86, 0x23,
	0xda, 0x33, 0x86, 0x33, 0x17, 0x0d, 0x7d, 0xe2, 0x90, 0x86, 0x2b, 0xfa, 0xe0, 0x48, 0x06, 0x49,
	0x18, 0x69, 0xd3, 0x64, 0x08, 0x7e, 0x40, 0xe9, 0xac, 0xd1, 0xa4, 0x4f, 0x26, 0xe2, 0xfd, 0x89,
	0x45, 0xf9, 0xf1, 0x89, 0x04, 0x7d, 0x4a, 0x21, 0xaf, 0xcb, 0x9e, 0x29, 0xda, 0xe0, 0x93, 0x8c,
	0x79, 0x7f, 0xa0, 0xe6, 0xc5, 0x21, 0x79, 0xc7, 0x7a, 0xd1, 0x6b, 0x85, 0xa8, 0x37, 0xd1, 0x51,
	0x14, 0x69, 0xbe, 0xff, 0xcb, 0xc5, 0xfe, 0xdf, 0xa3, 0x00, 0x6c, 0xe8, 0xb2, 0xad, 0xcb, 0x26,
	0xaa, 0x92, 0xe3, 0x5a, 0x2a, 0x72, 0xfd, 0xb9, 0x0a, 0xb5, 0x06, 0xdb, 0xff, 0x7f, 0x81, 0xee,
	0xef, 0x2d, 0x56, 0x69, 0x76, 0xbd, 0x38, 0x06, 0x27, 0x28, 0x9e, 0xff, 0xbc, 0x9e, 0x4b, 0xd6,
	0xcf, 0xac, 0x3d, 0x5b, 0xd8, 0x08, 0xdb, 0xa1, 0x7a, 0x94, 0xf6, 0xa7, 0xa9, 0xfc, 0x55, 0xb6,
	0x00, 0x51, 0x69, 0x37, 0x0a, 0x71, 0x7f, 0xad, 0xac, 0x76, 0xc3, 0x33, 0x14, 0x28, 0x96, 0x40,
	0x24, 0xd2, 0x24, 0xa4, 0x79, 0x0e, 0x87, 0x9b, 0x2b, 0x61, 0xb7, 0xe7, 0xcb, 0x44, 0x9a, 0xab,
	0xe3, 0x3c, 0x92, 0x9f, 0x67, 0x0e, 0x7a, 0xb5, 0xef, 0x2b, 0x5d, 0x70, 0x99, 0xba, 0x49, 0x13,
	0x50, 0x1e, 0xeb, 0xdc, 0x64, 0x15, 0xd5, 0x50, 0xbd, 0xa9, 0xe2, 0x18, 0xae, 0xa5, 0x8a, 0xdc,
	0x94, 0x86, 0xbf, 0x40, 0xbc, 0x1f, 0x04, 0xd2, 0xe4, 0x52, 0xb0, 0x11, 0xdf, 0x20, 0x59, 0x05,
	0xaa, 0x1b, 0x6c, 0x5e, 0xf1, 0x51, 0x2b, 0xa9, 0x51, 0xa2, 0x34, 0x09, 0xff, 0x1c, 0x5b, 0xc6,
	0x56, 0xb4, 0x5a, 0xb2, 0x97, 0xec, 0x8c, 0xee, 0x0c, 0xbe, 0xcb, 0x96, 0xb1, 0x51, 0x93, 0x88,
	0xf4, 0x16, 0x6e, 0x69, 0xaa, 0x2d, 0x5c, 0x25, 0xd6, 0x95, 0xbd, 0x30, 0x3a, 0x4e, 0xec, 0x44,
	0xa2, 0x93, 0x89, 0x7d, 0x91, 0xa2, 0xf1, 0x1d, 0xa9, 0xd9, 0xb9, 0xe8, 0x90, 0x43, 0x92, 0x1b,
	0x14, 0x4c, 0x8f, 0xa3, 0x3b, 0x99, 0xf0, 0x2f, 0x51, 0x28, 0x50, 0x1c, 0xeb, 0x22, 0x20, 0x7b,
	0xe2, 0x21, 0xcd, 0xb3, 0xac, 0xaa, 0x7a, 0x04, 0x47, 0x2e, 0x8e, 0xa6, 0x14, 0xc1, 0xdf, 0x65,
	0xac, 0x99, 0xed, 0x2e, 0x15, 0x95, 0xb0, 0x59, 0xb9, 0x17, 0xea, 0x45, 0x2d, 0xfc, 0x05, 0x4c,
	0xdb, 0xd3, 0x7b, 0x82, 0xf0, 0x17, 0x72, 0xb3, 0xb9, 0x66, 0xd2, 0x91, 0xdd, 0xe1, 0xea, 0x0e,
	0x9b, 0x09, 0xb2, 0x0d, 0x7c, 0xfc, 0x8f, 0xc7, 0x03, 0xb8, 0x1c, 0x45, 0x1e, 0x15, 0x57, 0x41,
	0xce, 0x97, 0x8d, 0x8d, 0x5e, 0x5f, 0xef, 0x90, 0xe6, 0x76, 0x9d, 0x33, 0x3d, 0xdd, 0x3c, 0x29,
	0xaf, 0xb3, 0x6a, 0xb3, 0x13, 0x76, 0x29, 0x0a, 0xa7, 0x47, 0x94, 0x56, 0xe1, 0x66, 0x14, 0x8c,
	0xd5, 0x3d, 0xd0, 0x33, 0x0d, 0xf8, 0x26, 0x8a, 0x2f, 0xa7, 0x5b, 0x8a, 0x77, 0x15, 0x2b, 0xfe,
	0xe5, 0x74, 0x9b, 0x50, 0xa3, 0x9c, 0xdf, 0x62, 0x33, 0x20, 0x49, 0xf9, 0xff, 0x39, 0x43, 0x3b,
	0xad, 0x80, 0x8b, 0x04, 0x7a, 0xb3, 0xe9, 0x8e, 0x4c, 0xd6, 0x7d, 0x1f, 0x65, 0xc4, 0xc8, 0xf3,
	0xdd, 0xb4, 0xff, 0x73, 0x78, 0xe7, 0x1a, 0x9b, 0x43, 0x23, 0xea, 0x51, 0x6c, 0x1b, 0xac, 0xb1,
	0xc0, 0x55, 0xe5, 0xfc, 0x1a, 0x5b, 0x51, 0x9c, 0x1b, 0x5e, 0x70, 0xe8, 0x4b, 0x6a, 0xc0, 0xa8,
	0x51, 0xfc, 0x2e, 0x5b, 0x51, 0xb2, 0x8a, 0x94, 0x2f, 0xb2, 0x59, 0xe4, 0xa6, 0xda, 0x31, 0x2c,
	0x8c, 0x8a, 0xf9, 0x2d, 0x1a, 0x4c, 0x0d, 0x71, 0x74, 0x8a, 0xca, 0x8b, 0x74, 0x98, 0x02, 0xb6,
	0x7b, 0xd8, 0xe3, 0x6f, 0xd1, 0xfa, 0x8c, 0x8e, 0x22, 0x91, 0x19, 0x1e, 0xe6, 0x4c, 0xe1, 0x33,
	0xfc, 0xb3, 0xd4, 0x35, 0xb4, 0x8d, 0xb1, 0x37, 0xca, 0xd5, 0xf8, 0x0d, 0x0a, 0x6b, 0x5b, 0x61,
	0x24, 0xe3, 0xa4, 0x59, 0xef, 0x27, 0x7b, 0x91, 0x44, 0x67, 0x4b, 0x22, 0x99, 0x25, 0xb6, 0x0a,
	0xe2, 0x7f, 0xa8, 0x92, 0xf9, 0xe9, 0xc8, 0x4f, 0x34, 0x16, 0x73, 0x9b, 0x53, 0x65, 0x63, 0x5f,
	0x1d, 0xa6, 0xdd, 0x44, 0x76, 0xf5, 0xf6, 0x01, 0x8e, 0xc3, 0x14, 0xa1, 0xdd, 0x65, 0xc7, 0x0b,
	0x24, 0xc6, 0x06, 0xf1, 0xe4, 0x9e, 0x18, 0xc8, 0x88, 0xaf, 0x91, 0xbb, 0x14, 0xf1, 0x30, 0x7f,
	0x76, 0xd5, 0x7f, 0x3d, 0x1d, 0x6b, 0x98, 0x5f, 0x27, 0x4b, 0x63, 0x1d, 0xbc, 0x5d, 0x40, 0x55,
	0x60, 0x60, 0x18, 0xf4, 0x04, 0xf0, 0x3f, 0x57, 0xf3, 0xfd, 0x54, 0xd4, 0xce, 0x9b, 0xc5, 0x53,
	0xa4, 0xe7, 0x86, 0x26, 0x4f, 0xcd, 0x26, 0x7f, 0x94, 0x74, 0x85, 0xb1, 0x38, 0x11, 0x51, 0xb2,
	0x1d, 0xb4, 0xe5, 0x13, 0x15, 0x3e, 0x0c, 0x0c, 0x94, 0x43, 0x2a, 0x7f, 0x9b, 0x8e, 0xfe, 0xd5,
	0x79, 0x42, 0x86, 0xe1, 0x2f, 0xd0, 0xe9, 0x21, 0xb2, 0xdf, 0xf4, 0x0e, 0x41, 0x3d, 0x0f, 0x59,
	0x29, 0xf5, 0x10, 0xe0, 0xff, 0x69, 0xd1, 0xe1, 0xdf, 0x64, 0x32, 0xe7, 0x8d, 0x62, 0x2b, 0x9e,
	0x19, 0xd5, 0x8a, 0x4d, 0xef, 0x30, 0xdf, 0x86, 0x31, 0xdb, 0x8e, 0xc5, 0x9e, 0xb5, 0x72, 0x3d,
	0xeb, 0x7c, 0x95, 0x31, 0xca, 0x4d, 0x70, 0x13, 0x8f, 0xee, 0xf1, 0x5c, 0x19, 0x25, 0xcf, 0x4d,
	0xa9, 0x5c, 0xa3, 0x46, 0xb6, 0x29, 0xe5, 0xe9, 0xbd, 0xf2, 0x14, 0xe6, 0xab, 0xe4, 0xf5, 0xda,
	0x3b, 0xd4, 0x54, 0x32, 0xda, 0x36, 0x7f, 0xaa, 0x7c, 0x7e, 0x1a, 0x62, 0xe7, 0x56, 0xd1, 0x42,
	0x9f, 0x1d, 0xa5, 0x71, 0xca, 0xe5, 0x29, 0xd8, 0x89, 0x5f, 0x20, 0xaf, 0xbd, 0x23, 0x13, 0xbc,
	0xbe, 0xe8, 0xfb, 0x78, 0xef, 0x50, 0xef, 0xe9, 0x16, 0xd0, 0xce, 0xcb, 0xac, 0xda, 0x8f, 0x25,
	0xdd, 0x4d, 0x1c, 0x71, 0x66, 0x03, 0x65, 0x6e, 0x46, 0xc1, 0x23, 0xda, 0x62, 0xa5, 0xe0, 0x03,
	0x8c, 0xb6, 0x83, 0x64, 0x3d, 0x49, 0x22, 0xe7, 0x35, 0x56, 0x11, 0x49, 0x12, 0x35, 0xc2, 0x88,
	0x36, 0x0a, 0x27, 0x5c, 0xa6, 0x4c, 0x09, 0x31, 0x8b, 0xa3, 0x30, 0x16, 0x92, 0x02, 0x25, 0x95,
	0xc5, 0x99, 0x48, 0xfe, 0xcf, 0x16, 0x6d, 0xc1, 0x0e, 0x0b, 0x3d, 0xc9, 0x91, 0x74, 0x4e, 0xc3,
	0xd2, 0xb4, 0x1a, 0x5e, 0x66, 0x95, 0x56, 0x5f, 0x59, 0x47, 0xa5, 0xd7, 0x1a, 0x86, 0x6e, 0x08,
	0x23, 0xef, 0x90, 0x0a, 0x55, 0x37, 0xa4, 0x08, 0xe3, 0x80, 0x69, 0x36, 0x77, 0xc0, 0x34, 0x64,
	0xc1, 0x46, 0x12, 0x3d, 0x65, 0x0b, 0x56, 0x8f, 0xb7, 0xa0, 0x16, 0xfa, 0xe9, 0x5b, 0xb0, 0x3a,
	0xc9, 0x82, 0xd5, 0x69, 0x2c, 0xf8, 0x43, 0x7d, 0x22, 0xdd, 0x6e, 0x83, 0x2c, 0x4c, 0xce, 0x4e,
	0x65, 0x3c, 0xce, 0x16, 0xc9, 0x4e, 0x28, 0x2f, 0x56, 0x27, 0x4c, 0x39, 0x9c, 0xa1, 0x44, 0x39,
	0xa7, 0xc4, 0x2b, 0x6a, 0x42, 0x4f, 0xc2, 0x48, 0xee, 0x86, 0xb1, 0x87, 0xcb, 0xe4, 0x45, 0x66,
	0xe9, 0xf1, 0x6f, 0x3d, 0x01, 0x48, 0xaf, 0x0b, 0xad, 0x01, 0xff, 0xa8, 0xcc, 0x2a, 0x8d, 0x4e,
	0xd8, 0xc3, 0xe3, 0xdb, 0xe2, 0x64, 0xbd, 0xce, 0x16, 0x60, 0x02, 0x8d, 0x3c, 0x5a, 0x2c, 0x93,
	0x71, 0x9f, 0x2f, 0xb4, 0x00, 0x6a, 0x37, 0xdd, 0x8c, 0xcc, 0x35, 0xeb, 0x38, 0x2f, 0xb2, 0x33,
	0x91, 0x8c, 0x25, 0xde, 0xa0, 0x6b, 0x24, 0xa2, 0xdb, 0x43, 0x85, 0xcb, 0x6e, 0x01, 0x0b, 0x09,
	0x9c, 0x17, 0x03, 0x78, 0xcf, 0xeb, 0x7a, 0x14, 0x3e, 0x2a, 0xae, 0x89, 0x72, 0x56, 0x99, 0xad,
	0xf6, 0x8d, 0xf6, 0xfa, 0x51, 0xb0, 0xd1, 0x1f, 0xdc, 0x0f, 0x55, 0x0f, 0x0c, 0xe1, 0xf5, 0xf4,
	0x89, 0xac, 0xe6, 0xb2, 0xe9, 0x13, 0xf9, 0xbc, 0xc0, 0x96, 0x7a, 0xfd, 0xa8, 0xd5, 0x11, 0xb1,
	0xdc, 0x8d, 0xbc, 0x96, 0xde, 0x49, 0xca, 0x23, 0xc1, 0x07, 0x70, 0xfa, 0x4a, 0x0f, 0x21, 0xcb,
	0x6e, 0x86, 0x30, 0x6f, 0x11, 0x56, 0xe9, 0xc6, 0x9e, 0x71, 0x8b, 0xf0, 0xb1, 0xdc, 0xaf, 0x77,
	0x44, 0x74, 0x08, 0x89, 0x06, 0x5d, 0xb9, 0x31, 0x51, 0xa0, 0xdb, 0x63, 0xb9, 0xff, 0x20, 0x6a,
	0xa7, 0xf7, 0x6d, 0x52, 0x98, 0x47, 0x8c, 0xdd, 0x15, 0xf1, 0x46, 0x7f, 0x30, 0xb2, 0x3b, 0x56,
	0xd8, 0x5c, 0x07, 0x4b, 0xf5, 0x35, 0x74, 0x82, 0x8a, 0x32, 0xcb, 0x93, 0x65, 0xce, 0x14, 0x64,
	0xfe, 0x95, 0xda, 0xff, 0xc1, 0x7e, 0xa4, 0xbc, 0x75, 0x1b, 0x0f, 0xe7, 0xbf, 0xc8, 0x16, 0x5a,
	0xc8, 0x60, 0x17, 0x2f, 0xdb, 0x59, 0xc5, 0x84, 0x3d, 0xd3, 0xd4, 0x35, 0x09, 0x61, 0xc9, 0x7a,
	0xe8, 0x1d, 0xe0, 0xea, 0x44, 0xdd, 0xb4, 0x30, 0xd6, 0x91, 0xda, 0xd7, 0xdc, 0x94, 0xc6, 0x59,
	0x63, 0xd5, 0x6e, 0x18, 0x24, 0x1d, 0xbc, 0x85, 0x57, 0x9e, 0x20, 0x25, 0x23, 0xe3, 0xef, 0x52,
	0xbe, 0x80, 0x3a, 0x83, 0x09, 0x8a, 0xa6, 0xc2, 0xcb, 0x6d, 0x9e, 0x0c, 0x12, 0xea, 0x62, 0xbd,
	0x1e, 0xc8, 0x50, 0xbc, 0xc9, 0xaa, 0x1b, 0xfd, 0x81, 0xba, 0x5b, 0x33, 0xec, 0xa5, 0xd6, 0x48,
	0x2f, 0x1d, 0xe5, 0x83, 0xa5, 0xd1, 0x3e, 0xc8, 0x7f, 0xa4, 0x92, 0x95, 0xb1, 0x3a, 0xe6, 0x5f,
	0x15, 0x64, 0x47, 0x58, 0x37, 0xd8, 0x5c, 0x80, 0xb7, 0x6f, 0x26, 0xde, 0xcc, 0x51, 0x34, 0xce,
	0x75, 0x36, 0xb7, 0xdf, 0x1f, 0x44, 0xea, 0xc6, 0x6a, 0x6e, 0xcd, 0x92, 0xb6, 0xcf, 0x55, 0x24,
	0xfc, 0x0b, 0x94, 0x86, 0xba, 0x92, 0xfa, 0x0b, 0xba, 0xfb, 0x8e, 0x77, 0x80, 0xb7, 0xd2, 0x43,
	0x70, 0x86, 0xf4, 0x5a, 0x9c, 0x06, 0xf9, 0x1f, 0x29, 0xef, 0x98, 0xbe, 0x0a, 0xde, 0x54, 0xf3,
	0x0e, 0x12, 0xe3, 0xbd, 0x0b, 0x42, 0x38, 0x68, 0x54, 0xd2, 0xa1, 0xaf, 0xde, 0xaa, 0x8c, 0x22,
	0x6b, 0xf1, 0xcc, 0xf1, 0x2d, 0xe6, 0x6f, 0xd2, 0xa6, 0x60, 0x51, 0xa3, 0x7a, 0x18, 0x1c, 0x78,
	0x51, 0x77, 0x42, 0x5b, 0xd4, 0xbe, 0xcb, 0x7b, 0x5e, 0xaf, 0x79, 0xfb, 0x49, 0xcf, 0x8b, 0xe4,
	0xa6, 0x48, 0x24, 0xdf, 0xa3, 0xbc, 0x29, 0x8f, 0x85, 0x84, 0xb5, 0x25, 0x22, 0xbc, 0xb3, 0x9f,
	0xae, 0xab, 0x0d, 0x0c, 0x94, 0x67, 0xd4, 0x2a, 0x44, 0x1b, 0x18, 0x7e, 0x9d, 0x76, 0x20, 0x80,
	0x2b, 0x76, 0x03, 0x26, 0x63, 0x2b, 0x6c, 0xae, 0x45, 0xc7, 0x8f, 0x6a, 0x01, 0x42, 0x10, 0x7f,
	0x83, 0x92, 0x20, 0x20, 0xc6, 0x5b, 0xa3, 0x8a, 0xfc, 0x18, 0x1d, 0xf8, 0xbf, 0xa8, 0x94, 0x6f,
	0x3d, 0x48, 0xbc, 0xf5, 0x76, 0xdb, 0x6b, 0x25, 0xb8, 0x7e, 0x7b, 0x81, 0x2d, 0xd1, 0xa6, 0x94,
	0x2f, 0x06, 0x18, 0xa2, 0x48, 0x58, 0x1e, 0x49, 0x54, 0x6d, 0x31, 0x48, 0xa9, 0x4a, 0x9a, 0xca,
	0x40, 0x3a, 0x36, 0x2b, 0x8b, 0x43, 0xdd, 0x5f, 0xf0, 0x17, 0x1f, 0x01, 0x20, 0x89, 0xd0, 0x79,
	0x7c, 0x0a, 0x63, 0xd8, 0x85, 0x21, 0x0a, 0x65, 0xea, 0x82, 0xb4, 0x86, 0x61, 0x44, 0xfa, 0x22,
	0x4e, 0x76, 0xc5, 0x00, 0x2d, 0xa6, 0xde, 0x2e, 0x19, 0x28, 0xfe, 0x9e, 0xea, 0x1e, 0x19, 0x79,
	0x07, 0x9e, 0x6c, 0xab, 0x8b, 0xb8, 0x7a, 0xc1, 0x68, 0xe5, 0x37, 0x19, 0xbc, 0x36, 0x86, 0x0b,
	0x75, 0x53, 0x93, 0x20, 0xbc, 0x30, 0xd5, 0x09, 0x03, 0x3d, 0xa3, 0x13, 0xc0, 0xbf, 0xae, 0xce,
	0x8e, 0xfb, 0x01, 0x4e, 0x49, 0xb1, 0xf1, 0x98, 0x0b, 0x2c, 0x8a, 0xff, 0xa1, 0x2a, 0x1e, 0x7c,
	0xa8, 0xae, 0x24, 0x00, 0x6f, 0x3e, 0x07, 0x7a, 0xa5, 0x07, 0x7f, 0xf5, 0xe1, 0x77, 0xa3, 0x13,
	0x3e, 0xce, 0xee, 0xfd, 0xc5, 0x9d, 0xf0, 0xb1, 0x71, 0x86, 0x9f, 0xc2, 0xa0, 0xa8, 0x72, 0x6c,
	0xa5, 0xa8, 0x72, 0xe1, 0x57, 0xd9, 0x7c, 0xb3, 0x05, 0xfe, 0x8a, 0x97, 0x10, 0x1f, 0xc9, 0x81,
	0xaa, 0x09, 0x7f, 0x41, 0x95, 0x23, 0x23, 0x69, 0x22, 0x80, 0xdf, 0x52, 0x82, 0x07, 0x41, 0xab,
	0x4e, 0x35, 0x5f, 0x62, 0x73, 0xc4, 0x43, 0x85, 0xe6, 0x65, 0x23, 0x41, 0xa6, 0x02, 0x57, 0x11,
	0xf0, 0xb7, 0xd8, 0xd9, 0xf5, 0x24, 0x11, 0xad, 0x4e, 0x57, 0x06, 0x49, 0x73, 0xdc, 0xe4, 0x12,
	0xd0, 0x6d, 0x2f, 0x35, 0x6a, 0x09, 0xe2, 0xff, 0x6d, 0xb1, 0xea, 0xed, 0xae, 0xf0, 0xfc, 0x71,
	0xb5, 0x62, 0x19, 0xb4, 0x55, 0xad, 0xaa, 0xab, 0x20, 0x7c, 0x21, 0xe3, 0x25, 0x7e, 0xda, 0x13,
	0x08, 0xe0, 0xed, 0xd7, 0x30, 0x48, 0xa4, 0x5a, 0x1f, 0x54, 0x5d, 0x0d, 0xa2, 0x11, 0xf5, 0x8c,
	0x4a, 0x07, 0xd9, 0x29, 0x8c, 0xa9, 0x41, 0x70, 0x24, 0x7c, 0x8f, 0x8a, 0xe7, 0xb0, 0xd8, 0x44,
	0x39, 0x6f, 0x31, 0x26, 0xd2, 0xe6, 0xd5, 0xe6, 0xd1, 0x1a, 0x46, 0xd6, 0x58, 0x68, 0xba, 0x6b,
	0x10, 0x1b, 0x57, 0x3b, 0x2a, 0xe6, 0xd5, 0x0e, 0xfe, 0xaf, 0x90, 0xcd, 0xe1, 0x83, 0xb1, 0xf1,
	0x8d, 0x4f, 0x1b, 0x59, 0x32, 0x1b, 0x99, 0x99, 0xa4, 0x9c, 0x33, 0x49, 0x26, 0x69, 0x26, 0x77,
	0x89, 0xe4, 0xe3, 0x35, 0xfd, 0x45, 0x76, 0xa6, 0x23, 0x8e, 0xe4, 0xba, 0xd9, 0x7c, 0xc8, 0x0d,
	0x0a, 0x58, 0xfe, 0x1e, 0xbb, 0x88, 0xee, 0x93, 0x6f, 0x12, 0xce, 0xbf, 0xb7, 0xd8, 0x02, 0x3d,
	0x8d, 0xdb, 0x36, 0xae, 0xee, 0x19, 0xe6, 0x2b, 0xd4, 0x71, 0x4d, 0x6a, 0xfe, 0x7d, 0x8b, 0x02,
	0x1d, 0x16, 0x3f, 0xe8, 0xa9, 0xf9, 0x74, 0xe4, 0x6e, 0x67, 0x3c, 0xd5, 0x0e, 0x4b, 0xec, 0xdc,
	0x64, 0xa5, 0x90, 0xd2, 0xc4, 0xe1, 0x95, 0x34, 0x8a, 0x69, 0x66, 0xd5, 0x4a, 0x61, 0x8f, 0xef,
	0xd0, 0xd5, 0x4a, 0xa5, 0xc1, 0x90, 0x6c, 0x62, 0x57, 0x9a, 0x9a, 0xdd, 0xb7, 0x18, 0x53, 0x0f,
	0xd1, 0xd4, 0x9d, 0x52, 0x7c, 0x8a, 0x80, 0xf7, 0xf4, 0xf5, 0x1d, 0x9d, 0x0c, 0xe3, 0xdc, 0x64,
	0x33, 0x5e, 0x70, 0x10, 0x0e, 0x1f, 0x76, 0x13, 0x0f, 0xb2, 0x1d, 0xed, 0x1b, 0x02, 0x1d, 0xff,
	0x8b, 0x32, 0xb3, 0x8b, 0x45, 0xa7, 0x7a, 0x73, 0x54, 0x63, 0xf3, 0x91, 0xec, 0x8a, 0xe8, 0x51,
	0xac, 0x2f, 0x0f, 0x2b, 0x10, 0x0c, 0xe0, 0x1f, 0x29, 0x27, 0x2b, 0xf9, 0x47, 0xc6, 0xcd, 0xf1,
	0xd9, 0xdc, 0xcd, 0x71, 0x3a, 0x4a, 0x55, 0xb1, 0xb8, 0xe2, 0x12, 0x00, 0x2e, 0x17, 0xd2, 0x8b,
	0x3b, 0x8c, 0xd3, 0x94, 0x1c, 0x9b, 0x28, 0x08, 0x9f, 0x5e, 0x2b, 0x0c, 0xd4, 0x80, 0xc1, 0xff,
	0xc0, 0x0b, 0xdf, 0x1a, 0xe9, 0x1b, 0x79, 0x08, 0x38, 0x6b, 0xec, 0xbc, 0x17, 0xd3, 0xe3, 0xb7,
	0x86, 0x0c, 0xda, 0x3b, 0x52, 0xed, 0xff, 0x30, 0x14, 0x38, 0xb2, 0xcc, 0xf9, 0x12, 0xbb, 0xe8,
	0xc5, 0x77, 0x64, 0x32, 0xa2, 0xda, 0x02, 0x56, 0x1b, 0x57, 0xec, 0xdc, 0x64, 0x8e, 0x17, 0x03,
	0x86, 0xca, 0x54, 0xa5, 0x45, 0xac, 0x34, 0xa2, 0x24, 0x7f, 0xcf, 0x7c, 0xa9, 0x78, 0xcf, 0xbc,
	0xcb, 0x16, 0xf0, 0x95, 0xdd, 0xae, 0x8c, 0xe2, 0x70, 0xe2, 0x53, 0x40, 0xbc, 0xd5, 0xae, 0xa2,
	0x26, 0x01, 0x99, 0x39, 0xca, 0xa6, 0x39, 0x26, 0xbc, 0xbc, 0xe1, 0x3f, 0xd5, 0x5b, 0x96, 0xa8,
	0x21, 0xe4, 0x34, 0x38, 0x36, 0x5f, 0xcf, 0x3f, 0x17, 0x9c, 0xec, 0x61, 0xe9, 0x53, 0xc2, 0x1b,
	0x6c, 0x39, 0x35, 0x11, 0x35, 0x36, 0xcd, 0x53, 0x87, 0x0b, 0x9c, 0xd7, 0x8a, 0x0f, 0x0c, 0x73,
	0x57, 0xe8, 0x0c, 0x23, 0x98, 0xef, 0x0e, 0x37, 0x99, 0x8d, 0x1b, 0xb2, 0xa4, 0xee, 0x7a, 0xaf,
	0xe7, 0x0f, 0x26, 0xbd, 0x6f, 0xd2, 0xae, 0x5a, 0xca, 0xb9, 0x2a, 0xff, 0x01, 0xbe, 0x1a, 0xac,
	0xe7, 0xd9, 0xa8, 0x80, 0x68, 0x30, 0x4a, 0xe1, 0xc2, 0xbb, 0xba, 0xd2, 0xd0, 0xbb, 0xba, 0xec,
	0xa8, 0xb2, 0x3c, 0xe5, 0x51, 0x25, 0x64, 0x6a, 0x46, 0x4b, 0x36, 0xa5, 0x2f, 0x93, 0xb1, 0x4f,
	0xb5, 0xf8, 0xef, 0x50, 0xb4, 0x9b, 0x8a, 0xf8, 0x14, 0xe7, 0xa6, 0xe9, 0xa5, 0x4c, 0xe2, 0x5f,
	0xef, 0x88, 0x64, 0x92, 0xe7, 0xd1, 0xfb, 0xd6, 0x92, 0xf9, 0xbe, 0x75, 0xe8, 0x29, 0x22, 0xdf,
	0x53, 0x97, 0x32, 0x0d, 0x96, 0x69, 0x55, 0xcb, 0xac, 0x7a, 0xa2, 0x23, 0xa9, 0x3d, 0x56, 0x69,
	0x75, 0x44, 0xa2, 0x0f, 0xc6, 0xc7, 0x76, 0x98, 0xd2, 0xa7, 0x94, 0xbd, 0x32, 0x54, 0xd4, 0x18,
	0x5d, 0xca, 0x19, 0x35, 0xa6, 0x80, 0x5f, 0x51, 0x57, 0x75, 0x49, 0xd7, 0x07, 0xc1, 0x3d, 0x2f,
	0x90, 0x3b, 0xf1, 0xa1, 0xf3, 0x42, 0xf6, 0x56, 0x31, 0xb7, 0x9a, 0xd4, 0x2a, 0x50, 0x4b, 0xdf,
	0x56, 0x77, 0x22, 0x55, 0x6d, 0x0a, 0x59, 0xb9, 0xea, 0xe5, 0x49, 0xd5, 0xb7, 0xd4, 0x19, 0x03,
	0x55, 0x77, 0x55, 0x34, 0x3d, 0xb9, 0x53, 0x0f, 0x72, 0x23, 0xf9, 0xd4, 0x7c, 0x4e, 0xe3, 0xcb,
	0xf7, 0x72, 0xf6, 0x73, 0x65, 0x2b, 0xec, 0x76, 0x65, 0xd0, 0x3e, 0x5d, 0x18, 0xe1, 0x5f, 0xc9,
	0x0d, 0xce, 0x06, 0x4e, 0x0f, 0xd7, 0xd4, 0x7c, 0x37, 0xf4, 0x5c, 0x33, 0x9b, 0x33, 0xd5, 0x4c,
	0xf7, 0x52, 0xde, 0x95, 0xd5, 0xfa, 0x67, 0xe4, 0xa8, 0x7a, 0x27, 0xef, 0xa2, 0x40, 0x7a, 0x83,
	0xcd, 0x11, 0xc7, 0x89, 0x92, 0x14, 0x0d, 0xbf, 0x93, 0x1b, 0xc3, 0x0d, 0x29, 0xa2, 0x56, 0xc7,
	0x98, 0xf7, 0xac, 0xb1, 0xdf, 0x5d, 0x28, 0xcc, 0xaa, 0xbc, 0x9e, 0x1b, 0xdf, 0x8a, 0xd1, 0xcd,
	0xa2, 0xf5, 0x46, 0x2b, 0x93, 0xda, 0x6d, 0x4b, 0x5d, 0x44, 0xd7, 0x41, 0x42, 0xf8, 0xc3, 0xf1,
	0xb1, 0x3c, 0xc5, 0xe7, 0x05, 0xbe, 0x47, 0xc7, 0xbe, 0x45, 0x3e, 0xbb, 0x22, 0x36, 0x9d, 0xc3,
	0x9a, 0xf6, 0x4e, 0x86, 0xd1, 0x8c, 0xd2, 0x34, 0xcd, 0xe8, 0xd2, 0x9d, 0xaa, 0xa2, 0xf8, 0xed,
	0xc3, 0x20, 0x8c, 0xe4, 0x69, 0x14, 0x78, 0x96, 0x55, 0xf5, 0x13, 0x7f, 0xbd, 0xab, 0x99, 0x21,
	0xf8, 0x7b, 0x39, 0xdf, 0x45, 0x51, 0x38, 0x05, 0x7e, 0x95, 0x2d, 0x8a, 0x5e, 0xcf, 0xf7, 0x5a,
	0xc8, 0x72, 0x1a, 0x07, 0xce, 0xd1, 0xf3, 0x57, 0xd4, 0xf5, 0x6b, 0xdd, 0xa5, 0xe9, 0xfc, 0x3f,
	0xce, 0x1b, 0x7f, 0x2f, 0x17, 0x46, 0x8c, 0x0a, 0x93, 0xe2, 0x1c, 0xf6, 0x61, 0xeb, 0x28, 0xdb,
	0xf4, 0x20, 0xe8, 0x34, 0x83, 0xf8, 0x30, 0xd7, 0xed, 0x99, 0xfc, 0x75, 0xdf, 0x87, 0x68, 0x41,
	0x5a, 0xa6, 0x9f, 0x0f, 0x50, 0xe0, 0x69, 0x26, 0x9b, 0x03, 0x5a, 0x13, 0x64, 0x29, 0xc7, 0x27,
	0x24, 0x47, 0xe4, 0x7a, 0x36, 0x95, 0xf3, 0x34, 0xe7, 0xcd, 0x9b, 0xb9, 0x21, 0x77, 0xac, 0x08,
	0xde, 0xa7, 0xd3, 0x28, 0xed, 0x6c, 0xc7, 0x7d, 0x3d, 0xe1, 0x69, 0x65, 0x79, 0xbf, 0xab, 0xde,
	0x1e, 0x4c, 0x29, 0xf6, 0x14, 0x86, 0x78, 0x39, 0xd7, 0xb0, 0xe3, 0x3e, 0xe9, 0x50, 0x50, 0xe8,
	0xd8, 0x2f, 0x40, 0x9c, 0x42, 0xa1, 0x47, 0xac, 0x8a, 0xaf, 0xd9, 0x27, 0x7e, 0x22, 0x67, 0xd4,
	0x4d, 0x92, 0xdc, 0x03, 0xd2, 0x72, 0xf1, 0x01, 0xe9, 0xc8, 0x0f, 0xe4, 0xf0, 0x8f, 0x2c, 0x36,
	0xdf, 0x0b, 0xe3, 0x89, 0x8b, 0x2a, 0x87, 0xcd, 0xf4, 0xc2, 0xf8, 0x1b, 0x28, 0xcb, 0x72, 0xf1,
	0xbf, 0xc2, 0x7d, 0x80, 0x62, 0x08, 0xf7, 0x01, 0x3e, 0xff, 0xf4, 0xa2, 0x6f, 0xa0, 0x00, 0xcb,
	0xc5, 0xff, 0x0a, 0xf7, 0x01, 0x2e, 0xa4, 0x08, 0xf7, 0x01, 0xbe, 0xe2, 0xf4, 0x82, 0xf6, 0xfb,
	0x62, 0xa0, 0x16, 0x52, 0x1a, 0xe4, 0x5f, 0xa3, 0x84, 0xa2, 0x31, 0x08, 0xcc, 0xaf, 0x00, 0x5c,
	0x61, 0x2c, 0x91, 0xdd, 0x9e, 0x2f, 0x92, 0x6c, 0x6a, 0x32, 0x30, 0xd9, 0x89, 0x6d, 0xc9, 0x3c,
	0xde, 0x15, 0x94, 0x54, 0x14, 0x78, 0x19, 0x5f, 0x0e, 0xb0, 0x72, 0x5f, 0x0e, 0x38, 0x9d, 0xeb,
	0x2c, 0x6b, 0x75, 0x91, 0xfb, 0xa6, 0x48, 0xc4, 0x78, 0x09, 0xfc, 0xbb, 0x34, 0x55, 0xe6, 0xc9,
	0x5f, 0x61, 0x95, 0x7d, 0x11, 0xe3, 0x7f, 0x15, 0xa8, 0x8d, 0xfd, 0xe8, 0xd4, 0x0f, 0xdc, 0x94,
	0xc8, 0xb9, 0x8e, 0x1d, 0x86, 0xef, 0x6c, 0x4b, 0xc5, 0x5d, 0x2c, 0xd5, 0x93, 0xae, 0xa6, 0xe0,
	0x6f, 0xaa, 0x1d, 0xf5, 0x41, 0xd0, 0xd4, 0xb7, 0x75, 0xd2, 0x17, 0xba, 0x63, 0x24, 0xd1, 0xb3,
	0xdd, 0xd7, 0xd9, 0x82, 0xae, 0xb8, 0x1b, 0xc6, 0xce, 0xe7, 0x73, 0xf5, 0x46, 0x48, 0xa4, 0x5a,
	0x6f, 0xa8, 0x43, 0x86, 0x41, 0xd0, 0xdc, 0x09, 0x8f, 0xe4, 0xf4, 0xd5, 0x9e, 0xc9, 0xaa, 0xb5,
	0xbd, 0x83, 0x81, 0x2b, 0x5b, 0x47, 0x3b, 0xf1, 0xa1, 0x7a, 0x68, 0x94, 0xed, 0x03, 0xd1, 0x23,
	0x5e, 0xbd, 0xe3, 0x74, 0x23, 0xeb, 0xe1, 0x7b, 0x52, 0x1c, 0xc9, 0x89, 0xdf, 0x8c, 0xe0, 0xef,
	0xb0, 0xd9, 0x6e, 0xd8, 0x8f, 0xd1, 0x05, 0xf0, 0x4f, 0x4a, 0xa1, 0x41, 0x5c, 0xdf, 0xc2, 0x5f,
	0xdc, 0x99, 0x54, 0x17, 0x41, 0x53, 0x84, 0x3e, 0x8f, 0xdf, 0x01, 0x04, 0xb9, 0xd4, 0xdd, 0xd0,
	0x97, 0xfc, 0xae, 0xba, 0x2e, 0x92, 0x47, 0x9f, 0x62, 0xb6, 0xe7, 0x75, 0x75, 0x1f, 0x01, 0x39,
	0xdd, 0x97, 0x8f, 0xf1, 0x8f, 0xf3, 0xb2, 0x52, 0x0a, 0x17, 0x9b, 0x56, 0xf1, 0x1d, 0x2e, 0x16,
	0xb9, 0x19, 0x05, 0x7f, 0x89, 0x5e, 0x09, 0x11, 0x93, 0xbb, 0x5e, 0x52, 0x6c, 0x6e, 0x39, 0x6d,
	0x6e, 0x9e, 0xf4, 0xb6, 0x98, 0x44, 0x6a, 0xd3, 0x7b, 0x27, 0x22, 0xdd, 0x08, 0xbb, 0xfb, 0x80,
	0xc9, 0x94, 0x7d, 0x70, 0x24, 0x23, 0xfe, 0x01, 0x9b, 0x39, 0xf0, 0x62, 0xcc, 0x22, 0xe1, 0x37,
	0xeb, 0x00, 0x82, 0x0a, 0xc3, 0xb8, 0x34, 0x34, 0x8c, 0x2f, 0xb3, 0x8a, 0xef, 0x1d, 0x98, 0xcf,
	0xc2, 0x52, 0x98, 0xaf, 0xa9, 0xc5, 0xb3, 0x17, 0x77, 0x9a, 0x0d, 0x2f, 0xd9, 0x0c, 0x1f, 0x07,
	0xc0, 0x0f, 0x38, 0xef, 0x86, 0x41, 0x76, 0x3e, 0x60, 0x60, 0xf8, 0x6d, 0x95, 0x8c, 0x9b, 0x75,
	0x4e, 0xd1, 0x2b, 0x8e, 0x29, 0x3a, 0x11, 0x41, 0xfb, 0x61, 0x4f, 0xbb, 0x02, 0xe2, 0xe8, 0x00,
	0x10, 0xfe, 0xf2, 0x75, 0x35, 0x37, 0xe4, 0xd1, 0xce, 0x2a, 0xab, 0x80, 0x5a, 0x46, 0x07, 0x9e,
	0x31, 0x72, 0x31, 0x2f, 0xee, 0xb8, 0x69, 0x79, 0xba, 0xb6, 0x06, 0x16, 0xbb, 0x7d, 0xdf, 0xbf,
	0x1b, 0x86, 0x8f, 0x0a, 0x16, 0x2d, 0x6b, 0x8b, 0xf2, 0x23, 0x95, 0x7b, 0x4f, 0x43, 0x7c, 0x9a,
	0x3b, 0xc9, 0xe3, 0x9e, 0x15, 0x7e, 0xc5, 0xb0, 0xec, 0x7d, 0xf9, 0x18, 0x1b, 0x79, 0x8d, 0xcd,
	0x07, 0xf4, 0x57, 0x99, 0xb6, 0xd8, 0x46, 0x5d, 0xcc, 0x7f, 0x65, 0xb1, 0xa5, 0x1d, 0x11, 0x84,
	0xd1, 0x46, 0xdf, 0xf3, 0xdb, 0xea, 0xb3, 0x02, 0xd9, 0x43, 0x65, 0xf8, 0x3b, 0xe1, 0x8d, 0x81,
	0x9e, 0x8c, 0x48, 0x23, 0x73, 0x32, 0xfa, 0xa6, 0x9a, 0xd9, 0xf0, 0x3f, 0xee, 0xca, 0xc1, 0x1c,
	0x9d, 0x60, 0xc3, 0xd4, 0x46, 0x9e, 0x89, 0xa2, 0x8d, 0xe0, 0x78, 0xcb, 0x0b, 0xbc, 0xb8, 0x83,
	0xaa, 0xa8, 0xd9, 0xa8, 0x80, 0x75, 0x38, 0x5b, 0x44, 0xe1, 0xb7, 0xd5, 0x96, 0xf3, 0x3c, 0x9a,
	0x35, 0x87, 0xe3, 0x5f, 0x64, 0x0c, 0x9b, 0xd4, 0x48, 0x20, 0x19, 0x30, 0xb4, 0xb7, 0xf2, 0xda,
	0x17, 0x1f, 0xe5, 0xff, 0x97, 0xda, 0x0c, 0xc6, 0xca, 0xf8, 0x34, 0x1f, 0xa2, 0xf4, 0x2d, 0x25,
	0xd1, 0x0b, 0x0e, 0x0d, 0xa7, 0x31, 0x2e, 0x42, 0xe4, 0xcc, 0xe7, 0xe6, 0x88, 0x9d, 0x35, 0x58,
	0x33, 0x48, 0xe5, 0x6e, 0x43, 0xcb, 0x96, 0x4c, 0x4b, 0x37, 0x23, 0x73, 0xbe, 0xc0, 0x2a, 0xdf,
	0xe9, 0x07, 0xe6, 0x7e, 0xd6, 0xe8, 0x2a, 0x29, 0x15, 0x9e, 0x19, 0x3e, 0x0e, 0x8c, 0x6f, 0x35,
	0x69, 0x30, 0xbf, 0x49, 0x38, 0x5b, 0xdc, 0x24, 0x6c, 0xa8, 0x6b, 0x7d, 0xd8, 0xde, 0x86, 0x38,
	0x92, 0xeb, 0xbe, 0x0f, 0x13, 0xcc, 0xc7, 0x69, 0x32, 0xff, 0x33, 0x4b, 0x85, 0x66, 0xe4, 0x4a,
	0x97, 0x63, 0x1e, 0x04, 0xf2, 0x44, 0x7e, 0x35, 0xe6, 0x85, 0x43, 0xea, 0x6f, 0x33, 0x23, 0xfc,
	0x6d, 0x76, 0xbc, 0xbf, 0xcd, 0x0d, 0xf9, 0x1b, 0xff, 0x63, 0x7d, 0xb1, 0xb0, 0xa0, 0xa5, 0xda,
	0xea, 0xb7, 0xa6, 0xda, 0xea, 0x7f, 0x8b, 0x2d, 0xa0, 0xc6, 0xae, 0x39, 0x94, 0xc7, 0x9a, 0xc9,
	0xa4, 0x1d, 0xfb, 0x86, 0xe3, 0x43, 0x5a, 0xbd, 0x91, 0x5a, 0x1b, 0xfd, 0x41, 0x3a, 0x2c, 0x4f,
	0xa4, 0xd8, 0x78, 0xcb, 0xa6, 0x0f, 0x25, 0xbc, 0xf4, 0x65, 0x83, 0x86, 0xf9, 0xab, 0xac, 0xda,
	0x5c, 0x0f, 0x06, 0x49, 0x07, 0xe4, 0x8d, 0x38, 0x2d, 0x6a, 0xe1, 0xd5, 0x38, 0xbd, 0x86, 0xc0,
	0x6b, 0x71, 0xb7, 0x28, 0x1e, 0xeb, 0x5a, 0xb0, 0x26, 0x30, 0xd2, 0x9a, 0x42, 0x02, 0x95, 0x92,
	0xa9, 0x4c, 0xe3, 0x1d, 0x8a, 0x5c, 0xb9, 0xca, 0x27, 0xfa, 0x1e, 0x4a, 0x51, 0x7a, 0xa3, 0xbf,
	0x7f, 0x7a, 0xe9, 0x50, 0xf9, 0x44, 0xd2, 0xdf, 0x66, 0xcb, 0xcd, 0x56, 0x3f, 0x4e, 0xc2, 0xae,
	0xf7, 0xa1, 0x7c, 0x4f, 0x44, 0x1b, 0x61, 0xe8, 0x8f, 0x3c, 0xef, 0xcd, 0x9d, 0x88, 0x56, 0xf4,
	0x89, 0xe8, 0x3b, 0xec, 0x5c, 0xae, 0xfa, 0x66, 0xd8, 0xdf, 0xf7, 0xe5, 0xf1, 0x0c, 0xac, 0x71,
	0x0c, 0xd4, 0x67, 0x61, 0x8e, 0x65, 0x90, 0x9e, 0xc9, 0x5e, 0x62, 0x17, 0xf1, 0xd2, 0x9c, 0xc1,
	0x43, 0xcd, 0x94, 0xfc, 0x97, 0x16, 0x2d, 0xae, 0x47, 0x94, 0x39, 0x6f, 0xb2, 0x0a, 0x18, 0x10,
	0x9a, 0xab, 0xac, 0x6c, 0x3e, 0x17, 0x2a, 0x5a, 0xc4, 0x4d, 0x89, 0x9d, 0xb7, 0x19, 0x83, 0xff,
	0xd4, 0x50, 0x15, 0x0d, 0x9f, 0x1b, 0x53, 0x95, 0x88, 0x5c, 0xa3, 0x82, 0xae, 0x4e, 0xcd, 0x54,
	0x91, 0x71, 0x5c, 0x75, 0x22, 0x72, 0x8d, 0x0a, 0x3c, 0x64, 0xcf, 0x8d, 0x6a, 0x2d, 0x68, 0x96,
	0xde, 0x8c, 0x9b, 0x7a, 0x75, 0xc7, 0xd9, 0x62, 0x5b, 0x1e, 0x88, 0xbe, 0x9f, 0x64, 0x77, 0xf0,
	0x2a, 0x6e, 0x0e, 0xc7, 0x3b, 0xec, 0xb9, 0x51, 0x26, 0x3c, 0x5e, 0xe0, 0x2b, 0xca, 0x85, 0x87,
	0xdf, 0x62, 0x0d, 0x19, 0x97, 0x5c, 0xf9, 0xbb, 0xec, 0xf9, 0x51, 0x4d, 0x23, 0xbb, 0x3d, 0x9d,
	0xc6, 0x59, 0x85, 0xc6, 0xf9, 0xec, 0xf9, 0x51, 0x8d, 0x9b, 0x46, 0xe4, 0xab, 0xb9, 0xe6, 0x1d,
	0xe3, 0x00, 0x13, 0x1b, 0x48, 0x3d, 0xfb, 0x74, 0x1a, 0x58, 0x9d, 0xae, 0x81, 0xd3, 0x88, 0x9c,
	0xae, 0x81, 0xca, 0x45, 0xa9, 0x81, 0xbb, 0x23, 0x9c, 0xb3, 0x61, 0xfa, 0xca, 0x2b, 0xb9, 0xc5,
	0xdb, 0x14, 0x3e, 0xb1, 0x37, 0xc2, 0x64, 0x8d, 0x7c, 0x07, 0xbd, 0x9a, 0xe3, 0x39, 0x55, 0x47,
	0x8c, 0xe1, 0x6a, 0x5a, 0x65, 0x3a, 0xae, 0x66, 0xeb, 0x57, 0x3f, 0xb2, 0xd8, 0x52, 0xee, 0xe3,
	0x8c, 0xce, 0x0a, 0x73, 0x72, 0x88, 0xe6, 0xfd, 0x30, 0x90, 0xf6, 0x67, 0x9c, 0x0b, 0x6c, 0x39,
	0x8f, 0x6f, 0x0c, 0x62, 0xdb, 0x72, 0x6a, 0xec, 0x7c, 0x1e, 0x7d, 0xc7, 0x0f, 0xf7, 0x85, 0x6f,
	0x97, 0x46, 0x30, 0x92, 0x22, 0xb2, 0xcb, 0xce, 0x25, 0x76, 0x21, 0x8f, 0xdf, 0x8d, 0xbc, 0x23,
	0x91, 0x48, 0x7b, 0x66, 0xf5, 0x7b, 0xec, 0x2c, 0x9e, 0xae, 0x3f, 0x68, 0xb5, 0xfa, 0x3d, 0xca,
	0x4e, 0x2b, 0x6c, 0x46, 0x29, 0xb0, 0xc4, 0xaa, 0x90, 0x37, 0xcb, 0x68, 0x47, 0x04, 0xb6, 0x05,
	0x05, 0xf5, 0x30, 0x7c, 0x64, 0x97, 0x1c, 0xc6, 0xe6, 0xb6, 0x44, 0xd4, 0x95, 0xc0, 0x7c, 0x91,
	0x55, 0x30, 0x45, 0x03, 0x9a, 0x19, 0xa8, 0x52, 0x17, 0x51, 0x4f, 0xc2, 0x6a, 0xd4, 0x9e, 0x75,
	0xaa, 0x6c, 0x76, 0xc7, 0x0b, 0x64, 0x64, 0xcf, 0x41, 0x9d, 0x3d, 0xe1, 0xf9, 0x61, 0x64, 0xcf,
	0x3b, 0xf3, 0xac, 0xbc, 0x23, 0x9e, 0xd8, 0x95, 0x55, 0x97, 0x9d, 0xc9, 0x7f, 0xf1, 0x0a, 0x6a,
	0xdc, 0x0f, 0x1f, 0xc6, 0x20, 0x7e, 0x81, 0xcd, 0xdf, 0x0f, 0x77, 0xc2, 0x40, 0x0e, 0x6c, 0x0b,
	0xc4, 0xdc, 0x0f, 0x69, 0xa7, 0x90, 0x14, 0xb8, 0x1f, 0x6e, 0x27, 0xb2, 0x6b, 0x97, 0x9d, 0x33,
	0x8c, 0x3d, 0x48, 0x3a, 0x32, 0x42, 0x1e, 0xf6, 0xcc, 0xea, 0x5d, 0xe6, 0x0c, 0x3f, 0x1e, 0x84,
	0x1a, 0xd2, 0x95, 0xa2, 0x3d, 0xa0, 0x76, 0x49, 0x7a, 0x96, 0x25, 0xdb, 0xb6, 0x85, 0x60, 0x5d,
	0xbd, 0xfa, 0xb3, 0x4b, 0xd0, 0x4c, 0x79, 0x3b, 0x68, 0xdb, 0xe5, 0xd5, 0xdf, 0xb7, 0xd8, 0xb9,
	0x11, 0x4f, 0x29, 0xa0, 0x07, 0x24, 0xa0, 0x52, 0x4c, 0x53, 0xab, 0x7c, 0x81, 0x2d, 0x17, 0x4a,
	0x1e, 0x7c, 0xdd, 0xb6, 0x9c, 0xe7, 0xd8, 0xa5, 0x02, 0xfa, 0x9e, 0x68, 0x3d, 0x4a, 0x5b, 0x33,
	0xaa, 0x78, 0xa0, 0x1b, 0x54, 0x5e, 0xfd, 0x6b, 0x8b, 0x2d, 0x0f, 0xbd, 0x85, 0x80, 0xce, 0xc6,
	0x4a, 0x0a, 0x4e, 0x55, 0x38, 0xc7, 0xce, 0xe6, 0xf0, 0xa8, 0xc0, 0x33, 0xec, 0x62, 0x0e, 0x99,
	0x13, 0x7f, 0x99, 0xad, 0xe4, 0x0a, 0x1f, 0x06, 0x62, 0xdf, 0x07, 0xc8, 0x2e, 0x0f, 0x95, 0xb9,
	0xf8, 0x8d, 0x4d, 0x28, 0x9b, 0x71, 0x9e, 0x65, 0xb5, 0x5c, 0xd9, 0x86, 0x38, 0xac, 0x8b, 0x1e,
	0x69, 0x3d, 0xbb, 0xfa, 0x37, 0x25, 0x76, 0x7e, 0xd4, 0x8b, 0x8a, 0xd4, 0x7a, 0x19, 0xaa, 0x19,
	0x90, 0xbf, 0x69, 0x86, 0x46, 0xc9, 0x1d, 0xef, 0x08, 0x6f, 0xaf, 0x18, 0x46, 0x2c, 0x94, 0x92,
	0x83, 0x94, 0xd2, 0x26, 0x1a, 0xc5, 0x1b, 0xe1, 0x13, 0xac, 0xbb, 0x30, 0x8a, 0xf3, 0x46, 0xf8,
	0x84, 0xaa, 0x2e, 0x8e, 0x2a, 0xad, 0x0b, 0x25, 0xf7, 0xc2, 0x28, 0xb9, 0x50, 0x4a, 0x95, 0x57,
	0x46, 0xc9, 0x85, 0xe2, 0x5d, 0x99, 0xd8, 0x17, 0x9d, 0x4b, 0xc3, 0x6d, 0x7d, 0x5f, 0x1c, 0x49,
	0xfb, 0x3f, 0xe6, 0x47, 0x15, 0xb9, 0x61, 0xd8, 0xb5, 0x7f, 0x33, 0xbf, 0xfa, 0x77, 0x16, 0xbb,
	0x38, 0xe6, 0x69, 0x47, 0xaa, 0x6b, 0x0e, 0x9b, 0x76, 0xfe, 0x25, 0x76, 0x61, 0x44, 0x29, 0xba,
	0xc0, 0x55, 0xf6, 0xec, 0x88, 0x22, 0xea, 0xeb, 0x3b, 0x32, 0xb1, 0x4b, 0x63, 0x28, 0xa8, 0xc7,
	0x81, 0xa2, 0xec, 0x70, 0x76, 0x65, 0x04, 0x85, 0xd9, 0xef, 0x33, 0xab, 0xff, 0x54, 0x66, 0x4b,
	0xb9, 0xeb, 0xf2, 0x30, 0xf4, 0xfa, 0x41, 0x3f, 0x96, 0x6d, 0xfb, 0x33, 0x30, 0xbc, 0xf1, 0xc3,
	0xa0, 0x34, 0xec, 0xd2, 0x6f, 0x7e, 0xda, 0x25, 0x28, 0x41, 0xd0, 0x2e, 0xe3, 0x58, 0x25, 0xe7,
	0x9c, 0x01, 0x34, 0x5e, 0xe1, 0xb1, 0x67, 0x21, 0x6a, 0xc8, 0x27, 0x3d, 0x7b, 0x0e, 0x70, 0xb8,
	0x87, 0x6c, 0xcf, 0x03, 0x93, 0x4e, 0xd8, 0x95, 0xf8, 0x09, 0x30, 0xbb, 0x02, 0x24, 0x51, 0x77,
	0xdf, 0xae, 0x02, 0xfe, 0x40, 0x44, 0xdd, 0x2d, 0x4f, 0xfa, 0x6d, 0x9b, 0xa5, 0xa0, 0x0c, 0x5a,
	0xd2, 0x5e, 0x70, 0x1c, 0x76, 0x06, 0x6a, 0xed, 0x46, 0x61, 0xdc, 0x93, 0x91, 0x97, 0x80, 0x13,
	0x30, 0xfd, 0x9d, 0x54, 0x7b, 0xc9, 0x39, 0x9b, 0xfb, 0x36, 0xaa, 0x7d, 0xc6, 0x39, 0x3f, 0xfc,
	0x79, 0x4d, 0xfb, 0x2c, 0x0c, 0xb5, 0xc2, 0x17, 0x33, 0x6d, 0x1b, 0x48, 0x8b, 0x5f, 0x16, 0xb5,
	0x97, 0x81, 0xb4, 0xf0, 0x11, 0x51, 0xdb, 0x81, 0x00, 0xa7, 0xbe, 0x1b, 0x6a, 0x9f, 0x83, 0x00,
	0xa7, 0xcf, 0x1e, 0xec, 0xe7, 0xa1, 0x48, 0x7d, 0x04, 0xd6, 0xbe, 0x0a, 0xaa, 0xd1, 0x0d, 0x4b,
	0xfb, 0xb3, 0x40, 0xa6, 0x3f, 0x6e, 0x6a, 0x73, 0x88, 0x37, 0x43, 0xdf, 0xda, 0xb4, 0xaf, 0x41,
	0x73, 0xd3, 0x85, 0xaf, 0xfd, 0x92, 0xb3, 0x5c, 0xf8, 0xc8, 0xa8, 0xfd, 0x1a, 0xb4, 0xd0, 0xf8,
	0x7c, 0xa8, 0xfd, 0x3a, 0x5a, 0x48, 0x7f, 0x01, 0xcf, 0x7e, 0x63, 0xf5, 0x47, 0x16, 0xbb, 0x30,
	0xf2, 0xc9, 0x00, 0xf8, 0x7b, 0x5c, 0xc0, 0x35, 0xd3, 0xee, 0x5d, 0x62, 0xd5, 0x20, 0x54, 0x6f,
	0x0a, 0x6c, 0x0b, 0x42, 0x73, 0x5b, 0x0c, 0x22, 0x89, 0xeb, 0x7d, 0xbb, 0x04, 0x52, 0x1f, 0x4b,
	0xf9, 0x48, 0x23, 0xca, 0xe4, 0x03, 0x51, 0x57, 0x04, 0x32, 0x48, 0x68, 0xf6, 0x48, 0xbc, 0xae,
	0x8c, 0x60, 0x81, 0x6a, 0xcf, 0x6a, 0x10, 0xdf, 0x02, 0xd8, 0xad, 0xd5, 0x1f, 0x5b, 0x2a, 0xa2,
	0x14, 0xae, 0x82, 0x41, 0xfb, 0x64, 0x40, 0x48, 0x3d, 0x10, 0x6c, 0xb6, 0xa8, 0x51, 0x10, 0xf5,
	0x6d, 0x0b, 0xfa, 0x5c, 0x63, 0xe8, 0x2e, 0x88, 0x5d, 0xc2, 0x70, 0xad, 0x70, 0x90, 0xef, 0xe3,
	0x15, 0x3c, 0xbb, 0x8c, 0x11, 0xca, 0x40, 0xfb, 0xbe, 0x2a, 0x99, 0xc1, 0xa0, 0x9b, 0x31, 0x59,
	0xf7, 0x7d, 0x64, 0x3e, 0xbb, 0x61, 0xff, 0xe2, 0xd7, 0x57, 0xac, 0x5f, 0xfe, 0xfa, 0x8a, 0xf5,
	0x6f, 0xbf, 0xbe, 0x62, 0xfd, 0xf8, 0xdf, 0xaf, 0x7c, 0x66, 0x7f, 0x0e, 0x53, 0x81, 0xd7, 0xfe,
	0x37, 0x00, 0x00, 0xff, 0xff, 0x69, 0x47, 0xfb, 0x5f, 0xc4, 0x60, 0x00, 0x00,
}

func (m *F2S_RegisterServer) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *F2S_RegisterServer) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *F2S_RegisterServer) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Code) > 0 {
		i -= len(m.Code)
		copy(dAtA[i:], m.Code)
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(len(m.Code)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *XSimpleUser) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *XSimpleUser) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *XSimpleUser) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.SceneId != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.SceneId))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0xa0
	}
	if m.BanTalk != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.BanTalk))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0x98
	}
	if len(m.BlockList) > 0 {
		dAtA2 := make([]byte, len(m.BlockList)*10)
		var j1 int
		for _, num1 := range m.BlockList {
			num := uint64(num1)
			for num >= 1<<7 {
				dAtA2[j1] = uint8(uint64(num)&0x7f | 0x80)
				num >>= 7
				j1++
			}
			dAtA2[j1] = uint8(num)
			j1++
		}
		i -= j1
		copy(dAtA[i:], dAtA2[:j1])
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(j1))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0x8a
	}
	if len(m.Friends) > 0 {
		dAtA4 := make([]byte, len(m.Friends)*10)
		var j3 int
		for _, num1 := range m.Friends {
			num := uint64(num1)
			for num >= 1<<7 {
				dAtA4[j3] = uint8(uint64(num)&0x7f | 0x80)
				num >>= 7
				j3++
			}
			dAtA4[j3] = uint8(num)
			j3++
		}
		i -= j3
		copy(dAtA[i:], dAtA4[:j3])
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(j3))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0x82
	}
	if len(m.Token) > 0 {
		i -= len(m.Token)
		copy(dAtA[i:], m.Token)
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(len(m.Token)))
		i--
		dAtA[i] = 0x7a
	}
	if m.WearingClothesId != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.WearingClothesId))
		i--
		dAtA[i] = 0x48
	}
	if m.FaceFrameId != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.FaceFrameId))
		i--
		dAtA[i] = 0x30
	}
	if m.Level != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.Level))
		i--
		dAtA[i] = 0x20
	}
	if len(m.NickName) > 0 {
		i -= len(m.NickName)
		copy(dAtA[i:], m.NickName)
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(len(m.NickName)))
		i--
		dAtA[i] = 0x1a
	}
	if m.GameId != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.GameId))
		i--
		dAtA[i] = 0x10
	}
	if m.UserId != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.UserId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *S2F_RegisterServer) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *S2F_RegisterServer) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *S2F_RegisterServer) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Users) > 0 {
		for iNdEx := len(m.Users) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Users[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *S2F_UserLogin) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *S2F_UserLogin) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *S2F_UserLogin) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.User != nil {
		{
			size, err := m.User.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *F2S_UserLogin) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *F2S_UserLogin) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *F2S_UserLogin) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Result {
		i--
		if m.Result {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x10
	}
	if m.UserId != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.UserId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *S2F_UserLogout) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *S2F_UserLogout) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *S2F_UserLogout) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.UserId != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.UserId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *S2F_UserAttrChange) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *S2F_UserAttrChange) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *S2F_UserAttrChange) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.AttrValueStr) > 0 {
		i -= len(m.AttrValueStr)
		copy(dAtA[i:], m.AttrValueStr)
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(len(m.AttrValueStr)))
		i--
		dAtA[i] = 0x22
	}
	if m.AttrValueInt != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.AttrValueInt))
		i--
		dAtA[i] = 0x18
	}
	if m.Attr != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.Attr))
		i--
		dAtA[i] = 0x10
	}
	if m.UserId != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.UserId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *S2F_AddFriend) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *S2F_AddFriend) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *S2F_AddFriend) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.FriendId != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.FriendId))
		i--
		dAtA[i] = 0x10
	}
	if m.UserId != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.UserId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *S2F_DelFriend) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *S2F_DelFriend) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *S2F_DelFriend) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.FriendId != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.FriendId))
		i--
		dAtA[i] = 0x10
	}
	if m.UserId != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.UserId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *F2S_TalkToOfflineFriend) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *F2S_TalkToOfflineFriend) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *F2S_TalkToOfflineFriend) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.ReceiverId != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.ReceiverId))
		i--
		dAtA[i] = 0x20
	}
	if m.MsgId != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.MsgId))
		i--
		dAtA[i] = 0x18
	}
	if m.UserId != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.UserId))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Msg) > 0 {
		i -= len(m.Msg)
		copy(dAtA[i:], m.Msg)
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(len(m.Msg)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *C2F_Login) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *C2F_Login) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *C2F_Login) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Token) > 0 {
		i -= len(m.Token)
		copy(dAtA[i:], m.Token)
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(len(m.Token)))
		i--
		dAtA[i] = 0x12
	}
	if m.UserId != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.UserId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *F2C_Login) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *F2C_Login) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *F2C_Login) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	return len(dAtA) - i, nil
}

func (m *S2F_SyncMyFriendList) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *S2F_SyncMyFriendList) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *S2F_SyncMyFriendList) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.BlockList) > 0 {
		dAtA7 := make([]byte, len(m.BlockList)*10)
		var j6 int
		for _, num1 := range m.BlockList {
			num := uint64(num1)
			for num >= 1<<7 {
				dAtA7[j6] = uint8(uint64(num)&0x7f | 0x80)
				num >>= 7
				j6++
			}
			dAtA7[j6] = uint8(num)
			j6++
		}
		i -= j6
		copy(dAtA[i:], dAtA7[:j6])
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(j6))
		i--
		dAtA[i] = 0x1a
	}
	if m.UserId != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.UserId))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Friends) > 0 {
		dAtA9 := make([]byte, len(m.Friends)*10)
		var j8 int
		for _, num1 := range m.Friends {
			num := uint64(num1)
			for num >= 1<<7 {
				dAtA9[j8] = uint8(uint64(num)&0x7f | 0x80)
				num >>= 7
				j8++
			}
			dAtA9[j8] = uint8(num)
			j8++
		}
		i -= j8
		copy(dAtA[i:], dAtA9[:j8])
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(j8))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *S2F_AddBlock) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *S2F_AddBlock) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *S2F_AddBlock) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.TargetId != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.TargetId))
		i--
		dAtA[i] = 0x10
	}
	if m.UserId != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.UserId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *S2F_DelBlock) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *S2F_DelBlock) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *S2F_DelBlock) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.TargetId != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.TargetId))
		i--
		dAtA[i] = 0x10
	}
	if m.UserId != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.UserId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *S2F_ChannelSpeak) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *S2F_ChannelSpeak) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *S2F_ChannelSpeak) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Receiver != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.Receiver))
		i--
		dAtA[i] = 0x28
	}
	if m.SpeakChannel != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.SpeakChannel))
		i--
		dAtA[i] = 0x20
	}
	if len(m.Msg) > 0 {
		i -= len(m.Msg)
		copy(dAtA[i:], m.Msg)
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(len(m.Msg)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.NickName) > 0 {
		i -= len(m.NickName)
		copy(dAtA[i:], m.NickName)
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(len(m.NickName)))
		i--
		dAtA[i] = 0x12
	}
	if m.UserId != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.UserId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *F2C_ChannelSpeak) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *F2C_ChannelSpeak) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *F2C_ChannelSpeak) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.FrameId != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.FrameId))
		i--
		dAtA[i] = 0x38
	}
	if m.FaceId != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.FaceId))
		i--
		dAtA[i] = 0x30
	}
	if m.SpeakChannel != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.SpeakChannel))
		i--
		dAtA[i] = 0x28
	}
	if m.ReceiverId != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.ReceiverId))
		i--
		dAtA[i] = 0x20
	}
	if len(m.Msg) > 0 {
		i -= len(m.Msg)
		copy(dAtA[i:], m.Msg)
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(len(m.Msg)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.NickName) > 0 {
		i -= len(m.NickName)
		copy(dAtA[i:], m.NickName)
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(len(m.NickName)))
		i--
		dAtA[i] = 0x12
	}
	if m.UserId != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.UserId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *C2F_ChannelSpeak) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *C2F_ChannelSpeak) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *C2F_ChannelSpeak) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Receiver != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.Receiver))
		i--
		dAtA[i] = 0x18
	}
	if m.SpeakChannel != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.SpeakChannel))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Msg) > 0 {
		i -= len(m.Msg)
		copy(dAtA[i:], m.Msg)
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(len(m.Msg)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *F2C_ChannelSpeakResult) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *F2C_ChannelSpeakResult) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *F2C_ChannelSpeakResult) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Result != nil {
		{
			size, err := m.Result.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *A2S_SystemNotice) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *A2S_SystemNotice) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *A2S_SystemNotice) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Msg) > 0 {
		i -= len(m.Msg)
		copy(dAtA[i:], m.Msg)
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(len(m.Msg)))
		i--
		dAtA[i] = 0x32
	}
	if m.Interval != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.Interval))
		i--
		dAtA[i] = 0x28
	}
	if m.RepeatTimes != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.RepeatTimes))
		i--
		dAtA[i] = 0x20
	}
	if m.EndTime != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.EndTime))
		i--
		dAtA[i] = 0x18
	}
	if m.BeginTime != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.BeginTime))
		i--
		dAtA[i] = 0x10
	}
	if m.Id != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *S2F_EnterScene) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *S2F_EnterScene) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *S2F_EnterScene) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.SceneId != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.SceneId))
		i--
		dAtA[i] = 0x10
	}
	if m.UserId != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.UserId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *XUser) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *XUser) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *XUser) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.ManorName) > 0 {
		i -= len(m.ManorName)
		copy(dAtA[i:], m.ManorName)
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(len(m.ManorName)))
		i--
		dAtA[i] = 0x2
		i--
		dAtA[i] = 0xca
	}
	if m.AlreadyRegistered {
		i--
		if m.AlreadyRegistered {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0xd0
	}
	if m.PayTotal != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.PayTotal))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0xc8
	}
	if m.BulletinBoardId != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.BulletinBoardId))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0xc0
	}
	if m.WearingClothesId != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.WearingClothesId))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0xb8
	}
	if len(m.ClothesList) > 0 {
		dAtA12 := make([]byte, len(m.ClothesList)*10)
		var j11 int
		for _, num1 := range m.ClothesList {
			num := uint64(num1)
			for num >= 1<<7 {
				dAtA12[j11] = uint8(uint64(num)&0x7f | 0x80)
				num >>= 7
				j11++
			}
			dAtA12[j11] = uint8(num)
			j11++
		}
		i -= j11
		copy(dAtA[i:], dAtA12[:j11])
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(j11))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0xb2
	}
	if len(m.SyntheticList) > 0 {
		dAtA14 := make([]byte, len(m.SyntheticList)*10)
		var j13 int
		for _, num1 := range m.SyntheticList {
			num := uint64(num1)
			for num >= 1<<7 {
				dAtA14[j13] = uint8(uint64(num)&0x7f | 0x80)
				num >>= 7
				j13++
			}
			dAtA14[j13] = uint8(num)
			j13++
		}
		i -= j13
		copy(dAtA[i:], dAtA14[:j13])
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(j13))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0xaa
	}
	if m.LastChangeNameTime != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.LastChangeNameTime))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0xa0
	}
	if m.BanTalk != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.BanTalk))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0x98
	}
	if m.ActivePointWeek != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.ActivePointWeek))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0x90
	}
	if m.ActivePointDaily != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.ActivePointDaily))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0x88
	}
	if len(m.RealName) > 0 {
		i -= len(m.RealName)
		copy(dAtA[i:], m.RealName)
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(len(m.RealName)))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0x82
	}
	if len(m.IDCard) > 0 {
		i -= len(m.IDCard)
		copy(dAtA[i:], m.IDCard)
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(len(m.IDCard)))
		i--
		dAtA[i] = 0x7a
	}
	if m.GameId != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.GameId))
		i--
		dAtA[i] = 0x70
	}
	if m.PearlBind != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.PearlBind))
		i--
		dAtA[i] = 0x68
	}
	if m.Pearl != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.Pearl))
		i--
		dAtA[i] = 0x60
	}
	if m.Shell != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.Shell))
		i--
		dAtA[i] = 0x58
	}
	if m.Charm != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.Charm))
		i--
		dAtA[i] = 0x50
	}
	if m.Energy != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.Energy))
		i--
		dAtA[i] = 0x48
	}
	if m.FaceFrameId != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.FaceFrameId))
		i--
		dAtA[i] = 0x40
	}
	if m.FaceId != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.FaceId))
		i--
		dAtA[i] = 0x38
	}
	if m.Exp != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.Exp))
		i--
		dAtA[i] = 0x30
	}
	if m.Level != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.Level))
		i--
		dAtA[i] = 0x28
	}
	if len(m.NickName) > 0 {
		i -= len(m.NickName)
		copy(dAtA[i:], m.NickName)
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(len(m.NickName)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.PhoneNo) > 0 {
		i -= len(m.PhoneNo)
		copy(dAtA[i:], m.PhoneNo)
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(len(m.PhoneNo)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.OpenId) > 0 {
		i -= len(m.OpenId)
		copy(dAtA[i:], m.OpenId)
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(len(m.OpenId)))
		i--
		dAtA[i] = 0x12
	}
	if m.UserId != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.UserId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *C2S_GuestLogin) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *C2S_GuestLogin) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *C2S_GuestLogin) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.HotfixVer != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.HotfixVer))
		i--
		dAtA[i] = 0x58
	}
	if m.EvaluationVer != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.EvaluationVer))
		i--
		dAtA[i] = 0x50
	}
	if m.MainVer != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.MainVer))
		i--
		dAtA[i] = 0x48
	}
	if m.GameId != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.GameId))
		i--
		dAtA[i] = 0x40
	}
	if len(m.DeviceType) > 0 {
		i -= len(m.DeviceType)
		copy(dAtA[i:], m.DeviceType)
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(len(m.DeviceType)))
		i--
		dAtA[i] = 0x3a
	}
	if m.Channel != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.Channel))
		i--
		dAtA[i] = 0x30
	}
	if len(m.IpAddr) > 0 {
		i -= len(m.IpAddr)
		copy(dAtA[i:], m.IpAddr)
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(len(m.IpAddr)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.Password) > 0 {
		i -= len(m.Password)
		copy(dAtA[i:], m.Password)
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(len(m.Password)))
		i--
		dAtA[i] = 0x22
	}
	if m.UserId != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.UserId))
		i--
		dAtA[i] = 0x18
	}
	if len(m.OpenId) > 0 {
		i -= len(m.OpenId)
		copy(dAtA[i:], m.OpenId)
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(len(m.OpenId)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.MachineId) > 0 {
		i -= len(m.MachineId)
		copy(dAtA[i:], m.MachineId)
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(len(m.MachineId)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *C2S_GameLogout) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *C2S_GameLogout) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *C2S_GameLogout) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.UserId != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.UserId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *C2S_Register) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *C2S_Register) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *C2S_Register) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.ManorName) > 0 {
		i -= len(m.ManorName)
		copy(dAtA[i:], m.ManorName)
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(len(m.ManorName)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.NickName) > 0 {
		i -= len(m.NickName)
		copy(dAtA[i:], m.NickName)
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(len(m.NickName)))
		i--
		dAtA[i] = 0x12
	}
	if m.ClothesId != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.ClothesId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *S2C_Register) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *S2C_Register) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *S2C_Register) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Ret != nil {
		{
			size, err := m.Ret.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *C2S_String) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *C2S_String) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *C2S_String) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Str) > 0 {
		i -= len(m.Str)
		copy(dAtA[i:], m.Str)
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(len(m.Str)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *C2SInt32) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *C2SInt32) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *C2SInt32) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Data != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.Data))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *C2S_Empty) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *C2S_Empty) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *C2S_Empty) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	return len(dAtA) - i, nil
}

func (m *FailNotice) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *FailNotice) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *FailNotice) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.FailMsg) > 0 {
		i -= len(m.FailMsg)
		copy(dAtA[i:], m.FailMsg)
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(len(m.FailMsg)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Param) > 0 {
		for iNdEx := len(m.Param) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.Param[iNdEx])
			copy(dAtA[i:], m.Param[iNdEx])
			i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(len(m.Param[iNdEx])))
			i--
			dAtA[i] = 0x12
		}
	}
	if m.FailCode != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.FailCode))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *OperationResult) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *OperationResult) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *OperationResult) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Msg != nil {
		{
			size, err := m.Msg.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if m.ErrCode != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.ErrCode))
		i--
		dAtA[i] = 0x10
	}
	if m.IsSuccess {
		i--
		if m.IsSuccess {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *XItem) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *XItem) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *XItem) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Extra) > 0 {
		i -= len(m.Extra)
		copy(dAtA[i:], m.Extra)
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(len(m.Extra)))
		i--
		dAtA[i] = 0x22
	}
	if m.No != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.No))
		i--
		dAtA[i] = 0x18
	}
	if m.ItemId != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.ItemId))
		i--
		dAtA[i] = 0x10
	}
	if m.Uuid != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.Uuid))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *FurnitureItem) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *FurnitureItem) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *FurnitureItem) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.No != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.No))
		i--
		dAtA[i] = 0x10
	}
	if m.ItemId != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.ItemId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *S2C_AllItemInfo) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *S2C_AllItemInfo) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *S2C_AllItemInfo) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.FloorList) > 0 {
		dAtA18 := make([]byte, len(m.FloorList)*10)
		var j17 int
		for _, num1 := range m.FloorList {
			num := uint64(num1)
			for num >= 1<<7 {
				dAtA18[j17] = uint8(uint64(num)&0x7f | 0x80)
				num >>= 7
				j17++
			}
			dAtA18[j17] = uint8(num)
			j17++
		}
		i -= j17
		copy(dAtA[i:], dAtA18[:j17])
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(j17))
		i--
		dAtA[i] = 0x22
	}
	if len(m.Furniture) > 0 {
		for iNdEx := len(m.Furniture) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Furniture[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x1a
		}
	}
	if len(m.Items) > 0 {
		for iNdEx := len(m.Items) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Items[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x12
		}
	}
	if len(m.SlotCellNo) > 0 {
		dAtA20 := make([]byte, len(m.SlotCellNo)*10)
		var j19 int
		for _, num1 := range m.SlotCellNo {
			num := uint64(num1)
			for num >= 1<<7 {
				dAtA20[j19] = uint8(uint64(num)&0x7f | 0x80)
				num >>= 7
				j19++
			}
			dAtA20[j19] = uint8(num)
			j19++
		}
		i -= j19
		copy(dAtA[i:], dAtA20[:j19])
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(j19))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *C2S_UseItem) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *C2S_UseItem) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *C2S_UseItem) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Param) > 0 {
		i -= len(m.Param)
		copy(dAtA[i:], m.Param)
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(len(m.Param)))
		i--
		dAtA[i] = 0x12
	}
	if m.Item != nil {
		{
			size, err := m.Item.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *S2C_UpdateItem) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *S2C_UpdateItem) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *S2C_UpdateItem) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.OrigNumber != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.OrigNumber))
		i--
		dAtA[i] = 0x20
	}
	if m.CurrentNumber != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.CurrentNumber))
		i--
		dAtA[i] = 0x18
	}
	if m.ItemId != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.ItemId))
		i--
		dAtA[i] = 0x10
	}
	if m.Uuid != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.Uuid))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *S2C_BatchUpdateItem) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *S2C_BatchUpdateItem) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *S2C_BatchUpdateItem) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Reason != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.Reason))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Items) > 0 {
		for iNdEx := len(m.Items) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Items[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *C2S_GetItemInfo) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *C2S_GetItemInfo) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *C2S_GetItemInfo) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.ItemId != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.ItemId))
		i--
		dAtA[i] = 0x10
	}
	if m.Uuid != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.Uuid))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *S2C_GetItemInfo) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *S2C_GetItemInfo) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *S2C_GetItemInfo) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Item != nil {
		{
			size, err := m.Item.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *S2C_SlotLevels) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *S2C_SlotLevels) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *S2C_SlotLevels) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.SlotCellNo) > 0 {
		dAtA24 := make([]byte, len(m.SlotCellNo)*10)
		var j23 int
		for _, num1 := range m.SlotCellNo {
			num := uint64(num1)
			for num >= 1<<7 {
				dAtA24[j23] = uint8(uint64(num)&0x7f | 0x80)
				num >>= 7
				j23++
			}
			dAtA24[j23] = uint8(num)
			j23++
		}
		i -= j23
		copy(dAtA[i:], dAtA24[:j23])
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(j23))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *S2C_BatchAddFurniture) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *S2C_BatchAddFurniture) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *S2C_BatchAddFurniture) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Reason != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.Reason))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Furniture) > 0 {
		for iNdEx := len(m.Furniture) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Furniture[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *XPuzzleInfo) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *XPuzzleInfo) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *XPuzzleInfo) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Stage != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.Stage))
		i--
		dAtA[i] = 0x48
	}
	if m.NextStageTime != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.NextStageTime))
		i--
		dAtA[i] = 0x40
	}
	if m.PuzzleType != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.PuzzleType))
		i--
		dAtA[i] = 0x38
	}
	if m.SeedId != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.SeedId))
		i--
		dAtA[i] = 0x30
	}
	if m.CollectedTimes != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.CollectedTimes))
		i--
		dAtA[i] = 0x28
	}
	if m.GrawRate != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.GrawRate))
		i--
		dAtA[i] = 0x20
	}
	if m.ManureTimes != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.ManureTimes))
		i--
		dAtA[i] = 0x18
	}
	if m.BeginTime != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.BeginTime))
		i--
		dAtA[i] = 0x10
	}
	if m.PuzzleId != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.PuzzleId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *C2S_Farm_GetFarmInfo) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *C2S_Farm_GetFarmInfo) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *C2S_Farm_GetFarmInfo) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	return len(dAtA) - i, nil
}

func (m *S2C_Farm_GetFarmInfo) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *S2C_Farm_GetFarmInfo) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *S2C_Farm_GetFarmInfo) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.EmptyPuzzleId) > 0 {
		dAtA26 := make([]byte, len(m.EmptyPuzzleId)*10)
		var j25 int
		for _, num1 := range m.EmptyPuzzleId {
			num := uint64(num1)
			for num >= 1<<7 {
				dAtA26[j25] = uint8(uint64(num)&0x7f | 0x80)
				num >>= 7
				j25++
			}
			dAtA26[j25] = uint8(num)
			j25++
		}
		i -= j25
		copy(dAtA[i:], dAtA26[:j25])
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(j25))
		i--
		dAtA[i] = 0x12
	}
	if len(m.AllPuzzle) > 0 {
		for iNdEx := len(m.AllPuzzle) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.AllPuzzle[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *C2S_Farm_Plant) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *C2S_Farm_Plant) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *C2S_Farm_Plant) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.SeedId != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.SeedId))
		i--
		dAtA[i] = 0x10
	}
	if m.PuzzleId != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.PuzzleId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *S2C_Farm_Plant) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *S2C_Farm_Plant) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *S2C_Farm_Plant) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.ItemId != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.ItemId))
		i--
		dAtA[i] = 0x18
	}
	if m.PuzzleId != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.PuzzleId))
		i--
		dAtA[i] = 0x10
	}
	if m.Result != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.Result))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *C2S_Farm_Manure) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *C2S_Farm_Manure) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *C2S_Farm_Manure) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.FertilizerId != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.FertilizerId))
		i--
		dAtA[i] = 0x10
	}
	if m.PuzzleId != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.PuzzleId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *S2C_Farm_Manure) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *S2C_Farm_Manure) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *S2C_Farm_Manure) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.ItemId != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.ItemId))
		i--
		dAtA[i] = 0x18
	}
	if m.PuzzleId != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.PuzzleId))
		i--
		dAtA[i] = 0x10
	}
	if m.Result != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.Result))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *S2C_Farm_PuzzleInfo) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *S2C_Farm_PuzzleInfo) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *S2C_Farm_PuzzleInfo) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Puzzle != nil {
		{
			size, err := m.Puzzle.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *S2C_Farm_SyncStatus) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *S2C_Farm_SyncStatus) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *S2C_Farm_SyncStatus) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.NextStageTime != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.NextStageTime))
		i--
		dAtA[i] = 0x18
	}
	if m.Status != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.Status))
		i--
		dAtA[i] = 0x10
	}
	if m.PuzzleId != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.PuzzleId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *C2S_Farm_UnlockPuzzle) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *C2S_Farm_UnlockPuzzle) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *C2S_Farm_UnlockPuzzle) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.PuzzleId != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.PuzzleId))
		i--
		dAtA[i] = 0x10
	}
	if m.PuzzleType != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.PuzzleType))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *S2C_Farm_UnlockPuzzle) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *S2C_Farm_UnlockPuzzle) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *S2C_Farm_UnlockPuzzle) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.PuzzleId != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.PuzzleId))
		i--
		dAtA[i] = 0x10
	}
	if m.Result != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.Result))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *C2S_Farm_Water) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *C2S_Farm_Water) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *C2S_Farm_Water) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.PuzzleId != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.PuzzleId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *S2C_Farm_Water) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *S2C_Farm_Water) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *S2C_Farm_Water) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.PuzzleId != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.PuzzleId))
		i--
		dAtA[i] = 0x10
	}
	if m.Result != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.Result))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *C2S_Farm_Reap) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *C2S_Farm_Reap) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *C2S_Farm_Reap) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.PuzzleId != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.PuzzleId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *S2C_Farm_Reap) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *S2C_Farm_Reap) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *S2C_Farm_Reap) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.RewardCount != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.RewardCount))
		i--
		dAtA[i] = 0x20
	}
	if m.RewardId != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.RewardId))
		i--
		dAtA[i] = 0x18
	}
	if m.PuzzleId != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.PuzzleId))
		i--
		dAtA[i] = 0x10
	}
	if m.Result != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.Result))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *XPlantPuzzleInfo) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *XPlantPuzzleInfo) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *XPlantPuzzleInfo) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Stage != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.Stage))
		i--
		dAtA[i] = 0x30
	}
	if m.NextStageTime != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.NextStageTime))
		i--
		dAtA[i] = 0x28
	}
	if m.SeedId != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.SeedId))
		i--
		dAtA[i] = 0x20
	}
	if m.CollectedTimes != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.CollectedTimes))
		i--
		dAtA[i] = 0x18
	}
	if m.BeginTime != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.BeginTime))
		i--
		dAtA[i] = 0x10
	}
	if m.PuzzleId != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.PuzzleId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *S2C_PlantFarm_GetFarmInfo) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *S2C_PlantFarm_GetFarmInfo) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *S2C_PlantFarm_GetFarmInfo) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.EmptyPuzzleId) > 0 {
		dAtA29 := make([]byte, len(m.EmptyPuzzleId)*10)
		var j28 int
		for _, num1 := range m.EmptyPuzzleId {
			num := uint64(num1)
			for num >= 1<<7 {
				dAtA29[j28] = uint8(uint64(num)&0x7f | 0x80)
				num >>= 7
				j28++
			}
			dAtA29[j28] = uint8(num)
			j28++
		}
		i -= j28
		copy(dAtA[i:], dAtA29[:j28])
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(j28))
		i--
		dAtA[i] = 0x22
	}
	if len(m.AllPuzzle) > 0 {
		for iNdEx := len(m.AllPuzzle) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.AllPuzzle[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x1a
		}
	}
	if m.BuildId != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.BuildId))
		i--
		dAtA[i] = 0x10
	}
	if m.BuildUId != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.BuildUId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *C2S_PlantFarm_Plant) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *C2S_PlantFarm_Plant) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *C2S_PlantFarm_Plant) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.SeedId != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.SeedId))
		i--
		dAtA[i] = 0x18
	}
	if m.PuzzleId != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.PuzzleId))
		i--
		dAtA[i] = 0x10
	}
	if m.BuildUId != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.BuildUId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *S2C_PlantFarm_Plant) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *S2C_PlantFarm_Plant) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *S2C_PlantFarm_Plant) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.ItemId != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.ItemId))
		i--
		dAtA[i] = 0x20
	}
	if m.PuzzleId != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.PuzzleId))
		i--
		dAtA[i] = 0x18
	}
	if m.Result != nil {
		{
			size, err := m.Result.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	if m.BuildUId != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.BuildUId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *C2S_PlantFarm_PuzzleAction) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *C2S_PlantFarm_PuzzleAction) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *C2S_PlantFarm_PuzzleAction) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Action != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.Action))
		i--
		dAtA[i] = 0x18
	}
	if m.PuzzleId != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.PuzzleId))
		i--
		dAtA[i] = 0x10
	}
	if m.BuildUId != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.BuildUId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *S2C_PlantFarm_PuzzleInfo) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *S2C_PlantFarm_PuzzleInfo) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *S2C_PlantFarm_PuzzleInfo) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Puzzle != nil {
		{
			size, err := m.Puzzle.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	if m.BuildUId != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.BuildUId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *S2C_PlantFarm_Water) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *S2C_PlantFarm_Water) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *S2C_PlantFarm_Water) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.PuzzleId != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.PuzzleId))
		i--
		dAtA[i] = 0x18
	}
	if m.Result != nil {
		{
			size, err := m.Result.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	if m.BuildUId != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.BuildUId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *S2C_PlantFarm_Reap) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *S2C_PlantFarm_Reap) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *S2C_PlantFarm_Reap) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.RewardCounts) > 0 {
		dAtA34 := make([]byte, len(m.RewardCounts)*10)
		var j33 int
		for _, num1 := range m.RewardCounts {
			num := uint64(num1)
			for num >= 1<<7 {
				dAtA34[j33] = uint8(uint64(num)&0x7f | 0x80)
				num >>= 7
				j33++
			}
			dAtA34[j33] = uint8(num)
			j33++
		}
		i -= j33
		copy(dAtA[i:], dAtA34[:j33])
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(j33))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.RewardIds) > 0 {
		dAtA36 := make([]byte, len(m.RewardIds)*10)
		var j35 int
		for _, num1 := range m.RewardIds {
			num := uint64(num1)
			for num >= 1<<7 {
				dAtA36[j35] = uint8(uint64(num)&0x7f | 0x80)
				num >>= 7
				j35++
			}
			dAtA36[j35] = uint8(num)
			j35++
		}
		i -= j35
		copy(dAtA[i:], dAtA36[:j35])
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(j35))
		i--
		dAtA[i] = 0x22
	}
	if m.PuzzleId != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.PuzzleId))
		i--
		dAtA[i] = 0x18
	}
	if m.Result != nil {
		{
			size, err := m.Result.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	if m.BuildUId != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.BuildUId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *XAnimalPuzzleInfo) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *XAnimalPuzzleInfo) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *XAnimalPuzzleInfo) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Stage != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.Stage))
		i--
		dAtA[i] = 0x38
	}
	if m.NeedTotalSatiety != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.NeedTotalSatiety))
		i--
		dAtA[i] = 0x30
	}
	if m.CurrentSatiety != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.CurrentSatiety))
		i--
		dAtA[i] = 0x28
	}
	if m.SeedId != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.SeedId))
		i--
		dAtA[i] = 0x20
	}
	if m.CollectedTimes != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.CollectedTimes))
		i--
		dAtA[i] = 0x18
	}
	if m.BeginTime != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.BeginTime))
		i--
		dAtA[i] = 0x10
	}
	if m.PuzzleId != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.PuzzleId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *S2C_AnimalFarm_GetFarmInfo) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *S2C_AnimalFarm_GetFarmInfo) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *S2C_AnimalFarm_GetFarmInfo) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Inventory != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.Inventory))
		i--
		dAtA[i] = 0x28
	}
	if len(m.EmptyPuzzleId) > 0 {
		dAtA39 := make([]byte, len(m.EmptyPuzzleId)*10)
		var j38 int
		for _, num1 := range m.EmptyPuzzleId {
			num := uint64(num1)
			for num >= 1<<7 {
				dAtA39[j38] = uint8(uint64(num)&0x7f | 0x80)
				num >>= 7
				j38++
			}
			dAtA39[j38] = uint8(num)
			j38++
		}
		i -= j38
		copy(dAtA[i:], dAtA39[:j38])
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(j38))
		i--
		dAtA[i] = 0x22
	}
	if len(m.AllPuzzle) > 0 {
		for iNdEx := len(m.AllPuzzle) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.AllPuzzle[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x1a
		}
	}
	if m.BuildId != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.BuildId))
		i--
		dAtA[i] = 0x10
	}
	if m.BuildUId != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.BuildUId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *C2S_AnimalFarm_Plant) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *C2S_AnimalFarm_Plant) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *C2S_AnimalFarm_Plant) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.SeedId != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.SeedId))
		i--
		dAtA[i] = 0x18
	}
	if m.PuzzleId != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.PuzzleId))
		i--
		dAtA[i] = 0x10
	}
	if m.BuildUId != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.BuildUId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *S2C_AnimalFarm_Plant) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *S2C_AnimalFarm_Plant) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *S2C_AnimalFarm_Plant) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.ItemId != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.ItemId))
		i--
		dAtA[i] = 0x20
	}
	if m.PuzzleId != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.PuzzleId))
		i--
		dAtA[i] = 0x18
	}
	if m.Result != nil {
		{
			size, err := m.Result.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	if m.BuildUId != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.BuildUId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *C2S_AnimalFarm_PuzzleAction) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *C2S_AnimalFarm_PuzzleAction) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *C2S_AnimalFarm_PuzzleAction) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Action != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.Action))
		i--
		dAtA[i] = 0x18
	}
	if m.PuzzleId != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.PuzzleId))
		i--
		dAtA[i] = 0x10
	}
	if m.BuildUId != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.BuildUId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *S2C_AnimalFarm_PuzzleInfo) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *S2C_AnimalFarm_PuzzleInfo) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *S2C_AnimalFarm_PuzzleInfo) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Inventory != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.Inventory))
		i--
		dAtA[i] = 0x18
	}
	if m.Puzzle != nil {
		{
			size, err := m.Puzzle.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	if m.BuildUId != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.BuildUId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *S2C_AnimalFarm_Inventory) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *S2C_AnimalFarm_Inventory) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *S2C_AnimalFarm_Inventory) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Inventory != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.Inventory))
		i--
		dAtA[i] = 0x10
	}
	if m.BuildUId != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.BuildUId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *S2C_AnimalFarm_Reap) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *S2C_AnimalFarm_Reap) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *S2C_AnimalFarm_Reap) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.RewardCounts) > 0 {
		dAtA43 := make([]byte, len(m.RewardCounts)*10)
		var j42 int
		for _, num1 := range m.RewardCounts {
			num := uint64(num1)
			for num >= 1<<7 {
				dAtA43[j42] = uint8(uint64(num)&0x7f | 0x80)
				num >>= 7
				j42++
			}
			dAtA43[j42] = uint8(num)
			j42++
		}
		i -= j42
		copy(dAtA[i:], dAtA43[:j42])
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(j42))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.RewardIds) > 0 {
		dAtA45 := make([]byte, len(m.RewardIds)*10)
		var j44 int
		for _, num1 := range m.RewardIds {
			num := uint64(num1)
			for num >= 1<<7 {
				dAtA45[j44] = uint8(uint64(num)&0x7f | 0x80)
				num >>= 7
				j44++
			}
			dAtA45[j44] = uint8(num)
			j44++
		}
		i -= j44
		copy(dAtA[i:], dAtA45[:j44])
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(j44))
		i--
		dAtA[i] = 0x22
	}
	if m.PuzzleId != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.PuzzleId))
		i--
		dAtA[i] = 0x18
	}
	if m.Result != nil {
		{
			size, err := m.Result.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	if m.BuildUId != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.BuildUId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *XMission) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *XMission) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *XMission) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.CompleteTimes != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.CompleteTimes))
		i--
		dAtA[i] = 0x28
	}
	if len(m.TotalProcess) > 0 {
		dAtA48 := make([]byte, len(m.TotalProcess)*10)
		var j47 int
		for _, num1 := range m.TotalProcess {
			num := uint64(num1)
			for num >= 1<<7 {
				dAtA48[j47] = uint8(uint64(num)&0x7f | 0x80)
				num >>= 7
				j47++
			}
			dAtA48[j47] = uint8(num)
			j47++
		}
		i -= j47
		copy(dAtA[i:], dAtA48[:j47])
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(j47))
		i--
		dAtA[i] = 0x22
	}
	if len(m.CurrProcess) > 0 {
		dAtA50 := make([]byte, len(m.CurrProcess)*10)
		var j49 int
		for _, num1 := range m.CurrProcess {
			num := uint64(num1)
			for num >= 1<<7 {
				dAtA50[j49] = uint8(uint64(num)&0x7f | 0x80)
				num >>= 7
				j49++
			}
			dAtA50[j49] = uint8(num)
			j49++
		}
		i -= j49
		copy(dAtA[i:], dAtA50[:j49])
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(j49))
		i--
		dAtA[i] = 0x1a
	}
	if m.Status != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.Status))
		i--
		dAtA[i] = 0x10
	}
	if m.Id != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *C2S_AllMissionInfo) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *C2S_AllMissionInfo) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *C2S_AllMissionInfo) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	return len(dAtA) - i, nil
}

func (m *S2C_AllMissionInfo) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *S2C_AllMissionInfo) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *S2C_AllMissionInfo) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Missions) > 0 {
		for iNdEx := len(m.Missions) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Missions[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *C2S_OneMissionInfo) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *C2S_OneMissionInfo) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *C2S_OneMissionInfo) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Id != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *S2C_OneMissionInfo) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *S2C_OneMissionInfo) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *S2C_OneMissionInfo) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Mission != nil {
		{
			size, err := m.Mission.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *C2S_AcceptMission) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *C2S_AcceptMission) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *C2S_AcceptMission) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Id != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *S2C_AcceptMission) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *S2C_AcceptMission) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *S2C_AcceptMission) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Ret != nil {
		{
			size, err := m.Ret.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	if m.Id != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *C2S_ReportMission) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *C2S_ReportMission) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *C2S_ReportMission) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Id != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *S2C_ReportMission) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *S2C_ReportMission) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *S2C_ReportMission) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Ret != nil {
		{
			size, err := m.Ret.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	if m.Id != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *C2S_GetMissionReward) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *C2S_GetMissionReward) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *C2S_GetMissionReward) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Id != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *S2C_GetMissionReward) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *S2C_GetMissionReward) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *S2C_GetMissionReward) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Ret != nil {
		{
			size, err := m.Ret.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	if m.Id != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *S2C_MissionCanAcceptList) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *S2C_MissionCanAcceptList) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *S2C_MissionCanAcceptList) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.MissionId) > 0 {
		dAtA56 := make([]byte, len(m.MissionId)*10)
		var j55 int
		for _, num1 := range m.MissionId {
			num := uint64(num1)
			for num >= 1<<7 {
				dAtA56[j55] = uint8(uint64(num)&0x7f | 0x80)
				num >>= 7
				j55++
			}
			dAtA56[j55] = uint8(num)
			j55++
		}
		i -= j55
		copy(dAtA[i:], dAtA56[:j55])
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(j55))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *XFurniture) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *XFurniture) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *XFurniture) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Dir != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.Dir))
		i--
		dAtA[i] = 0x18
	}
	if m.Pos != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.Pos))
		i--
		dAtA[i] = 0x10
	}
	if m.Id != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *XTheme) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *XTheme) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *XTheme) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Furniturelist) > 0 {
		for iNdEx := len(m.Furniturelist) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Furniturelist[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x22
		}
	}
	if m.Unlock {
		i--
		if m.Unlock {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x18
	}
	if len(m.Name) > 0 {
		i -= len(m.Name)
		copy(dAtA[i:], m.Name)
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(len(m.Name)))
		i--
		dAtA[i] = 0x12
	}
	if m.Id != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *XHomeInfo) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *XHomeInfo) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *XHomeInfo) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.CurrThemeId != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.CurrThemeId))
		i--
		dAtA[i] = 0x10
	}
	if m.Level != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.Level))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *C2S_GetHomeInfo) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *C2S_GetHomeInfo) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *C2S_GetHomeInfo) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	return len(dAtA) - i, nil
}

func (m *S2C_GetHomeInfo) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *S2C_GetHomeInfo) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *S2C_GetHomeInfo) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Home != nil {
		{
			size, err := m.Home.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *C2S_GetAllThemesInfo) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *C2S_GetAllThemesInfo) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *C2S_GetAllThemesInfo) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	return len(dAtA) - i, nil
}

func (m *S2C_GetAllThemesInfo) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *S2C_GetAllThemesInfo) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *S2C_GetAllThemesInfo) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Themes) > 0 {
		for iNdEx := len(m.Themes) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Themes[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *C2S_GetSingleThemeInfo) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *C2S_GetSingleThemeInfo) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *C2S_GetSingleThemeInfo) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Id != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *S2C_GetSingleThemeInfo) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *S2C_GetSingleThemeInfo) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *S2C_GetSingleThemeInfo) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Theme != nil {
		{
			size, err := m.Theme.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *C2S_SaveThemeInfo) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *C2S_SaveThemeInfo) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *C2S_SaveThemeInfo) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Theme != nil {
		{
			size, err := m.Theme.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *C2S_HomeUp) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *C2S_HomeUp) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *C2S_HomeUp) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	return len(dAtA) - i, nil
}

func (m *C2S_ChangeThemeName) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *C2S_ChangeThemeName) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *C2S_ChangeThemeName) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Name) > 0 {
		i -= len(m.Name)
		copy(dAtA[i:], m.Name)
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(len(m.Name)))
		i--
		dAtA[i] = 0x12
	}
	if m.Id != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *C2S_UnlockTheme) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *C2S_UnlockTheme) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *C2S_UnlockTheme) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Id != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *C2S_Forest_CutTree) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *C2S_Forest_CutTree) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *C2S_Forest_CutTree) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.TreeId != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.TreeId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *S2C_Forest_CutTree) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *S2C_Forest_CutTree) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *S2C_Forest_CutTree) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.ItemCount) > 0 {
		dAtA61 := make([]byte, len(m.ItemCount)*10)
		var j60 int
		for _, num1 := range m.ItemCount {
			num := uint64(num1)
			for num >= 1<<7 {
				dAtA61[j60] = uint8(uint64(num)&0x7f | 0x80)
				num >>= 7
				j60++
			}
			dAtA61[j60] = uint8(num)
			j60++
		}
		i -= j60
		copy(dAtA[i:], dAtA61[:j60])
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(j60))
		i--
		dAtA[i] = 0x22
	}
	if len(m.ItemId) > 0 {
		dAtA63 := make([]byte, len(m.ItemId)*10)
		var j62 int
		for _, num1 := range m.ItemId {
			num := uint64(num1)
			for num >= 1<<7 {
				dAtA63[j62] = uint8(uint64(num)&0x7f | 0x80)
				num >>= 7
				j62++
			}
			dAtA63[j62] = uint8(num)
			j62++
		}
		i -= j62
		copy(dAtA[i:], dAtA63[:j62])
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(j62))
		i--
		dAtA[i] = 0x1a
	}
	if m.Ret != nil {
		{
			size, err := m.Ret.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	if m.TreeId != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.TreeId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *C2S_Mine_GetMaxLayer) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *C2S_Mine_GetMaxLayer) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *C2S_Mine_GetMaxLayer) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	return len(dAtA) - i, nil
}

func (m *S2C_Mine_GetMaxLayer) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *S2C_Mine_GetMaxLayer) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *S2C_Mine_GetMaxLayer) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.MaxLayer != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.MaxLayer))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *C2S_Mine_EnterLayer) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *C2S_Mine_EnterLayer) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *C2S_Mine_EnterLayer) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Layer != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.Layer))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *S2C_Mine_EnterLayer) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *S2C_Mine_EnterLayer) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *S2C_Mine_EnterLayer) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.NeedEnergy != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.NeedEnergy))
		i--
		dAtA[i] = 0x20
	}
	if m.StartIndex != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.StartIndex))
		i--
		dAtA[i] = 0x18
	}
	if m.ErrCode != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.ErrCode))
		i--
		dAtA[i] = 0x10
	}
	if m.Layer != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.Layer))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *C2S_Mine_Dig) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *C2S_Mine_Dig) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *C2S_Mine_Dig) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Index != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.Index))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *S2C_Mine_Dig) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *S2C_Mine_Dig) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *S2C_Mine_Dig) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Rewardid != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.Rewardid))
		i--
		dAtA[i] = 0x30
	}
	if m.RewardType != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.RewardType))
		i--
		dAtA[i] = 0x28
	}
	if m.ItemCount != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.ItemCount))
		i--
		dAtA[i] = 0x20
	}
	if m.ItemId != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.ItemId))
		i--
		dAtA[i] = 0x18
	}
	if m.ErrCode != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.ErrCode))
		i--
		dAtA[i] = 0x10
	}
	if m.Index != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.Index))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *C2S_Mine_GetReward) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *C2S_Mine_GetReward) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *C2S_Mine_GetReward) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Index != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.Index))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *S2C_Mine_GetReward) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *S2C_Mine_GetReward) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *S2C_Mine_GetReward) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.ItemCount != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.ItemCount))
		i--
		dAtA[i] = 0x20
	}
	if m.ItemId != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.ItemId))
		i--
		dAtA[i] = 0x18
	}
	if m.ErrCode != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.ErrCode))
		i--
		dAtA[i] = 0x10
	}
	if m.Index != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.Index))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *C2S_GetUserAllValue) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *C2S_GetUserAllValue) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *C2S_GetUserAllValue) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	return len(dAtA) - i, nil
}

func (m *S2C_GetUserAllValue) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *S2C_GetUserAllValue) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *S2C_GetUserAllValue) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.UserValue != nil {
		{
			size, err := m.UserValue.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *C2S_ChangeUserIntAttr) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *C2S_ChangeUserIntAttr) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *C2S_ChangeUserIntAttr) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.ChangeToValue != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.ChangeToValue))
		i--
		dAtA[i] = 0x10
	}
	if m.AttrSort != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.AttrSort))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *S2C_ChangeUserIntAttr) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *S2C_ChangeUserIntAttr) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *S2C_ChangeUserIntAttr) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Reason != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.Reason))
		i--
		dAtA[i] = 0x28
	}
	if m.OrigValue != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.OrigValue))
		i--
		dAtA[i] = 0x20
	}
	if m.CurValue != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.CurValue))
		i--
		dAtA[i] = 0x18
	}
	if m.AttrSort != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.AttrSort))
		i--
		dAtA[i] = 0x10
	}
	if m.Ret != nil {
		{
			size, err := m.Ret.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *C2S_ChangeUserStrAttr) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *C2S_ChangeUserStrAttr) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *C2S_ChangeUserStrAttr) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.ChangeToValue) > 0 {
		i -= len(m.ChangeToValue)
		copy(dAtA[i:], m.ChangeToValue)
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(len(m.ChangeToValue)))
		i--
		dAtA[i] = 0x12
	}
	if m.AttrSort != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.AttrSort))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *S2C_ChangeUserStrAttr) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *S2C_ChangeUserStrAttr) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *S2C_ChangeUserStrAttr) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Reason != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.Reason))
		i--
		dAtA[i] = 0x28
	}
	if len(m.OrigValue) > 0 {
		i -= len(m.OrigValue)
		copy(dAtA[i:], m.OrigValue)
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(len(m.OrigValue)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.CurValue) > 0 {
		i -= len(m.CurValue)
		copy(dAtA[i:], m.CurValue)
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(len(m.CurValue)))
		i--
		dAtA[i] = 0x1a
	}
	if m.AttrSort != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.AttrSort))
		i--
		dAtA[i] = 0x10
	}
	if m.Ret != nil {
		{
			size, err := m.Ret.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *S2C_AddAttrList) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *S2C_AddAttrList) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *S2C_AddAttrList) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Reason != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.Reason))
		i--
		dAtA[i] = 0x18
	}
	if len(m.ChangeValues) > 0 {
		dAtA69 := make([]byte, len(m.ChangeValues)*10)
		var j68 int
		for _, num1 := range m.ChangeValues {
			num := uint64(num1)
			for num >= 1<<7 {
				dAtA69[j68] = uint8(uint64(num)&0x7f | 0x80)
				num >>= 7
				j68++
			}
			dAtA69[j68] = uint8(num)
			j68++
		}
		i -= j68
		copy(dAtA[i:], dAtA69[:j68])
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(j68))
		i--
		dAtA[i] = 0x12
	}
	if m.AttrSort != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.AttrSort))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *C2S_StorePosition) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *C2S_StorePosition) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *C2S_StorePosition) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Y != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.Y))
		i--
		dAtA[i] = 0x10
	}
	if m.X != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.X))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *ShopItem) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ShopItem) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ShopItem) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.WebOrder != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.WebOrder))
		i--
		dAtA[i] = 0x58
	}
	if m.WebChargeId != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.WebChargeId))
		i--
		dAtA[i] = 0x50
	}
	if m.EndTime != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.EndTime))
		i--
		dAtA[i] = 0x48
	}
	if m.StartTime != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.StartTime))
		i--
		dAtA[i] = 0x40
	}
	if m.PurchasePrice != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.PurchasePrice))
		i--
		dAtA[i] = 0x38
	}
	if m.MaxLimit != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.MaxLimit))
		i--
		dAtA[i] = 0x30
	}
	if m.CurrentTurnBuyNo != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.CurrentTurnBuyNo))
		i--
		dAtA[i] = 0x28
	}
	if m.IsTimeLimit {
		i--
		if m.IsTimeLimit {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x20
	}
	if m.ResetTimeStamp != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.ResetTimeStamp))
		i--
		dAtA[i] = 0x18
	}
	if m.Restriction != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.Restriction))
		i--
		dAtA[i] = 0x10
	}
	if m.Id != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *HasBuyItem) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *HasBuyItem) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *HasBuyItem) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.WebOrder != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.WebOrder))
		i--
		dAtA[i] = 0x20
	}
	if m.WebChargeId != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.WebChargeId))
		i--
		dAtA[i] = 0x18
	}
	if m.HasBuy {
		i--
		if m.HasBuy {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x10
	}
	if m.Id != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *S2C_Shop_GetAllItems) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *S2C_Shop_GetAllItems) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *S2C_Shop_GetAllItems) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.MonthCard) > 0 {
		for iNdEx := len(m.MonthCard) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.MonthCard[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x1a
		}
	}
	if len(m.GiftList) > 0 {
		for iNdEx := len(m.GiftList) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.GiftList[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x12
		}
	}
	if len(m.ChargePearl) > 0 {
		for iNdEx := len(m.ChargePearl) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.ChargePearl[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *C2S_Shop_Buy) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *C2S_Shop_Buy) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *C2S_Shop_Buy) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.ClientPrice != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.ClientPrice))
		i--
		dAtA[i] = 0x10
	}
	if m.Id != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *BuyResult) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *BuyResult) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *BuyResult) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.CurrentTurnBuyNo != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.CurrentTurnBuyNo))
		i--
		dAtA[i] = 0x10
	}
	if m.ResetTimeStamp != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.ResetTimeStamp))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *S2C_Shop_Buy) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *S2C_Shop_Buy) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *S2C_Shop_Buy) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Buyres != nil {
		{
			size, err := m.Buyres.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x22
	}
	if m.Notice != nil {
		{
			size, err := m.Notice.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if m.Result != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.Result))
		i--
		dAtA[i] = 0x10
	}
	if m.Id != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *C2S_Recharge_GetGift) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *C2S_Recharge_GetGift) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *C2S_Recharge_GetGift) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.OrderId) > 0 {
		i -= len(m.OrderId)
		copy(dAtA[i:], m.OrderId)
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(len(m.OrderId)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *S2C_Recharge_GetGift) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *S2C_Recharge_GetGift) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *S2C_Recharge_GetGift) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Notice != nil {
		{
			size, err := m.Notice.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x22
	}
	if m.ErrCode != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.ErrCode))
		i--
		dAtA[i] = 0x18
	}
	if m.GiftId != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.GiftId))
		i--
		dAtA[i] = 0x10
	}
	if len(m.OrderId) > 0 {
		i -= len(m.OrderId)
		copy(dAtA[i:], m.OrderId)
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(len(m.OrderId)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *C2S_Recharge_GetGiftConfirm) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *C2S_Recharge_GetGiftConfirm) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *C2S_Recharge_GetGiftConfirm) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.OrderId) > 0 {
		i -= len(m.OrderId)
		copy(dAtA[i:], m.OrderId)
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(len(m.OrderId)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *C2S_Vip_ExpireDate) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *C2S_Vip_ExpireDate) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *C2S_Vip_ExpireDate) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	return len(dAtA) - i, nil
}

func (m *S2C_Vip_ExpireDate) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *S2C_Vip_ExpireDate) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *S2C_Vip_ExpireDate) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.ExpireDate) > 0 {
		dAtA74 := make([]byte, len(m.ExpireDate)*10)
		var j73 int
		for _, num1 := range m.ExpireDate {
			num := uint64(num1)
			for num >= 1<<7 {
				dAtA74[j73] = uint8(uint64(num)&0x7f | 0x80)
				num >>= 7
				j73++
			}
			dAtA74[j73] = uint8(num)
			j73++
		}
		i -= j73
		copy(dAtA[i:], dAtA74[:j73])
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(j73))
		i--
		dAtA[i] = 0x12
	}
	if len(m.CardListId) > 0 {
		dAtA76 := make([]byte, len(m.CardListId)*10)
		var j75 int
		for _, num1 := range m.CardListId {
			num := uint64(num1)
			for num >= 1<<7 {
				dAtA76[j75] = uint8(uint64(num)&0x7f | 0x80)
				num >>= 7
				j75++
			}
			dAtA76[j75] = uint8(num)
			j75++
		}
		i -= j75
		copy(dAtA[i:], dAtA76[:j75])
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(j75))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *S2C_Vip_BuyReward) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *S2C_Vip_BuyReward) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *S2C_Vip_BuyReward) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.CardId != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.CardId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *S2C_Vip_DailyReward) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *S2C_Vip_DailyReward) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *S2C_Vip_DailyReward) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.CardListId) > 0 {
		dAtA78 := make([]byte, len(m.CardListId)*10)
		var j77 int
		for _, num1 := range m.CardListId {
			num := uint64(num1)
			for num >= 1<<7 {
				dAtA78[j77] = uint8(uint64(num)&0x7f | 0x80)
				num >>= 7
				j77++
			}
			dAtA78[j77] = uint8(num)
			j77++
		}
		i -= j77
		copy(dAtA[i:], dAtA78[:j77])
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(j77))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *S2C_AntiAddictInfo) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *S2C_AntiAddictInfo) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *S2C_AntiAddictInfo) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.LastPayDate != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.LastPayDate))
		i--
		dAtA[i] = 0x30
	}
	if m.MonthPay != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.MonthPay))
		i--
		dAtA[i] = 0x28
	}
	if m.TodayPay != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.TodayPay))
		i--
		dAtA[i] = 0x20
	}
	if m.Age != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.Age))
		i--
		dAtA[i] = 0x18
	}
	if m.TodayPlayTime != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.TodayPlayTime))
		i--
		dAtA[i] = 0x10
	}
	if m.TotalPlayTime != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.TotalPlayTime))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *C2S_VerifiedIDCard) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *C2S_VerifiedIDCard) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *C2S_VerifiedIDCard) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Phone) > 0 {
		i -= len(m.Phone)
		copy(dAtA[i:], m.Phone)
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(len(m.Phone)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.IdCard) > 0 {
		i -= len(m.IdCard)
		copy(dAtA[i:], m.IdCard)
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(len(m.IdCard)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Name) > 0 {
		i -= len(m.Name)
		copy(dAtA[i:], m.Name)
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(len(m.Name)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *S2C_Functions) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *S2C_Functions) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *S2C_Functions) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.End) > 0 {
		dAtA80 := make([]byte, len(m.End)*10)
		var j79 int
		for _, num1 := range m.End {
			num := uint64(num1)
			for num >= 1<<7 {
				dAtA80[j79] = uint8(uint64(num)&0x7f | 0x80)
				num >>= 7
				j79++
			}
			dAtA80[j79] = uint8(num)
			j79++
		}
		i -= j79
		copy(dAtA[i:], dAtA80[:j79])
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(j79))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Begin) > 0 {
		dAtA82 := make([]byte, len(m.Begin)*10)
		var j81 int
		for _, num1 := range m.Begin {
			num := uint64(num1)
			for num >= 1<<7 {
				dAtA82[j81] = uint8(uint64(num)&0x7f | 0x80)
				num >>= 7
				j81++
			}
			dAtA82[j81] = uint8(num)
			j81++
		}
		i -= j81
		copy(dAtA[i:], dAtA82[:j81])
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(j81))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Code) > 0 {
		dAtA84 := make([]byte, len(m.Code)*10)
		var j83 int
		for _, num1 := range m.Code {
			num := uint64(num1)
			for num >= 1<<7 {
				dAtA84[j83] = uint8(uint64(num)&0x7f | 0x80)
				num >>= 7
				j83++
			}
			dAtA84[j83] = uint8(num)
			j83++
		}
		i -= j83
		copy(dAtA[i:], dAtA84[:j83])
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(j83))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *S2C_ShowNotice) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *S2C_ShowNotice) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *S2C_ShowNotice) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Notice) > 0 {
		i -= len(m.Notice)
		copy(dAtA[i:], m.Notice)
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(len(m.Notice)))
		i--
		dAtA[i] = 0x12
	}
	if m.ShowType != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.ShowType))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *XConfig) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *XConfig) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *XConfig) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Value) > 0 {
		i -= len(m.Value)
		copy(dAtA[i:], m.Value)
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(len(m.Value)))
		i--
		dAtA[i] = 0x12
	}
	if m.Key != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.Key))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *S2C_SyncConfig) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *S2C_SyncConfig) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *S2C_SyncConfig) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Config) > 0 {
		for iNdEx := len(m.Config) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Config[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *Attachment_Item) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Attachment_Item) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Attachment_Item) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Number != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.Number))
		i--
		dAtA[i] = 0x10
	}
	if m.Id != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *EmailItem) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *EmailItem) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *EmailItem) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Status != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.Status))
		i--
		dAtA[i] = 0x40
	}
	if len(m.Attachment) > 0 {
		for iNdEx := len(m.Attachment) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Attachment[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x3a
		}
	}
	if m.InvalidTime != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.InvalidTime))
		i--
		dAtA[i] = 0x30
	}
	if m.SendTime != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.SendTime))
		i--
		dAtA[i] = 0x28
	}
	if len(m.Content) > 0 {
		i -= len(m.Content)
		copy(dAtA[i:], m.Content)
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(len(m.Content)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.Title) > 0 {
		i -= len(m.Title)
		copy(dAtA[i:], m.Title)
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(len(m.Title)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Sender) > 0 {
		i -= len(m.Sender)
		copy(dAtA[i:], m.Sender)
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(len(m.Sender)))
		i--
		dAtA[i] = 0x12
	}
	if m.Id != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *SimpleEmailItem) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *SimpleEmailItem) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *SimpleEmailItem) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.HaveAttachment {
		i--
		if m.HaveAttachment {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x38
	}
	if m.InvalidTime != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.InvalidTime))
		i--
		dAtA[i] = 0x30
	}
	if m.SendTime != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.SendTime))
		i--
		dAtA[i] = 0x28
	}
	if m.Status != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.Status))
		i--
		dAtA[i] = 0x20
	}
	if len(m.Sender) > 0 {
		i -= len(m.Sender)
		copy(dAtA[i:], m.Sender)
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(len(m.Sender)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Title) > 0 {
		i -= len(m.Title)
		copy(dAtA[i:], m.Title)
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(len(m.Title)))
		i--
		dAtA[i] = 0x12
	}
	if m.Id != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *S2C_SimpleEmailItemList) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *S2C_SimpleEmailItemList) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *S2C_SimpleEmailItemList) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.SimpleItems) > 0 {
		for iNdEx := len(m.SimpleItems) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.SimpleItems[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *S2C_EmailOpResult) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *S2C_EmailOpResult) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *S2C_EmailOpResult) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Op != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.Op))
		i--
		dAtA[i] = 0x18
	}
	if m.Res != nil {
		{
			size, err := m.Res.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	if m.Id != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *C2S_EmailOp) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *C2S_EmailOp) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *C2S_EmailOp) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Op != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.Op))
		i--
		dAtA[i] = 0x10
	}
	if m.Id != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *FriendInfo) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *FriendInfo) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *FriendInfo) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Info != nil {
		{
			size, err := m.Info.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	if m.CharmPoint != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.CharmPoint))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *FriendSimpleInfo) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *FriendSimpleInfo) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *FriendSimpleInfo) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.ManorName) > 0 {
		i -= len(m.ManorName)
		copy(dAtA[i:], m.ManorName)
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(len(m.ManorName)))
		i--
		dAtA[i] = 0x6a
	}
	if m.IsSendFriendEnergy {
		i--
		if m.IsSendFriendEnergy {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x60
	}
	if m.IsGetFriendSendMeEnergy {
		i--
		if m.IsGetFriendSendMeEnergy {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x58
	}
	if m.IsFriendSendMeEnergy {
		i--
		if m.IsFriendSendMeEnergy {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x50
	}
	if m.Frame != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.Frame))
		i--
		dAtA[i] = 0x48
	}
	if m.Icon != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.Icon))
		i--
		dAtA[i] = 0x40
	}
	if m.OfflineDate != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.OfflineDate))
		i--
		dAtA[i] = 0x38
	}
	if m.State {
		i--
		if m.State {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x30
	}
	if m.GameId != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.GameId))
		i--
		dAtA[i] = 0x28
	}
	if m.Lv != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.Lv))
		i--
		dAtA[i] = 0x20
	}
	if len(m.Remarks) > 0 {
		i -= len(m.Remarks)
		copy(dAtA[i:], m.Remarks)
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(len(m.Remarks)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.NickName) > 0 {
		i -= len(m.NickName)
		copy(dAtA[i:], m.NickName)
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(len(m.NickName)))
		i--
		dAtA[i] = 0x12
	}
	if m.UserId != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.UserId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *BlockPerson) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *BlockPerson) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *BlockPerson) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.NickName) > 0 {
		i -= len(m.NickName)
		copy(dAtA[i:], m.NickName)
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(len(m.NickName)))
		i--
		dAtA[i] = 0x22
	}
	if m.Frame != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.Frame))
		i--
		dAtA[i] = 0x18
	}
	if m.Cloth != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.Cloth))
		i--
		dAtA[i] = 0x10
	}
	if m.UserId != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.UserId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *S2C_Friend_GetList) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *S2C_Friend_GetList) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *S2C_Friend_GetList) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.BlockList) > 0 {
		for iNdEx := len(m.BlockList) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.BlockList[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x1a
		}
	}
	if m.GetFriendEnergyNo != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.GetFriendEnergyNo))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Friends) > 0 {
		for iNdEx := len(m.Friends) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Friends[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *C2S_Friend_Apply) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *C2S_Friend_Apply) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *C2S_Friend_Apply) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Remarks) > 0 {
		i -= len(m.Remarks)
		copy(dAtA[i:], m.Remarks)
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(len(m.Remarks)))
		i--
		dAtA[i] = 0x12
	}
	if m.UserId != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.UserId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *S2C_Friend_Apply) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *S2C_Friend_Apply) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *S2C_Friend_Apply) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Result != nil {
		{
			size, err := m.Result.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if m.ReceiverId != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.ReceiverId))
		i--
		dAtA[i] = 0x10
	}
	if m.SenderId != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.SenderId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *C2S_Friend_Delete) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *C2S_Friend_Delete) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *C2S_Friend_Delete) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.UserId != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.UserId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *S2C_Friend_Delete) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *S2C_Friend_Delete) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *S2C_Friend_Delete) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Result != nil {
		{
			size, err := m.Result.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	if m.UserId != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.UserId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *C2S_Friend_Chat) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *C2S_Friend_Chat) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *C2S_Friend_Chat) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Msg) > 0 {
		i -= len(m.Msg)
		copy(dAtA[i:], m.Msg)
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(len(m.Msg)))
		i--
		dAtA[i] = 0x1a
	}
	if m.MsgId != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.MsgId))
		i--
		dAtA[i] = 0x10
	}
	if m.UserId != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.UserId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *S2C_Friend_Chat) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *S2C_Friend_Chat) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *S2C_Friend_Chat) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Ret != nil {
		{
			size, err := m.Ret.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	if m.MsgId != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.MsgId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *ChatInfo) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ChatInfo) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ChatInfo) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.SendDate != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.SendDate))
		i--
		dAtA[i] = 0x18
	}
	if len(m.Msg) > 0 {
		i -= len(m.Msg)
		copy(dAtA[i:], m.Msg)
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(len(m.Msg)))
		i--
		dAtA[i] = 0x12
	}
	if m.SenderId != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.SenderId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *S2C_Friend_OnLineMsg) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *S2C_Friend_OnLineMsg) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *S2C_Friend_OnLineMsg) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Msg != nil {
		{
			size, err := m.Msg.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *S2C_Friend_OfflineMsg) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *S2C_Friend_OfflineMsg) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *S2C_Friend_OfflineMsg) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Msg) > 0 {
		for iNdEx := len(m.Msg) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Msg[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *C2S_Friend_Remarks) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *C2S_Friend_Remarks) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *C2S_Friend_Remarks) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Remarks) > 0 {
		i -= len(m.Remarks)
		copy(dAtA[i:], m.Remarks)
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(len(m.Remarks)))
		i--
		dAtA[i] = 0x12
	}
	if m.UserId != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.UserId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *S2C_Friend_Remarks) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *S2C_Friend_Remarks) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *S2C_Friend_Remarks) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Result != nil {
		{
			size, err := m.Result.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Remarks) > 0 {
		i -= len(m.Remarks)
		copy(dAtA[i:], m.Remarks)
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(len(m.Remarks)))
		i--
		dAtA[i] = 0x12
	}
	if m.UserId != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.UserId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *S2C_Friend_Recommend) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *S2C_Friend_Recommend) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *S2C_Friend_Recommend) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Friends) > 0 {
		for iNdEx := len(m.Friends) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Friends[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *S2C_Friend_State) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *S2C_Friend_State) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *S2C_Friend_State) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Info != nil {
		{
			size, err := m.Info.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *C2S_Friend_Card) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *C2S_Friend_Card) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *C2S_Friend_Card) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.UserId != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.UserId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *S2C_Friend_Card) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *S2C_Friend_Card) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *S2C_Friend_Card) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Friend != nil {
		{
			size, err := m.Friend.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *C2S_Friend_Search) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *C2S_Friend_Search) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *C2S_Friend_Search) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.NickName) > 0 {
		i -= len(m.NickName)
		copy(dAtA[i:], m.NickName)
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(len(m.NickName)))
		i--
		dAtA[i] = 0x12
	}
	if m.GameId != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.GameId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *S2C_Friend_Search) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *S2C_Friend_Search) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *S2C_Friend_Search) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Friends) > 0 {
		for iNdEx := len(m.Friends) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Friends[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *C2S_Friend_DealApply) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *C2S_Friend_DealApply) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *C2S_Friend_DealApply) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Result {
		i--
		if m.Result {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x10
	}
	if len(m.UserId) > 0 {
		dAtA95 := make([]byte, len(m.UserId)*10)
		var j94 int
		for _, num1 := range m.UserId {
			num := uint64(num1)
			for num >= 1<<7 {
				dAtA95[j94] = uint8(uint64(num)&0x7f | 0x80)
				num >>= 7
				j94++
			}
			dAtA95[j94] = uint8(num)
			j94++
		}
		i -= j94
		copy(dAtA[i:], dAtA95[:j94])
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(j94))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *S2C_Friend_DealApplyPass) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *S2C_Friend_DealApplyPass) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *S2C_Friend_DealApplyPass) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Friends) > 0 {
		for iNdEx := len(m.Friends) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Friends[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x12
		}
	}
	if m.Result != nil {
		{
			size, err := m.Result.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *S2C_Friend_DealApplyIgnore) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *S2C_Friend_DealApplyIgnore) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *S2C_Friend_DealApplyIgnore) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.FriendIds) > 0 {
		dAtA98 := make([]byte, len(m.FriendIds)*10)
		var j97 int
		for _, num1 := range m.FriendIds {
			num := uint64(num1)
			for num >= 1<<7 {
				dAtA98[j97] = uint8(uint64(num)&0x7f | 0x80)
				num >>= 7
				j97++
			}
			dAtA98[j97] = uint8(num)
			j97++
		}
		i -= j97
		copy(dAtA[i:], dAtA98[:j97])
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(j97))
		i--
		dAtA[i] = 0x12
	}
	if m.Result != nil {
		{
			size, err := m.Result.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *S2C_Friend_ApplyList) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *S2C_Friend_ApplyList) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *S2C_Friend_ApplyList) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Applications) > 0 {
		for iNdEx := len(m.Applications) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Applications[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *C2S_Friend_SendEnergy) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *C2S_Friend_SendEnergy) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *C2S_Friend_SendEnergy) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.UserId != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.UserId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *S2C_Friend_SendEnergy) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *S2C_Friend_SendEnergy) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *S2C_Friend_SendEnergy) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Result != nil {
		{
			size, err := m.Result.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if m.RecvId != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.RecvId))
		i--
		dAtA[i] = 0x10
	}
	if m.SenderId != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.SenderId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *S2C_Friend_SendEnergyAll) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *S2C_Friend_SendEnergyAll) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *S2C_Friend_SendEnergyAll) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Result != nil {
		{
			size, err := m.Result.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	if len(m.UserIds) > 0 {
		dAtA103 := make([]byte, len(m.UserIds)*10)
		var j102 int
		for _, num1 := range m.UserIds {
			num := uint64(num1)
			for num >= 1<<7 {
				dAtA103[j102] = uint8(uint64(num)&0x7f | 0x80)
				num >>= 7
				j102++
			}
			dAtA103[j102] = uint8(num)
			j102++
		}
		i -= j102
		copy(dAtA[i:], dAtA103[:j102])
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(j102))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *S2C_Friend_GetEnergyAll) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *S2C_Friend_GetEnergyAll) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *S2C_Friend_GetEnergyAll) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Result != nil {
		{
			size, err := m.Result.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	if len(m.UserIds) > 0 {
		dAtA106 := make([]byte, len(m.UserIds)*10)
		var j105 int
		for _, num1 := range m.UserIds {
			num := uint64(num1)
			for num >= 1<<7 {
				dAtA106[j105] = uint8(uint64(num)&0x7f | 0x80)
				num >>= 7
				j105++
			}
			dAtA106[j105] = uint8(num)
			j105++
		}
		i -= j105
		copy(dAtA[i:], dAtA106[:j105])
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(j105))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *S2C_Friend_GetEnergy) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *S2C_Friend_GetEnergy) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *S2C_Friend_GetEnergy) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Result != nil {
		{
			size, err := m.Result.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	if m.UserId != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.UserId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *C2S_Friend_GetEnergy) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *C2S_Friend_GetEnergy) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *C2S_Friend_GetEnergy) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.UserId != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.UserId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *C2S_Friend_AddBlock) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *C2S_Friend_AddBlock) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *C2S_Friend_AddBlock) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.NickName) > 0 {
		i -= len(m.NickName)
		copy(dAtA[i:], m.NickName)
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(len(m.NickName)))
		i--
		dAtA[i] = 0x22
	}
	if m.Frame != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.Frame))
		i--
		dAtA[i] = 0x18
	}
	if m.Cloth != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.Cloth))
		i--
		dAtA[i] = 0x10
	}
	if m.UserId != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.UserId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *S2C_Friend_AddBlock) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *S2C_Friend_AddBlock) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *S2C_Friend_AddBlock) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Result != nil {
		{
			size, err := m.Result.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	if m.UserId != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.UserId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *C2S_Friend_DelBlock) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *C2S_Friend_DelBlock) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *C2S_Friend_DelBlock) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.UserId != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.UserId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *S2C_Friend_DelBlock) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *S2C_Friend_DelBlock) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *S2C_Friend_DelBlock) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Result != nil {
		{
			size, err := m.Result.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	if m.UserId != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.UserId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *SceneUser) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *SceneUser) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *SceneUser) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Level != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.Level))
		i--
		dAtA[i] = 0x20
	}
	if m.ClothesId != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.ClothesId))
		i--
		dAtA[i] = 0x18
	}
	if len(m.Name) > 0 {
		i -= len(m.Name)
		copy(dAtA[i:], m.Name)
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(len(m.Name)))
		i--
		dAtA[i] = 0x12
	}
	if m.UserId != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.UserId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *PosInfo) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *PosInfo) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *PosInfo) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.FindWay {
		i--
		if m.FindWay {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x30
	}
	if m.DirZ != 0 {
		i -= 8
		encoding_binary.LittleEndian.PutUint64(dAtA[i:], uint64(math.Float64bits(float64(m.DirZ))))
		i--
		dAtA[i] = 0x29
	}
	if m.DirX != 0 {
		i -= 8
		encoding_binary.LittleEndian.PutUint64(dAtA[i:], uint64(math.Float64bits(float64(m.DirX))))
		i--
		dAtA[i] = 0x21
	}
	if m.PosZ != 0 {
		i -= 8
		encoding_binary.LittleEndian.PutUint64(dAtA[i:], uint64(math.Float64bits(float64(m.PosZ))))
		i--
		dAtA[i] = 0x19
	}
	if m.PosX != 0 {
		i -= 8
		encoding_binary.LittleEndian.PutUint64(dAtA[i:], uint64(math.Float64bits(float64(m.PosX))))
		i--
		dAtA[i] = 0x11
	}
	if m.UserId != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.UserId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *C2S_Syn_EnterScene) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *C2S_Syn_EnterScene) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *C2S_Syn_EnterScene) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Index != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.Index))
		i--
		dAtA[i] = 0x10
	}
	if m.TemplateId != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.TemplateId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *S2C_Syn_EnterScene) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *S2C_Syn_EnterScene) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *S2C_Syn_EnterScene) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Result != nil {
		{
			size, err := m.Result.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	if m.SceneId != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.SceneId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *C2S_Syn_SceneData) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *C2S_Syn_SceneData) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *C2S_Syn_SceneData) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.SceneId != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.SceneId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *S2C_Syn_SceneData) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *S2C_Syn_SceneData) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *S2C_Syn_SceneData) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Posdata) > 0 {
		for iNdEx := len(m.Posdata) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Posdata[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x12
		}
	}
	if len(m.BaseData) > 0 {
		for iNdEx := len(m.BaseData) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.BaseData[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *S2C_Syn_Info) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *S2C_Syn_Info) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *S2C_Syn_Info) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Data != nil {
		{
			size, err := m.Data.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *S2C_Syn_Pos) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *S2C_Syn_Pos) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *S2C_Syn_Pos) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Data != nil {
		{
			size, err := m.Data.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *C2S_Syn_Move) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *C2S_Syn_Move) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *C2S_Syn_Move) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Data != nil {
		{
			size, err := m.Data.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *C2S_Syn_ModifyRecvMsgStatus) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *C2S_Syn_ModifyRecvMsgStatus) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *C2S_Syn_ModifyRecvMsgStatus) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Status {
		i--
		if m.Status {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *S2C_Syn_LeaveScene) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *S2C_Syn_LeaveScene) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *S2C_Syn_LeaveScene) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.UserId != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.UserId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *Mouse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Mouse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Mouse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.MouseType != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.MouseType))
		i--
		dAtA[i] = 0x10
	}
	if m.MouseId != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.MouseId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *C2S_Mouse_EnterHole) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *C2S_Mouse_EnterHole) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *C2S_Mouse_EnterHole) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	return len(dAtA) - i, nil
}

func (m *S2C_Mouse_EnterHole) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *S2C_Mouse_EnterHole) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *S2C_Mouse_EnterHole) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Result != nil {
		{
			size, err := m.Result.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *S2C_Mouse_NewMouse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *S2C_Mouse_NewMouse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *S2C_Mouse_NewMouse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.MouseList) > 0 {
		for iNdEx := len(m.MouseList) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.MouseList[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *C2S_Mouse_Hit) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *C2S_Mouse_Hit) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *C2S_Mouse_Hit) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.MouseId != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.MouseId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *C2S_Mouse_Eat) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *C2S_Mouse_Eat) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *C2S_Mouse_Eat) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.MouseId != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.MouseId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *C2S_Mouse_Bomb) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *C2S_Mouse_Bomb) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *C2S_Mouse_Bomb) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	return len(dAtA) - i, nil
}

func (m *S2C_Mouse_Over) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *S2C_Mouse_Over) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *S2C_Mouse_Over) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	return len(dAtA) - i, nil
}

func (m *Fish) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Fish) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Fish) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.LifeTime != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.LifeTime))
		i--
		dAtA[i] = 0x18
	}
	if m.TemplateId != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.TemplateId))
		i--
		dAtA[i] = 0x10
	}
	if m.FishId != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.FishId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *C2S_Fish_SitDown) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *C2S_Fish_SitDown) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *C2S_Fish_SitDown) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.FishPondId != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.FishPondId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *S2C_Fish_SitDown) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *S2C_Fish_SitDown) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *S2C_Fish_SitDown) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Result != nil {
		{
			size, err := m.Result.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *C2S_Fish_StandUp) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *C2S_Fish_StandUp) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *C2S_Fish_StandUp) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	return len(dAtA) - i, nil
}

func (m *C2S_Fish_GetAllFish) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *C2S_Fish_GetAllFish) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *C2S_Fish_GetAllFish) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	return len(dAtA) - i, nil
}

func (m *S2C_Fish_GetAllFish) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *S2C_Fish_GetAllFish) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *S2C_Fish_GetAllFish) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.FishList) > 0 {
		for iNdEx := len(m.FishList) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.FishList[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *C2S_Fish_PullHook) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *C2S_Fish_PullHook) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *C2S_Fish_PullHook) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.FishId != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.FishId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *S2C_Fish_PullHook) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *S2C_Fish_PullHook) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *S2C_Fish_PullHook) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.ItemId != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.ItemId))
		i--
		dAtA[i] = 0x18
	}
	if m.Result != nil {
		{
			size, err := m.Result.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	if m.FishId != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.FishId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *S2C_Fish_NewFish) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *S2C_Fish_NewFish) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *S2C_Fish_NewFish) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.NewFish != nil {
		{
			size, err := m.NewFish.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *ManorBuilding) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ManorBuilding) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ManorBuilding) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.BuildEndTime != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.BuildEndTime))
		i--
		dAtA[i] = 0x38
	}
	if m.HasFinishBuild {
		i--
		if m.HasFinishBuild {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x30
	}
	if m.Orientation != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.Orientation))
		i--
		dAtA[i] = 0x28
	}
	if m.PosY != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.PosY))
		i--
		dAtA[i] = 0x20
	}
	if m.PosX != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.PosX))
		i--
		dAtA[i] = 0x18
	}
	if m.BuildId != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.BuildId))
		i--
		dAtA[i] = 0x10
	}
	if m.Uid != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.Uid))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *ManorStock) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ManorStock) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ManorStock) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.No != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.No))
		i--
		dAtA[i] = 0x10
	}
	if m.BuildId != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.BuildId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *S2C_Manor_AllInfo) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *S2C_Manor_AllInfo) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *S2C_Manor_AllInfo) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.ManorName) > 0 {
		i -= len(m.ManorName)
		copy(dAtA[i:], m.ManorName)
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(len(m.ManorName)))
		i--
		dAtA[i] = 0x2a
	}
	if m.OwnerId != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.OwnerId))
		i--
		dAtA[i] = 0x20
	}
	if len(m.JunkList) > 0 {
		for iNdEx := len(m.JunkList) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.JunkList[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x1a
		}
	}
	if len(m.FreshList) > 0 {
		for iNdEx := len(m.FreshList) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.FreshList[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x12
		}
	}
	if len(m.BuildingList) > 0 {
		for iNdEx := len(m.BuildingList) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.BuildingList[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *C2S_Manor_SaveAllPos) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *C2S_Manor_SaveAllPos) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *C2S_Manor_SaveAllPos) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.BuildingList) > 0 {
		for iNdEx := len(m.BuildingList) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.BuildingList[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *C2S_Manor_ChangeOne) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *C2S_Manor_ChangeOne) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *C2S_Manor_ChangeOne) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Orientation != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.Orientation))
		i--
		dAtA[i] = 0x30
	}
	if m.PosY != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.PosY))
		i--
		dAtA[i] = 0x28
	}
	if m.PosX != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.PosX))
		i--
		dAtA[i] = 0x20
	}
	if m.Action != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.Action))
		i--
		dAtA[i] = 0x18
	}
	if m.BuildId != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.BuildId))
		i--
		dAtA[i] = 0x10
	}
	if m.Uid != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.Uid))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *S2C_Manor_ChangeOne) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *S2C_Manor_ChangeOne) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *S2C_Manor_ChangeOne) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Action != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.Action))
		i--
		dAtA[i] = 0x18
	}
	if m.BuildResult != nil {
		{
			size, err := m.BuildResult.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	if m.Res != nil {
		{
			size, err := m.Res.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *S2C_Manor_BuyBuilding) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *S2C_Manor_BuyBuilding) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *S2C_Manor_BuyBuilding) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.BuildUid != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.BuildUid))
		i--
		dAtA[i] = 0x18
	}
	if m.BuildId != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.BuildId))
		i--
		dAtA[i] = 0x10
	}
	if m.Res != nil {
		{
			size, err := m.Res.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *XAnything) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *XAnything) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *XAnything) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Count != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.Count))
		i--
		dAtA[i] = 0x10
	}
	if m.Id != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *C2S_Anything_Add) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *C2S_Anything_Add) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *C2S_Anything_Add) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Data) > 0 {
		for iNdEx := len(m.Data) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Data[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *S2C_Anything_Add) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *S2C_Anything_Add) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *S2C_Anything_Add) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Ret != nil {
		{
			size, err := m.Ret.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *C2S_Anything_Sub) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *C2S_Anything_Sub) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *C2S_Anything_Sub) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Data) > 0 {
		for iNdEx := len(m.Data) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Data[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *S2C_Anything_Sub) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *S2C_Anything_Sub) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *S2C_Anything_Sub) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Ret != nil {
		{
			size, err := m.Ret.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *XCustomizeVarBool) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *XCustomizeVarBool) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *XCustomizeVarBool) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Value {
		i--
		if m.Value {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x10
	}
	if len(m.Name) > 0 {
		i -= len(m.Name)
		copy(dAtA[i:], m.Name)
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(len(m.Name)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *XCustomizeVarDouble) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *XCustomizeVarDouble) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *XCustomizeVarDouble) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Value != 0 {
		i -= 8
		encoding_binary.LittleEndian.PutUint64(dAtA[i:], uint64(math.Float64bits(float64(m.Value))))
		i--
		dAtA[i] = 0x11
	}
	if len(m.Name) > 0 {
		i -= len(m.Name)
		copy(dAtA[i:], m.Name)
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(len(m.Name)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *XCustomizeVarString) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *XCustomizeVarString) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *XCustomizeVarString) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Value) > 0 {
		i -= len(m.Value)
		copy(dAtA[i:], m.Value)
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(len(m.Value)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Name) > 0 {
		i -= len(m.Name)
		copy(dAtA[i:], m.Name)
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(len(m.Name)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *C2S_CustomizeVar_GetAll) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *C2S_CustomizeVar_GetAll) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *C2S_CustomizeVar_GetAll) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	return len(dAtA) - i, nil
}

func (m *S2C_CustomizeVar_GetAll) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *S2C_CustomizeVar_GetAll) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *S2C_CustomizeVar_GetAll) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.DataString) > 0 {
		for iNdEx := len(m.DataString) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.DataString[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x1a
		}
	}
	if len(m.DataDouble) > 0 {
		for iNdEx := len(m.DataDouble) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.DataDouble[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x12
		}
	}
	if len(m.DataBool) > 0 {
		for iNdEx := len(m.DataBool) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.DataBool[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *C2S_CustomizeVar_GetBoolValue) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *C2S_CustomizeVar_GetBoolValue) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *C2S_CustomizeVar_GetBoolValue) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.DefaultValue {
		i--
		if m.DefaultValue {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x18
	}
	if len(m.Name) > 0 {
		i -= len(m.Name)
		copy(dAtA[i:], m.Name)
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(len(m.Name)))
		i--
		dAtA[i] = 0x12
	}
	if m.UserId != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.UserId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *S2C_CustomizeVar_GetBoolValue) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *S2C_CustomizeVar_GetBoolValue) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *S2C_CustomizeVar_GetBoolValue) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Data != nil {
		{
			size, err := m.Data.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	if m.UserId != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.UserId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *C2S_CustomizeVar_GetDoubleValue) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *C2S_CustomizeVar_GetDoubleValue) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *C2S_CustomizeVar_GetDoubleValue) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.DefaultValue != 0 {
		i -= 8
		encoding_binary.LittleEndian.PutUint64(dAtA[i:], uint64(math.Float64bits(float64(m.DefaultValue))))
		i--
		dAtA[i] = 0x19
	}
	if len(m.Name) > 0 {
		i -= len(m.Name)
		copy(dAtA[i:], m.Name)
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(len(m.Name)))
		i--
		dAtA[i] = 0x12
	}
	if m.UserId != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.UserId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *S2C_CustomizeVar_GetDoubleValue) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *S2C_CustomizeVar_GetDoubleValue) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *S2C_CustomizeVar_GetDoubleValue) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Data != nil {
		{
			size, err := m.Data.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	if m.UserId != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.UserId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *C2S_CustomizeVar_GetStringValue) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *C2S_CustomizeVar_GetStringValue) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *C2S_CustomizeVar_GetStringValue) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.DefaultValue) > 0 {
		i -= len(m.DefaultValue)
		copy(dAtA[i:], m.DefaultValue)
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(len(m.DefaultValue)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Name) > 0 {
		i -= len(m.Name)
		copy(dAtA[i:], m.Name)
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(len(m.Name)))
		i--
		dAtA[i] = 0x12
	}
	if m.UserId != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.UserId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *S2C_CustomizeVar_GetStringValue) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *S2C_CustomizeVar_GetStringValue) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *S2C_CustomizeVar_GetStringValue) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Data != nil {
		{
			size, err := m.Data.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	if m.UserId != 0 {
		i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(m.UserId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *C2S_CustomizeVar_SetBoolValue) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *C2S_CustomizeVar_SetBoolValue) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *C2S_CustomizeVar_SetBoolValue) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Data != nil {
		{
			size, err := m.Data.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *C2S_CustomizeVar_SetDoubleValue) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *C2S_CustomizeVar_SetDoubleValue) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *C2S_CustomizeVar_SetDoubleValue) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Data != nil {
		{
			size, err := m.Data.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *C2S_CustomizeVar_SetStringValue) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *C2S_CustomizeVar_SetStringValue) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *C2S_CustomizeVar_SetStringValue) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Data != nil {
		{
			size, err := m.Data.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintProtoGameJiuMi(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func encodeVarintProtoGameJiuMi(dAtA []byte, offset int, v uint64) int {
	offset -= sovProtoGameJiuMi(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *F2S_RegisterServer) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Code)
	if l > 0 {
		n += 1 + l + sovProtoGameJiuMi(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *XSimpleUser) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.UserId != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.UserId))
	}
	if m.GameId != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.GameId))
	}
	l = len(m.NickName)
	if l > 0 {
		n += 1 + l + sovProtoGameJiuMi(uint64(l))
	}
	if m.Level != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.Level))
	}
	if m.FaceFrameId != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.FaceFrameId))
	}
	if m.WearingClothesId != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.WearingClothesId))
	}
	l = len(m.Token)
	if l > 0 {
		n += 1 + l + sovProtoGameJiuMi(uint64(l))
	}
	if len(m.Friends) > 0 {
		l = 0
		for _, e := range m.Friends {
			l += sovProtoGameJiuMi(uint64(e))
		}
		n += 2 + sovProtoGameJiuMi(uint64(l)) + l
	}
	if len(m.BlockList) > 0 {
		l = 0
		for _, e := range m.BlockList {
			l += sovProtoGameJiuMi(uint64(e))
		}
		n += 2 + sovProtoGameJiuMi(uint64(l)) + l
	}
	if m.BanTalk != 0 {
		n += 2 + sovProtoGameJiuMi(uint64(m.BanTalk))
	}
	if m.SceneId != 0 {
		n += 2 + sovProtoGameJiuMi(uint64(m.SceneId))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *S2F_RegisterServer) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Users) > 0 {
		for _, e := range m.Users {
			l = e.Size()
			n += 1 + l + sovProtoGameJiuMi(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *S2F_UserLogin) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.User != nil {
		l = m.User.Size()
		n += 1 + l + sovProtoGameJiuMi(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *F2S_UserLogin) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.UserId != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.UserId))
	}
	if m.Result {
		n += 2
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *S2F_UserLogout) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.UserId != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.UserId))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *S2F_UserAttrChange) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.UserId != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.UserId))
	}
	if m.Attr != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.Attr))
	}
	if m.AttrValueInt != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.AttrValueInt))
	}
	l = len(m.AttrValueStr)
	if l > 0 {
		n += 1 + l + sovProtoGameJiuMi(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *S2F_AddFriend) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.UserId != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.UserId))
	}
	if m.FriendId != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.FriendId))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *S2F_DelFriend) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.UserId != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.UserId))
	}
	if m.FriendId != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.FriendId))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *F2S_TalkToOfflineFriend) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Msg)
	if l > 0 {
		n += 1 + l + sovProtoGameJiuMi(uint64(l))
	}
	if m.UserId != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.UserId))
	}
	if m.MsgId != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.MsgId))
	}
	if m.ReceiverId != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.ReceiverId))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *C2F_Login) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.UserId != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.UserId))
	}
	l = len(m.Token)
	if l > 0 {
		n += 1 + l + sovProtoGameJiuMi(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *F2C_Login) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *S2F_SyncMyFriendList) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Friends) > 0 {
		l = 0
		for _, e := range m.Friends {
			l += sovProtoGameJiuMi(uint64(e))
		}
		n += 1 + sovProtoGameJiuMi(uint64(l)) + l
	}
	if m.UserId != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.UserId))
	}
	if len(m.BlockList) > 0 {
		l = 0
		for _, e := range m.BlockList {
			l += sovProtoGameJiuMi(uint64(e))
		}
		n += 1 + sovProtoGameJiuMi(uint64(l)) + l
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *S2F_AddBlock) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.UserId != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.UserId))
	}
	if m.TargetId != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.TargetId))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *S2F_DelBlock) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.UserId != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.UserId))
	}
	if m.TargetId != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.TargetId))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *S2F_ChannelSpeak) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.UserId != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.UserId))
	}
	l = len(m.NickName)
	if l > 0 {
		n += 1 + l + sovProtoGameJiuMi(uint64(l))
	}
	l = len(m.Msg)
	if l > 0 {
		n += 1 + l + sovProtoGameJiuMi(uint64(l))
	}
	if m.SpeakChannel != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.SpeakChannel))
	}
	if m.Receiver != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.Receiver))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *F2C_ChannelSpeak) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.UserId != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.UserId))
	}
	l = len(m.NickName)
	if l > 0 {
		n += 1 + l + sovProtoGameJiuMi(uint64(l))
	}
	l = len(m.Msg)
	if l > 0 {
		n += 1 + l + sovProtoGameJiuMi(uint64(l))
	}
	if m.ReceiverId != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.ReceiverId))
	}
	if m.SpeakChannel != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.SpeakChannel))
	}
	if m.FaceId != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.FaceId))
	}
	if m.FrameId != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.FrameId))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *C2F_ChannelSpeak) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Msg)
	if l > 0 {
		n += 1 + l + sovProtoGameJiuMi(uint64(l))
	}
	if m.SpeakChannel != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.SpeakChannel))
	}
	if m.Receiver != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.Receiver))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *F2C_ChannelSpeakResult) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Result != nil {
		l = m.Result.Size()
		n += 1 + l + sovProtoGameJiuMi(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *A2S_SystemNotice) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Id != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.Id))
	}
	if m.BeginTime != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.BeginTime))
	}
	if m.EndTime != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.EndTime))
	}
	if m.RepeatTimes != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.RepeatTimes))
	}
	if m.Interval != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.Interval))
	}
	l = len(m.Msg)
	if l > 0 {
		n += 1 + l + sovProtoGameJiuMi(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *S2F_EnterScene) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.UserId != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.UserId))
	}
	if m.SceneId != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.SceneId))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *XUser) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.UserId != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.UserId))
	}
	l = len(m.OpenId)
	if l > 0 {
		n += 1 + l + sovProtoGameJiuMi(uint64(l))
	}
	l = len(m.PhoneNo)
	if l > 0 {
		n += 1 + l + sovProtoGameJiuMi(uint64(l))
	}
	l = len(m.NickName)
	if l > 0 {
		n += 1 + l + sovProtoGameJiuMi(uint64(l))
	}
	if m.Level != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.Level))
	}
	if m.Exp != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.Exp))
	}
	if m.FaceId != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.FaceId))
	}
	if m.FaceFrameId != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.FaceFrameId))
	}
	if m.Energy != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.Energy))
	}
	if m.Charm != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.Charm))
	}
	if m.Shell != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.Shell))
	}
	if m.Pearl != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.Pearl))
	}
	if m.PearlBind != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.PearlBind))
	}
	if m.GameId != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.GameId))
	}
	l = len(m.IDCard)
	if l > 0 {
		n += 1 + l + sovProtoGameJiuMi(uint64(l))
	}
	l = len(m.RealName)
	if l > 0 {
		n += 2 + l + sovProtoGameJiuMi(uint64(l))
	}
	if m.ActivePointDaily != 0 {
		n += 2 + sovProtoGameJiuMi(uint64(m.ActivePointDaily))
	}
	if m.ActivePointWeek != 0 {
		n += 2 + sovProtoGameJiuMi(uint64(m.ActivePointWeek))
	}
	if m.BanTalk != 0 {
		n += 2 + sovProtoGameJiuMi(uint64(m.BanTalk))
	}
	if m.LastChangeNameTime != 0 {
		n += 2 + sovProtoGameJiuMi(uint64(m.LastChangeNameTime))
	}
	if len(m.SyntheticList) > 0 {
		l = 0
		for _, e := range m.SyntheticList {
			l += sovProtoGameJiuMi(uint64(e))
		}
		n += 2 + sovProtoGameJiuMi(uint64(l)) + l
	}
	if len(m.ClothesList) > 0 {
		l = 0
		for _, e := range m.ClothesList {
			l += sovProtoGameJiuMi(uint64(e))
		}
		n += 2 + sovProtoGameJiuMi(uint64(l)) + l
	}
	if m.WearingClothesId != 0 {
		n += 2 + sovProtoGameJiuMi(uint64(m.WearingClothesId))
	}
	if m.BulletinBoardId != 0 {
		n += 2 + sovProtoGameJiuMi(uint64(m.BulletinBoardId))
	}
	if m.PayTotal != 0 {
		n += 2 + sovProtoGameJiuMi(uint64(m.PayTotal))
	}
	if m.AlreadyRegistered {
		n += 3
	}
	l = len(m.ManorName)
	if l > 0 {
		n += 2 + l + sovProtoGameJiuMi(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *C2S_GuestLogin) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.MachineId)
	if l > 0 {
		n += 1 + l + sovProtoGameJiuMi(uint64(l))
	}
	l = len(m.OpenId)
	if l > 0 {
		n += 1 + l + sovProtoGameJiuMi(uint64(l))
	}
	if m.UserId != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.UserId))
	}
	l = len(m.Password)
	if l > 0 {
		n += 1 + l + sovProtoGameJiuMi(uint64(l))
	}
	l = len(m.IpAddr)
	if l > 0 {
		n += 1 + l + sovProtoGameJiuMi(uint64(l))
	}
	if m.Channel != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.Channel))
	}
	l = len(m.DeviceType)
	if l > 0 {
		n += 1 + l + sovProtoGameJiuMi(uint64(l))
	}
	if m.GameId != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.GameId))
	}
	if m.MainVer != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.MainVer))
	}
	if m.EvaluationVer != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.EvaluationVer))
	}
	if m.HotfixVer != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.HotfixVer))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *C2S_GameLogout) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.UserId != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.UserId))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *C2S_Register) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.ClothesId != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.ClothesId))
	}
	l = len(m.NickName)
	if l > 0 {
		n += 1 + l + sovProtoGameJiuMi(uint64(l))
	}
	l = len(m.ManorName)
	if l > 0 {
		n += 1 + l + sovProtoGameJiuMi(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *S2C_Register) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Ret != nil {
		l = m.Ret.Size()
		n += 1 + l + sovProtoGameJiuMi(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *C2S_String) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Str)
	if l > 0 {
		n += 1 + l + sovProtoGameJiuMi(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *C2SInt32) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Data != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.Data))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *C2S_Empty) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *FailNotice) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.FailCode != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.FailCode))
	}
	if len(m.Param) > 0 {
		for _, s := range m.Param {
			l = len(s)
			n += 1 + l + sovProtoGameJiuMi(uint64(l))
		}
	}
	l = len(m.FailMsg)
	if l > 0 {
		n += 1 + l + sovProtoGameJiuMi(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *OperationResult) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.IsSuccess {
		n += 2
	}
	if m.ErrCode != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.ErrCode))
	}
	if m.Msg != nil {
		l = m.Msg.Size()
		n += 1 + l + sovProtoGameJiuMi(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *XItem) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Uuid != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.Uuid))
	}
	if m.ItemId != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.ItemId))
	}
	if m.No != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.No))
	}
	l = len(m.Extra)
	if l > 0 {
		n += 1 + l + sovProtoGameJiuMi(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *FurnitureItem) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.ItemId != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.ItemId))
	}
	if m.No != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.No))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *S2C_AllItemInfo) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.SlotCellNo) > 0 {
		l = 0
		for _, e := range m.SlotCellNo {
			l += sovProtoGameJiuMi(uint64(e))
		}
		n += 1 + sovProtoGameJiuMi(uint64(l)) + l
	}
	if len(m.Items) > 0 {
		for _, e := range m.Items {
			l = e.Size()
			n += 1 + l + sovProtoGameJiuMi(uint64(l))
		}
	}
	if len(m.Furniture) > 0 {
		for _, e := range m.Furniture {
			l = e.Size()
			n += 1 + l + sovProtoGameJiuMi(uint64(l))
		}
	}
	if len(m.FloorList) > 0 {
		l = 0
		for _, e := range m.FloorList {
			l += sovProtoGameJiuMi(uint64(e))
		}
		n += 1 + sovProtoGameJiuMi(uint64(l)) + l
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *C2S_UseItem) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Item != nil {
		l = m.Item.Size()
		n += 1 + l + sovProtoGameJiuMi(uint64(l))
	}
	l = len(m.Param)
	if l > 0 {
		n += 1 + l + sovProtoGameJiuMi(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *S2C_UpdateItem) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Uuid != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.Uuid))
	}
	if m.ItemId != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.ItemId))
	}
	if m.CurrentNumber != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.CurrentNumber))
	}
	if m.OrigNumber != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.OrigNumber))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *S2C_BatchUpdateItem) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Items) > 0 {
		for _, e := range m.Items {
			l = e.Size()
			n += 1 + l + sovProtoGameJiuMi(uint64(l))
		}
	}
	if m.Reason != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.Reason))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *C2S_GetItemInfo) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Uuid != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.Uuid))
	}
	if m.ItemId != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.ItemId))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *S2C_GetItemInfo) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Item != nil {
		l = m.Item.Size()
		n += 1 + l + sovProtoGameJiuMi(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *S2C_SlotLevels) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.SlotCellNo) > 0 {
		l = 0
		for _, e := range m.SlotCellNo {
			l += sovProtoGameJiuMi(uint64(e))
		}
		n += 1 + sovProtoGameJiuMi(uint64(l)) + l
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *S2C_BatchAddFurniture) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Furniture) > 0 {
		for _, e := range m.Furniture {
			l = e.Size()
			n += 1 + l + sovProtoGameJiuMi(uint64(l))
		}
	}
	if m.Reason != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.Reason))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *XPuzzleInfo) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.PuzzleId != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.PuzzleId))
	}
	if m.BeginTime != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.BeginTime))
	}
	if m.ManureTimes != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.ManureTimes))
	}
	if m.GrawRate != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.GrawRate))
	}
	if m.CollectedTimes != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.CollectedTimes))
	}
	if m.SeedId != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.SeedId))
	}
	if m.PuzzleType != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.PuzzleType))
	}
	if m.NextStageTime != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.NextStageTime))
	}
	if m.Stage != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.Stage))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *C2S_Farm_GetFarmInfo) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *S2C_Farm_GetFarmInfo) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.AllPuzzle) > 0 {
		for _, e := range m.AllPuzzle {
			l = e.Size()
			n += 1 + l + sovProtoGameJiuMi(uint64(l))
		}
	}
	if len(m.EmptyPuzzleId) > 0 {
		l = 0
		for _, e := range m.EmptyPuzzleId {
			l += sovProtoGameJiuMi(uint64(e))
		}
		n += 1 + sovProtoGameJiuMi(uint64(l)) + l
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *C2S_Farm_Plant) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.PuzzleId != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.PuzzleId))
	}
	if m.SeedId != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.SeedId))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *S2C_Farm_Plant) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Result != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.Result))
	}
	if m.PuzzleId != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.PuzzleId))
	}
	if m.ItemId != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.ItemId))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *C2S_Farm_Manure) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.PuzzleId != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.PuzzleId))
	}
	if m.FertilizerId != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.FertilizerId))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *S2C_Farm_Manure) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Result != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.Result))
	}
	if m.PuzzleId != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.PuzzleId))
	}
	if m.ItemId != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.ItemId))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *S2C_Farm_PuzzleInfo) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Puzzle != nil {
		l = m.Puzzle.Size()
		n += 1 + l + sovProtoGameJiuMi(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *S2C_Farm_SyncStatus) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.PuzzleId != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.PuzzleId))
	}
	if m.Status != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.Status))
	}
	if m.NextStageTime != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.NextStageTime))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *C2S_Farm_UnlockPuzzle) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.PuzzleType != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.PuzzleType))
	}
	if m.PuzzleId != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.PuzzleId))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *S2C_Farm_UnlockPuzzle) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Result != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.Result))
	}
	if m.PuzzleId != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.PuzzleId))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *C2S_Farm_Water) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.PuzzleId != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.PuzzleId))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *S2C_Farm_Water) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Result != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.Result))
	}
	if m.PuzzleId != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.PuzzleId))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *C2S_Farm_Reap) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.PuzzleId != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.PuzzleId))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *S2C_Farm_Reap) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Result != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.Result))
	}
	if m.PuzzleId != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.PuzzleId))
	}
	if m.RewardId != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.RewardId))
	}
	if m.RewardCount != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.RewardCount))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *XPlantPuzzleInfo) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.PuzzleId != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.PuzzleId))
	}
	if m.BeginTime != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.BeginTime))
	}
	if m.CollectedTimes != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.CollectedTimes))
	}
	if m.SeedId != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.SeedId))
	}
	if m.NextStageTime != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.NextStageTime))
	}
	if m.Stage != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.Stage))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *S2C_PlantFarm_GetFarmInfo) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.BuildUId != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.BuildUId))
	}
	if m.BuildId != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.BuildId))
	}
	if len(m.AllPuzzle) > 0 {
		for _, e := range m.AllPuzzle {
			l = e.Size()
			n += 1 + l + sovProtoGameJiuMi(uint64(l))
		}
	}
	if len(m.EmptyPuzzleId) > 0 {
		l = 0
		for _, e := range m.EmptyPuzzleId {
			l += sovProtoGameJiuMi(uint64(e))
		}
		n += 1 + sovProtoGameJiuMi(uint64(l)) + l
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *C2S_PlantFarm_Plant) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.BuildUId != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.BuildUId))
	}
	if m.PuzzleId != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.PuzzleId))
	}
	if m.SeedId != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.SeedId))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *S2C_PlantFarm_Plant) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.BuildUId != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.BuildUId))
	}
	if m.Result != nil {
		l = m.Result.Size()
		n += 1 + l + sovProtoGameJiuMi(uint64(l))
	}
	if m.PuzzleId != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.PuzzleId))
	}
	if m.ItemId != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.ItemId))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *C2S_PlantFarm_PuzzleAction) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.BuildUId != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.BuildUId))
	}
	if m.PuzzleId != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.PuzzleId))
	}
	if m.Action != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.Action))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *S2C_PlantFarm_PuzzleInfo) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.BuildUId != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.BuildUId))
	}
	if m.Puzzle != nil {
		l = m.Puzzle.Size()
		n += 1 + l + sovProtoGameJiuMi(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *S2C_PlantFarm_Water) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.BuildUId != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.BuildUId))
	}
	if m.Result != nil {
		l = m.Result.Size()
		n += 1 + l + sovProtoGameJiuMi(uint64(l))
	}
	if m.PuzzleId != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.PuzzleId))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *S2C_PlantFarm_Reap) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.BuildUId != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.BuildUId))
	}
	if m.Result != nil {
		l = m.Result.Size()
		n += 1 + l + sovProtoGameJiuMi(uint64(l))
	}
	if m.PuzzleId != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.PuzzleId))
	}
	if len(m.RewardIds) > 0 {
		l = 0
		for _, e := range m.RewardIds {
			l += sovProtoGameJiuMi(uint64(e))
		}
		n += 1 + sovProtoGameJiuMi(uint64(l)) + l
	}
	if len(m.RewardCounts) > 0 {
		l = 0
		for _, e := range m.RewardCounts {
			l += sovProtoGameJiuMi(uint64(e))
		}
		n += 1 + sovProtoGameJiuMi(uint64(l)) + l
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *XAnimalPuzzleInfo) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.PuzzleId != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.PuzzleId))
	}
	if m.BeginTime != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.BeginTime))
	}
	if m.CollectedTimes != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.CollectedTimes))
	}
	if m.SeedId != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.SeedId))
	}
	if m.CurrentSatiety != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.CurrentSatiety))
	}
	if m.NeedTotalSatiety != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.NeedTotalSatiety))
	}
	if m.Stage != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.Stage))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *S2C_AnimalFarm_GetFarmInfo) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.BuildUId != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.BuildUId))
	}
	if m.BuildId != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.BuildId))
	}
	if len(m.AllPuzzle) > 0 {
		for _, e := range m.AllPuzzle {
			l = e.Size()
			n += 1 + l + sovProtoGameJiuMi(uint64(l))
		}
	}
	if len(m.EmptyPuzzleId) > 0 {
		l = 0
		for _, e := range m.EmptyPuzzleId {
			l += sovProtoGameJiuMi(uint64(e))
		}
		n += 1 + sovProtoGameJiuMi(uint64(l)) + l
	}
	if m.Inventory != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.Inventory))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *C2S_AnimalFarm_Plant) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.BuildUId != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.BuildUId))
	}
	if m.PuzzleId != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.PuzzleId))
	}
	if m.SeedId != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.SeedId))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *S2C_AnimalFarm_Plant) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.BuildUId != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.BuildUId))
	}
	if m.Result != nil {
		l = m.Result.Size()
		n += 1 + l + sovProtoGameJiuMi(uint64(l))
	}
	if m.PuzzleId != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.PuzzleId))
	}
	if m.ItemId != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.ItemId))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *C2S_AnimalFarm_PuzzleAction) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.BuildUId != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.BuildUId))
	}
	if m.PuzzleId != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.PuzzleId))
	}
	if m.Action != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.Action))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *S2C_AnimalFarm_PuzzleInfo) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.BuildUId != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.BuildUId))
	}
	if m.Puzzle != nil {
		l = m.Puzzle.Size()
		n += 1 + l + sovProtoGameJiuMi(uint64(l))
	}
	if m.Inventory != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.Inventory))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *S2C_AnimalFarm_Inventory) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.BuildUId != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.BuildUId))
	}
	if m.Inventory != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.Inventory))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *S2C_AnimalFarm_Reap) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.BuildUId != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.BuildUId))
	}
	if m.Result != nil {
		l = m.Result.Size()
		n += 1 + l + sovProtoGameJiuMi(uint64(l))
	}
	if m.PuzzleId != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.PuzzleId))
	}
	if len(m.RewardIds) > 0 {
		l = 0
		for _, e := range m.RewardIds {
			l += sovProtoGameJiuMi(uint64(e))
		}
		n += 1 + sovProtoGameJiuMi(uint64(l)) + l
	}
	if len(m.RewardCounts) > 0 {
		l = 0
		for _, e := range m.RewardCounts {
			l += sovProtoGameJiuMi(uint64(e))
		}
		n += 1 + sovProtoGameJiuMi(uint64(l)) + l
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *XMission) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Id != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.Id))
	}
	if m.Status != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.Status))
	}
	if len(m.CurrProcess) > 0 {
		l = 0
		for _, e := range m.CurrProcess {
			l += sovProtoGameJiuMi(uint64(e))
		}
		n += 1 + sovProtoGameJiuMi(uint64(l)) + l
	}
	if len(m.TotalProcess) > 0 {
		l = 0
		for _, e := range m.TotalProcess {
			l += sovProtoGameJiuMi(uint64(e))
		}
		n += 1 + sovProtoGameJiuMi(uint64(l)) + l
	}
	if m.CompleteTimes != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.CompleteTimes))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *C2S_AllMissionInfo) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *S2C_AllMissionInfo) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Missions) > 0 {
		for _, e := range m.Missions {
			l = e.Size()
			n += 1 + l + sovProtoGameJiuMi(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *C2S_OneMissionInfo) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Id != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.Id))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *S2C_OneMissionInfo) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Mission != nil {
		l = m.Mission.Size()
		n += 1 + l + sovProtoGameJiuMi(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *C2S_AcceptMission) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Id != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.Id))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *S2C_AcceptMission) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Id != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.Id))
	}
	if m.Ret != nil {
		l = m.Ret.Size()
		n += 1 + l + sovProtoGameJiuMi(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *C2S_ReportMission) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Id != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.Id))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *S2C_ReportMission) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Id != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.Id))
	}
	if m.Ret != nil {
		l = m.Ret.Size()
		n += 1 + l + sovProtoGameJiuMi(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *C2S_GetMissionReward) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Id != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.Id))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *S2C_GetMissionReward) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Id != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.Id))
	}
	if m.Ret != nil {
		l = m.Ret.Size()
		n += 1 + l + sovProtoGameJiuMi(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *S2C_MissionCanAcceptList) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.MissionId) > 0 {
		l = 0
		for _, e := range m.MissionId {
			l += sovProtoGameJiuMi(uint64(e))
		}
		n += 1 + sovProtoGameJiuMi(uint64(l)) + l
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *XFurniture) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Id != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.Id))
	}
	if m.Pos != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.Pos))
	}
	if m.Dir != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.Dir))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *XTheme) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Id != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.Id))
	}
	l = len(m.Name)
	if l > 0 {
		n += 1 + l + sovProtoGameJiuMi(uint64(l))
	}
	if m.Unlock {
		n += 2
	}
	if len(m.Furniturelist) > 0 {
		for _, e := range m.Furniturelist {
			l = e.Size()
			n += 1 + l + sovProtoGameJiuMi(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *XHomeInfo) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Level != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.Level))
	}
	if m.CurrThemeId != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.CurrThemeId))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *C2S_GetHomeInfo) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *S2C_GetHomeInfo) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Home != nil {
		l = m.Home.Size()
		n += 1 + l + sovProtoGameJiuMi(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *C2S_GetAllThemesInfo) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *S2C_GetAllThemesInfo) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Themes) > 0 {
		for _, e := range m.Themes {
			l = e.Size()
			n += 1 + l + sovProtoGameJiuMi(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *C2S_GetSingleThemeInfo) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Id != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.Id))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *S2C_GetSingleThemeInfo) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Theme != nil {
		l = m.Theme.Size()
		n += 1 + l + sovProtoGameJiuMi(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *C2S_SaveThemeInfo) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Theme != nil {
		l = m.Theme.Size()
		n += 1 + l + sovProtoGameJiuMi(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *C2S_HomeUp) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *C2S_ChangeThemeName) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Id != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.Id))
	}
	l = len(m.Name)
	if l > 0 {
		n += 1 + l + sovProtoGameJiuMi(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *C2S_UnlockTheme) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Id != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.Id))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *C2S_Forest_CutTree) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.TreeId != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.TreeId))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *S2C_Forest_CutTree) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.TreeId != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.TreeId))
	}
	if m.Ret != nil {
		l = m.Ret.Size()
		n += 1 + l + sovProtoGameJiuMi(uint64(l))
	}
	if len(m.ItemId) > 0 {
		l = 0
		for _, e := range m.ItemId {
			l += sovProtoGameJiuMi(uint64(e))
		}
		n += 1 + sovProtoGameJiuMi(uint64(l)) + l
	}
	if len(m.ItemCount) > 0 {
		l = 0
		for _, e := range m.ItemCount {
			l += sovProtoGameJiuMi(uint64(e))
		}
		n += 1 + sovProtoGameJiuMi(uint64(l)) + l
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *C2S_Mine_GetMaxLayer) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *S2C_Mine_GetMaxLayer) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.MaxLayer != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.MaxLayer))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *C2S_Mine_EnterLayer) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Layer != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.Layer))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *S2C_Mine_EnterLayer) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Layer != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.Layer))
	}
	if m.ErrCode != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.ErrCode))
	}
	if m.StartIndex != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.StartIndex))
	}
	if m.NeedEnergy != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.NeedEnergy))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *C2S_Mine_Dig) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Index != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.Index))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *S2C_Mine_Dig) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Index != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.Index))
	}
	if m.ErrCode != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.ErrCode))
	}
	if m.ItemId != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.ItemId))
	}
	if m.ItemCount != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.ItemCount))
	}
	if m.RewardType != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.RewardType))
	}
	if m.Rewardid != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.Rewardid))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *C2S_Mine_GetReward) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Index != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.Index))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *S2C_Mine_GetReward) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Index != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.Index))
	}
	if m.ErrCode != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.ErrCode))
	}
	if m.ItemId != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.ItemId))
	}
	if m.ItemCount != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.ItemCount))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *C2S_GetUserAllValue) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *S2C_GetUserAllValue) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.UserValue != nil {
		l = m.UserValue.Size()
		n += 1 + l + sovProtoGameJiuMi(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *C2S_ChangeUserIntAttr) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.AttrSort != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.AttrSort))
	}
	if m.ChangeToValue != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.ChangeToValue))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *S2C_ChangeUserIntAttr) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Ret != nil {
		l = m.Ret.Size()
		n += 1 + l + sovProtoGameJiuMi(uint64(l))
	}
	if m.AttrSort != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.AttrSort))
	}
	if m.CurValue != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.CurValue))
	}
	if m.OrigValue != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.OrigValue))
	}
	if m.Reason != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.Reason))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *C2S_ChangeUserStrAttr) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.AttrSort != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.AttrSort))
	}
	l = len(m.ChangeToValue)
	if l > 0 {
		n += 1 + l + sovProtoGameJiuMi(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *S2C_ChangeUserStrAttr) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Ret != nil {
		l = m.Ret.Size()
		n += 1 + l + sovProtoGameJiuMi(uint64(l))
	}
	if m.AttrSort != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.AttrSort))
	}
	l = len(m.CurValue)
	if l > 0 {
		n += 1 + l + sovProtoGameJiuMi(uint64(l))
	}
	l = len(m.OrigValue)
	if l > 0 {
		n += 1 + l + sovProtoGameJiuMi(uint64(l))
	}
	if m.Reason != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.Reason))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *S2C_AddAttrList) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.AttrSort != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.AttrSort))
	}
	if len(m.ChangeValues) > 0 {
		l = 0
		for _, e := range m.ChangeValues {
			l += sovProtoGameJiuMi(uint64(e))
		}
		n += 1 + sovProtoGameJiuMi(uint64(l)) + l
	}
	if m.Reason != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.Reason))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *C2S_StorePosition) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.X != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.X))
	}
	if m.Y != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.Y))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ShopItem) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Id != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.Id))
	}
	if m.Restriction != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.Restriction))
	}
	if m.ResetTimeStamp != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.ResetTimeStamp))
	}
	if m.IsTimeLimit {
		n += 2
	}
	if m.CurrentTurnBuyNo != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.CurrentTurnBuyNo))
	}
	if m.MaxLimit != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.MaxLimit))
	}
	if m.PurchasePrice != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.PurchasePrice))
	}
	if m.StartTime != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.StartTime))
	}
	if m.EndTime != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.EndTime))
	}
	if m.WebChargeId != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.WebChargeId))
	}
	if m.WebOrder != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.WebOrder))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *HasBuyItem) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Id != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.Id))
	}
	if m.HasBuy {
		n += 2
	}
	if m.WebChargeId != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.WebChargeId))
	}
	if m.WebOrder != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.WebOrder))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *S2C_Shop_GetAllItems) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.ChargePearl) > 0 {
		for _, e := range m.ChargePearl {
			l = e.Size()
			n += 1 + l + sovProtoGameJiuMi(uint64(l))
		}
	}
	if len(m.GiftList) > 0 {
		for _, e := range m.GiftList {
			l = e.Size()
			n += 1 + l + sovProtoGameJiuMi(uint64(l))
		}
	}
	if len(m.MonthCard) > 0 {
		for _, e := range m.MonthCard {
			l = e.Size()
			n += 1 + l + sovProtoGameJiuMi(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *C2S_Shop_Buy) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Id != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.Id))
	}
	if m.ClientPrice != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.ClientPrice))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *BuyResult) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.ResetTimeStamp != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.ResetTimeStamp))
	}
	if m.CurrentTurnBuyNo != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.CurrentTurnBuyNo))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *S2C_Shop_Buy) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Id != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.Id))
	}
	if m.Result != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.Result))
	}
	if m.Notice != nil {
		l = m.Notice.Size()
		n += 1 + l + sovProtoGameJiuMi(uint64(l))
	}
	if m.Buyres != nil {
		l = m.Buyres.Size()
		n += 1 + l + sovProtoGameJiuMi(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *C2S_Recharge_GetGift) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.OrderId)
	if l > 0 {
		n += 1 + l + sovProtoGameJiuMi(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *S2C_Recharge_GetGift) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.OrderId)
	if l > 0 {
		n += 1 + l + sovProtoGameJiuMi(uint64(l))
	}
	if m.GiftId != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.GiftId))
	}
	if m.ErrCode != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.ErrCode))
	}
	if m.Notice != nil {
		l = m.Notice.Size()
		n += 1 + l + sovProtoGameJiuMi(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *C2S_Recharge_GetGiftConfirm) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.OrderId)
	if l > 0 {
		n += 1 + l + sovProtoGameJiuMi(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *C2S_Vip_ExpireDate) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *S2C_Vip_ExpireDate) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.CardListId) > 0 {
		l = 0
		for _, e := range m.CardListId {
			l += sovProtoGameJiuMi(uint64(e))
		}
		n += 1 + sovProtoGameJiuMi(uint64(l)) + l
	}
	if len(m.ExpireDate) > 0 {
		l = 0
		for _, e := range m.ExpireDate {
			l += sovProtoGameJiuMi(uint64(e))
		}
		n += 1 + sovProtoGameJiuMi(uint64(l)) + l
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *S2C_Vip_BuyReward) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.CardId != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.CardId))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *S2C_Vip_DailyReward) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.CardListId) > 0 {
		l = 0
		for _, e := range m.CardListId {
			l += sovProtoGameJiuMi(uint64(e))
		}
		n += 1 + sovProtoGameJiuMi(uint64(l)) + l
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *S2C_AntiAddictInfo) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.TotalPlayTime != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.TotalPlayTime))
	}
	if m.TodayPlayTime != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.TodayPlayTime))
	}
	if m.Age != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.Age))
	}
	if m.TodayPay != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.TodayPay))
	}
	if m.MonthPay != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.MonthPay))
	}
	if m.LastPayDate != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.LastPayDate))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *C2S_VerifiedIDCard) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Name)
	if l > 0 {
		n += 1 + l + sovProtoGameJiuMi(uint64(l))
	}
	l = len(m.IdCard)
	if l > 0 {
		n += 1 + l + sovProtoGameJiuMi(uint64(l))
	}
	l = len(m.Phone)
	if l > 0 {
		n += 1 + l + sovProtoGameJiuMi(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *S2C_Functions) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Code) > 0 {
		l = 0
		for _, e := range m.Code {
			l += sovProtoGameJiuMi(uint64(e))
		}
		n += 1 + sovProtoGameJiuMi(uint64(l)) + l
	}
	if len(m.Begin) > 0 {
		l = 0
		for _, e := range m.Begin {
			l += sovProtoGameJiuMi(uint64(e))
		}
		n += 1 + sovProtoGameJiuMi(uint64(l)) + l
	}
	if len(m.End) > 0 {
		l = 0
		for _, e := range m.End {
			l += sovProtoGameJiuMi(uint64(e))
		}
		n += 1 + sovProtoGameJiuMi(uint64(l)) + l
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *S2C_ShowNotice) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.ShowType != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.ShowType))
	}
	l = len(m.Notice)
	if l > 0 {
		n += 1 + l + sovProtoGameJiuMi(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *XConfig) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Key != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.Key))
	}
	l = len(m.Value)
	if l > 0 {
		n += 1 + l + sovProtoGameJiuMi(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *S2C_SyncConfig) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Config) > 0 {
		for _, e := range m.Config {
			l = e.Size()
			n += 1 + l + sovProtoGameJiuMi(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *Attachment_Item) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Id != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.Id))
	}
	if m.Number != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.Number))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *EmailItem) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Id != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.Id))
	}
	l = len(m.Sender)
	if l > 0 {
		n += 1 + l + sovProtoGameJiuMi(uint64(l))
	}
	l = len(m.Title)
	if l > 0 {
		n += 1 + l + sovProtoGameJiuMi(uint64(l))
	}
	l = len(m.Content)
	if l > 0 {
		n += 1 + l + sovProtoGameJiuMi(uint64(l))
	}
	if m.SendTime != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.SendTime))
	}
	if m.InvalidTime != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.InvalidTime))
	}
	if len(m.Attachment) > 0 {
		for _, e := range m.Attachment {
			l = e.Size()
			n += 1 + l + sovProtoGameJiuMi(uint64(l))
		}
	}
	if m.Status != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.Status))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *SimpleEmailItem) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Id != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.Id))
	}
	l = len(m.Title)
	if l > 0 {
		n += 1 + l + sovProtoGameJiuMi(uint64(l))
	}
	l = len(m.Sender)
	if l > 0 {
		n += 1 + l + sovProtoGameJiuMi(uint64(l))
	}
	if m.Status != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.Status))
	}
	if m.SendTime != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.SendTime))
	}
	if m.InvalidTime != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.InvalidTime))
	}
	if m.HaveAttachment {
		n += 2
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *S2C_SimpleEmailItemList) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.SimpleItems) > 0 {
		for _, e := range m.SimpleItems {
			l = e.Size()
			n += 1 + l + sovProtoGameJiuMi(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *S2C_EmailOpResult) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Id != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.Id))
	}
	if m.Res != nil {
		l = m.Res.Size()
		n += 1 + l + sovProtoGameJiuMi(uint64(l))
	}
	if m.Op != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.Op))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *C2S_EmailOp) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Id != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.Id))
	}
	if m.Op != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.Op))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *FriendInfo) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.CharmPoint != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.CharmPoint))
	}
	if m.Info != nil {
		l = m.Info.Size()
		n += 1 + l + sovProtoGameJiuMi(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *FriendSimpleInfo) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.UserId != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.UserId))
	}
	l = len(m.NickName)
	if l > 0 {
		n += 1 + l + sovProtoGameJiuMi(uint64(l))
	}
	l = len(m.Remarks)
	if l > 0 {
		n += 1 + l + sovProtoGameJiuMi(uint64(l))
	}
	if m.Lv != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.Lv))
	}
	if m.GameId != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.GameId))
	}
	if m.State {
		n += 2
	}
	if m.OfflineDate != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.OfflineDate))
	}
	if m.Icon != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.Icon))
	}
	if m.Frame != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.Frame))
	}
	if m.IsFriendSendMeEnergy {
		n += 2
	}
	if m.IsGetFriendSendMeEnergy {
		n += 2
	}
	if m.IsSendFriendEnergy {
		n += 2
	}
	l = len(m.ManorName)
	if l > 0 {
		n += 1 + l + sovProtoGameJiuMi(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *BlockPerson) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.UserId != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.UserId))
	}
	if m.Cloth != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.Cloth))
	}
	if m.Frame != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.Frame))
	}
	l = len(m.NickName)
	if l > 0 {
		n += 1 + l + sovProtoGameJiuMi(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *S2C_Friend_GetList) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Friends) > 0 {
		for _, e := range m.Friends {
			l = e.Size()
			n += 1 + l + sovProtoGameJiuMi(uint64(l))
		}
	}
	if m.GetFriendEnergyNo != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.GetFriendEnergyNo))
	}
	if len(m.BlockList) > 0 {
		for _, e := range m.BlockList {
			l = e.Size()
			n += 1 + l + sovProtoGameJiuMi(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *C2S_Friend_Apply) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.UserId != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.UserId))
	}
	l = len(m.Remarks)
	if l > 0 {
		n += 1 + l + sovProtoGameJiuMi(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *S2C_Friend_Apply) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.SenderId != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.SenderId))
	}
	if m.ReceiverId != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.ReceiverId))
	}
	if m.Result != nil {
		l = m.Result.Size()
		n += 1 + l + sovProtoGameJiuMi(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *C2S_Friend_Delete) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.UserId != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.UserId))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *S2C_Friend_Delete) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.UserId != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.UserId))
	}
	if m.Result != nil {
		l = m.Result.Size()
		n += 1 + l + sovProtoGameJiuMi(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *C2S_Friend_Chat) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.UserId != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.UserId))
	}
	if m.MsgId != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.MsgId))
	}
	l = len(m.Msg)
	if l > 0 {
		n += 1 + l + sovProtoGameJiuMi(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *S2C_Friend_Chat) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.MsgId != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.MsgId))
	}
	if m.Ret != nil {
		l = m.Ret.Size()
		n += 1 + l + sovProtoGameJiuMi(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ChatInfo) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.SenderId != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.SenderId))
	}
	l = len(m.Msg)
	if l > 0 {
		n += 1 + l + sovProtoGameJiuMi(uint64(l))
	}
	if m.SendDate != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.SendDate))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *S2C_Friend_OnLineMsg) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Msg != nil {
		l = m.Msg.Size()
		n += 1 + l + sovProtoGameJiuMi(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *S2C_Friend_OfflineMsg) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Msg) > 0 {
		for _, e := range m.Msg {
			l = e.Size()
			n += 1 + l + sovProtoGameJiuMi(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *C2S_Friend_Remarks) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.UserId != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.UserId))
	}
	l = len(m.Remarks)
	if l > 0 {
		n += 1 + l + sovProtoGameJiuMi(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *S2C_Friend_Remarks) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.UserId != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.UserId))
	}
	l = len(m.Remarks)
	if l > 0 {
		n += 1 + l + sovProtoGameJiuMi(uint64(l))
	}
	if m.Result != nil {
		l = m.Result.Size()
		n += 1 + l + sovProtoGameJiuMi(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *S2C_Friend_Recommend) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Friends) > 0 {
		for _, e := range m.Friends {
			l = e.Size()
			n += 1 + l + sovProtoGameJiuMi(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *S2C_Friend_State) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Info != nil {
		l = m.Info.Size()
		n += 1 + l + sovProtoGameJiuMi(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *C2S_Friend_Card) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.UserId != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.UserId))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *S2C_Friend_Card) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Friend != nil {
		l = m.Friend.Size()
		n += 1 + l + sovProtoGameJiuMi(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *C2S_Friend_Search) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.GameId != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.GameId))
	}
	l = len(m.NickName)
	if l > 0 {
		n += 1 + l + sovProtoGameJiuMi(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *S2C_Friend_Search) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Friends) > 0 {
		for _, e := range m.Friends {
			l = e.Size()
			n += 1 + l + sovProtoGameJiuMi(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *C2S_Friend_DealApply) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.UserId) > 0 {
		l = 0
		for _, e := range m.UserId {
			l += sovProtoGameJiuMi(uint64(e))
		}
		n += 1 + sovProtoGameJiuMi(uint64(l)) + l
	}
	if m.Result {
		n += 2
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *S2C_Friend_DealApplyPass) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Result != nil {
		l = m.Result.Size()
		n += 1 + l + sovProtoGameJiuMi(uint64(l))
	}
	if len(m.Friends) > 0 {
		for _, e := range m.Friends {
			l = e.Size()
			n += 1 + l + sovProtoGameJiuMi(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *S2C_Friend_DealApplyIgnore) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Result != nil {
		l = m.Result.Size()
		n += 1 + l + sovProtoGameJiuMi(uint64(l))
	}
	if len(m.FriendIds) > 0 {
		l = 0
		for _, e := range m.FriendIds {
			l += sovProtoGameJiuMi(uint64(e))
		}
		n += 1 + sovProtoGameJiuMi(uint64(l)) + l
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *S2C_Friend_ApplyList) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Applications) > 0 {
		for _, e := range m.Applications {
			l = e.Size()
			n += 1 + l + sovProtoGameJiuMi(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *C2S_Friend_SendEnergy) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.UserId != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.UserId))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *S2C_Friend_SendEnergy) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.SenderId != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.SenderId))
	}
	if m.RecvId != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.RecvId))
	}
	if m.Result != nil {
		l = m.Result.Size()
		n += 1 + l + sovProtoGameJiuMi(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *S2C_Friend_SendEnergyAll) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.UserIds) > 0 {
		l = 0
		for _, e := range m.UserIds {
			l += sovProtoGameJiuMi(uint64(e))
		}
		n += 1 + sovProtoGameJiuMi(uint64(l)) + l
	}
	if m.Result != nil {
		l = m.Result.Size()
		n += 1 + l + sovProtoGameJiuMi(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *S2C_Friend_GetEnergyAll) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.UserIds) > 0 {
		l = 0
		for _, e := range m.UserIds {
			l += sovProtoGameJiuMi(uint64(e))
		}
		n += 1 + sovProtoGameJiuMi(uint64(l)) + l
	}
	if m.Result != nil {
		l = m.Result.Size()
		n += 1 + l + sovProtoGameJiuMi(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *S2C_Friend_GetEnergy) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.UserId != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.UserId))
	}
	if m.Result != nil {
		l = m.Result.Size()
		n += 1 + l + sovProtoGameJiuMi(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *C2S_Friend_GetEnergy) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.UserId != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.UserId))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *C2S_Friend_AddBlock) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.UserId != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.UserId))
	}
	if m.Cloth != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.Cloth))
	}
	if m.Frame != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.Frame))
	}
	l = len(m.NickName)
	if l > 0 {
		n += 1 + l + sovProtoGameJiuMi(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *S2C_Friend_AddBlock) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.UserId != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.UserId))
	}
	if m.Result != nil {
		l = m.Result.Size()
		n += 1 + l + sovProtoGameJiuMi(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *C2S_Friend_DelBlock) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.UserId != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.UserId))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *S2C_Friend_DelBlock) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.UserId != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.UserId))
	}
	if m.Result != nil {
		l = m.Result.Size()
		n += 1 + l + sovProtoGameJiuMi(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *SceneUser) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.UserId != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.UserId))
	}
	l = len(m.Name)
	if l > 0 {
		n += 1 + l + sovProtoGameJiuMi(uint64(l))
	}
	if m.ClothesId != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.ClothesId))
	}
	if m.Level != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.Level))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *PosInfo) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.UserId != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.UserId))
	}
	if m.PosX != 0 {
		n += 9
	}
	if m.PosZ != 0 {
		n += 9
	}
	if m.DirX != 0 {
		n += 9
	}
	if m.DirZ != 0 {
		n += 9
	}
	if m.FindWay {
		n += 2
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *C2S_Syn_EnterScene) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.TemplateId != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.TemplateId))
	}
	if m.Index != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.Index))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *S2C_Syn_EnterScene) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.SceneId != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.SceneId))
	}
	if m.Result != nil {
		l = m.Result.Size()
		n += 1 + l + sovProtoGameJiuMi(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *C2S_Syn_SceneData) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.SceneId != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.SceneId))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *S2C_Syn_SceneData) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.BaseData) > 0 {
		for _, e := range m.BaseData {
			l = e.Size()
			n += 1 + l + sovProtoGameJiuMi(uint64(l))
		}
	}
	if len(m.Posdata) > 0 {
		for _, e := range m.Posdata {
			l = e.Size()
			n += 1 + l + sovProtoGameJiuMi(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *S2C_Syn_Info) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Data != nil {
		l = m.Data.Size()
		n += 1 + l + sovProtoGameJiuMi(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *S2C_Syn_Pos) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Data != nil {
		l = m.Data.Size()
		n += 1 + l + sovProtoGameJiuMi(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *C2S_Syn_Move) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Data != nil {
		l = m.Data.Size()
		n += 1 + l + sovProtoGameJiuMi(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *C2S_Syn_ModifyRecvMsgStatus) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Status {
		n += 2
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *S2C_Syn_LeaveScene) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.UserId != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.UserId))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *Mouse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.MouseId != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.MouseId))
	}
	if m.MouseType != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.MouseType))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *C2S_Mouse_EnterHole) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *S2C_Mouse_EnterHole) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Result != nil {
		l = m.Result.Size()
		n += 1 + l + sovProtoGameJiuMi(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *S2C_Mouse_NewMouse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.MouseList) > 0 {
		for _, e := range m.MouseList {
			l = e.Size()
			n += 1 + l + sovProtoGameJiuMi(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *C2S_Mouse_Hit) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.MouseId != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.MouseId))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *C2S_Mouse_Eat) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.MouseId != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.MouseId))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *C2S_Mouse_Bomb) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *S2C_Mouse_Over) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *Fish) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.FishId != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.FishId))
	}
	if m.TemplateId != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.TemplateId))
	}
	if m.LifeTime != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.LifeTime))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *C2S_Fish_SitDown) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.FishPondId != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.FishPondId))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *S2C_Fish_SitDown) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Result != nil {
		l = m.Result.Size()
		n += 1 + l + sovProtoGameJiuMi(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *C2S_Fish_StandUp) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *C2S_Fish_GetAllFish) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *S2C_Fish_GetAllFish) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.FishList) > 0 {
		for _, e := range m.FishList {
			l = e.Size()
			n += 1 + l + sovProtoGameJiuMi(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *C2S_Fish_PullHook) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.FishId != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.FishId))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *S2C_Fish_PullHook) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.FishId != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.FishId))
	}
	if m.Result != nil {
		l = m.Result.Size()
		n += 1 + l + sovProtoGameJiuMi(uint64(l))
	}
	if m.ItemId != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.ItemId))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *S2C_Fish_NewFish) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.NewFish != nil {
		l = m.NewFish.Size()
		n += 1 + l + sovProtoGameJiuMi(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ManorBuilding) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Uid != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.Uid))
	}
	if m.BuildId != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.BuildId))
	}
	if m.PosX != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.PosX))
	}
	if m.PosY != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.PosY))
	}
	if m.Orientation != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.Orientation))
	}
	if m.HasFinishBuild {
		n += 2
	}
	if m.BuildEndTime != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.BuildEndTime))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ManorStock) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.BuildId != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.BuildId))
	}
	if m.No != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.No))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *S2C_Manor_AllInfo) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.BuildingList) > 0 {
		for _, e := range m.BuildingList {
			l = e.Size()
			n += 1 + l + sovProtoGameJiuMi(uint64(l))
		}
	}
	if len(m.FreshList) > 0 {
		for _, e := range m.FreshList {
			l = e.Size()
			n += 1 + l + sovProtoGameJiuMi(uint64(l))
		}
	}
	if len(m.JunkList) > 0 {
		for _, e := range m.JunkList {
			l = e.Size()
			n += 1 + l + sovProtoGameJiuMi(uint64(l))
		}
	}
	if m.OwnerId != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.OwnerId))
	}
	l = len(m.ManorName)
	if l > 0 {
		n += 1 + l + sovProtoGameJiuMi(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *C2S_Manor_SaveAllPos) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.BuildingList) > 0 {
		for _, e := range m.BuildingList {
			l = e.Size()
			n += 1 + l + sovProtoGameJiuMi(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *C2S_Manor_ChangeOne) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Uid != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.Uid))
	}
	if m.BuildId != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.BuildId))
	}
	if m.Action != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.Action))
	}
	if m.PosX != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.PosX))
	}
	if m.PosY != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.PosY))
	}
	if m.Orientation != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.Orientation))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *S2C_Manor_ChangeOne) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Res != nil {
		l = m.Res.Size()
		n += 1 + l + sovProtoGameJiuMi(uint64(l))
	}
	if m.BuildResult != nil {
		l = m.BuildResult.Size()
		n += 1 + l + sovProtoGameJiuMi(uint64(l))
	}
	if m.Action != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.Action))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *S2C_Manor_BuyBuilding) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Res != nil {
		l = m.Res.Size()
		n += 1 + l + sovProtoGameJiuMi(uint64(l))
	}
	if m.BuildId != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.BuildId))
	}
	if m.BuildUid != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.BuildUid))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *XAnything) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Id != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.Id))
	}
	if m.Count != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.Count))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *C2S_Anything_Add) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Data) > 0 {
		for _, e := range m.Data {
			l = e.Size()
			n += 1 + l + sovProtoGameJiuMi(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *S2C_Anything_Add) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Ret != nil {
		l = m.Ret.Size()
		n += 1 + l + sovProtoGameJiuMi(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *C2S_Anything_Sub) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Data) > 0 {
		for _, e := range m.Data {
			l = e.Size()
			n += 1 + l + sovProtoGameJiuMi(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *S2C_Anything_Sub) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Ret != nil {
		l = m.Ret.Size()
		n += 1 + l + sovProtoGameJiuMi(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *XCustomizeVarBool) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Name)
	if l > 0 {
		n += 1 + l + sovProtoGameJiuMi(uint64(l))
	}
	if m.Value {
		n += 2
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *XCustomizeVarDouble) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Name)
	if l > 0 {
		n += 1 + l + sovProtoGameJiuMi(uint64(l))
	}
	if m.Value != 0 {
		n += 9
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *XCustomizeVarString) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Name)
	if l > 0 {
		n += 1 + l + sovProtoGameJiuMi(uint64(l))
	}
	l = len(m.Value)
	if l > 0 {
		n += 1 + l + sovProtoGameJiuMi(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *C2S_CustomizeVar_GetAll) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *S2C_CustomizeVar_GetAll) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.DataBool) > 0 {
		for _, e := range m.DataBool {
			l = e.Size()
			n += 1 + l + sovProtoGameJiuMi(uint64(l))
		}
	}
	if len(m.DataDouble) > 0 {
		for _, e := range m.DataDouble {
			l = e.Size()
			n += 1 + l + sovProtoGameJiuMi(uint64(l))
		}
	}
	if len(m.DataString) > 0 {
		for _, e := range m.DataString {
			l = e.Size()
			n += 1 + l + sovProtoGameJiuMi(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *C2S_CustomizeVar_GetBoolValue) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.UserId != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.UserId))
	}
	l = len(m.Name)
	if l > 0 {
		n += 1 + l + sovProtoGameJiuMi(uint64(l))
	}
	if m.DefaultValue {
		n += 2
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *S2C_CustomizeVar_GetBoolValue) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.UserId != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.UserId))
	}
	if m.Data != nil {
		l = m.Data.Size()
		n += 1 + l + sovProtoGameJiuMi(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *C2S_CustomizeVar_GetDoubleValue) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.UserId != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.UserId))
	}
	l = len(m.Name)
	if l > 0 {
		n += 1 + l + sovProtoGameJiuMi(uint64(l))
	}
	if m.DefaultValue != 0 {
		n += 9
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *S2C_CustomizeVar_GetDoubleValue) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.UserId != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.UserId))
	}
	if m.Data != nil {
		l = m.Data.Size()
		n += 1 + l + sovProtoGameJiuMi(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *C2S_CustomizeVar_GetStringValue) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.UserId != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.UserId))
	}
	l = len(m.Name)
	if l > 0 {
		n += 1 + l + sovProtoGameJiuMi(uint64(l))
	}
	l = len(m.DefaultValue)
	if l > 0 {
		n += 1 + l + sovProtoGameJiuMi(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *S2C_CustomizeVar_GetStringValue) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.UserId != 0 {
		n += 1 + sovProtoGameJiuMi(uint64(m.UserId))
	}
	if m.Data != nil {
		l = m.Data.Size()
		n += 1 + l + sovProtoGameJiuMi(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *C2S_CustomizeVar_SetBoolValue) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Data != nil {
		l = m.Data.Size()
		n += 1 + l + sovProtoGameJiuMi(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *C2S_CustomizeVar_SetDoubleValue) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Data != nil {
		l = m.Data.Size()
		n += 1 + l + sovProtoGameJiuMi(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *C2S_CustomizeVar_SetStringValue) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Data != nil {
		l = m.Data.Size()
		n += 1 + l + sovProtoGameJiuMi(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func sovProtoGameJiuMi(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozProtoGameJiuMi(x uint64) (n int) {
	return sovProtoGameJiuMi(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *F2S_RegisterServer) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProtoGameJiuMi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: F2S_RegisterServer: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: F2S_RegisterServer: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Code", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Code = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipProtoGameJiuMi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *XSimpleUser) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProtoGameJiuMi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: _simpleUser: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: _simpleUser: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field UserId", wireType)
			}
			m.UserId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.UserId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field GameId", wireType)
			}
			m.GameId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.GameId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field NickName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.NickName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Level", wireType)
			}
			m.Level = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Level |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field FaceFrameId", wireType)
			}
			m.FaceFrameId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.FaceFrameId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 9:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field WearingClothesId", wireType)
			}
			m.WearingClothesId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.WearingClothesId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 15:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Token", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Token = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 16:
			if wireType == 0 {
				var v int32
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowProtoGameJiuMi
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int32(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				m.Friends = append(m.Friends, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowProtoGameJiuMi
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthProtoGameJiuMi
				}
				postIndex := iNdEx + packedLen
				if postIndex < 0 {
					return ErrInvalidLengthProtoGameJiuMi
				}
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				var elementCount int
				var count int
				for _, integer := range dAtA[iNdEx:postIndex] {
					if integer < 128 {
						count++
					}
				}
				elementCount = count
				if elementCount != 0 && len(m.Friends) == 0 {
					m.Friends = make([]int32, 0, elementCount)
				}
				for iNdEx < postIndex {
					var v int32
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowProtoGameJiuMi
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= int32(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					m.Friends = append(m.Friends, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field Friends", wireType)
			}
		case 17:
			if wireType == 0 {
				var v int32
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowProtoGameJiuMi
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int32(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				m.BlockList = append(m.BlockList, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowProtoGameJiuMi
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthProtoGameJiuMi
				}
				postIndex := iNdEx + packedLen
				if postIndex < 0 {
					return ErrInvalidLengthProtoGameJiuMi
				}
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				var elementCount int
				var count int
				for _, integer := range dAtA[iNdEx:postIndex] {
					if integer < 128 {
						count++
					}
				}
				elementCount = count
				if elementCount != 0 && len(m.BlockList) == 0 {
					m.BlockList = make([]int32, 0, elementCount)
				}
				for iNdEx < postIndex {
					var v int32
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowProtoGameJiuMi
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= int32(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					m.BlockList = append(m.BlockList, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field BlockList", wireType)
			}
		case 19:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field BanTalk", wireType)
			}
			m.BanTalk = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.BanTalk |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 20:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SceneId", wireType)
			}
			m.SceneId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.SceneId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipProtoGameJiuMi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *S2F_RegisterServer) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProtoGameJiuMi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: S2F_RegisterServer: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: S2F_RegisterServer: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Users", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Users = append(m.Users, &XSimpleUser{})
			if err := m.Users[len(m.Users)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipProtoGameJiuMi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *S2F_UserLogin) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProtoGameJiuMi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: S2F_UserLogin: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: S2F_UserLogin: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field User", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.User == nil {
				m.User = &XSimpleUser{}
			}
			if err := m.User.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipProtoGameJiuMi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *F2S_UserLogin) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProtoGameJiuMi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: F2S_UserLogin: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: F2S_UserLogin: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field UserId", wireType)
			}
			m.UserId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.UserId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Result", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Result = bool(v != 0)
		default:
			iNdEx = preIndex
			skippy, err := skipProtoGameJiuMi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *S2F_UserLogout) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProtoGameJiuMi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: S2F_UserLogout: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: S2F_UserLogout: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field UserId", wireType)
			}
			m.UserId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.UserId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipProtoGameJiuMi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *S2F_UserAttrChange) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProtoGameJiuMi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: S2F_UserAttrChange: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: S2F_UserAttrChange: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field UserId", wireType)
			}
			m.UserId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.UserId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Attr", wireType)
			}
			m.Attr = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Attr |= Enum_UserAttr(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field AttrValueInt", wireType)
			}
			m.AttrValueInt = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.AttrValueInt |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AttrValueStr", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AttrValueStr = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipProtoGameJiuMi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *S2F_AddFriend) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProtoGameJiuMi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: S2F_AddFriend: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: S2F_AddFriend: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field UserId", wireType)
			}
			m.UserId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.UserId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field FriendId", wireType)
			}
			m.FriendId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.FriendId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipProtoGameJiuMi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *S2F_DelFriend) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProtoGameJiuMi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: S2F_DelFriend: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: S2F_DelFriend: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field UserId", wireType)
			}
			m.UserId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.UserId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field FriendId", wireType)
			}
			m.FriendId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.FriendId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipProtoGameJiuMi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *F2S_TalkToOfflineFriend) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProtoGameJiuMi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: F2S_TalkToOfflineFriend: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: F2S_TalkToOfflineFriend: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Msg", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Msg = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field UserId", wireType)
			}
			m.UserId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.UserId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MsgId", wireType)
			}
			m.MsgId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MsgId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ReceiverId", wireType)
			}
			m.ReceiverId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ReceiverId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipProtoGameJiuMi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *C2F_Login) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProtoGameJiuMi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: C2F_Login: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: C2F_Login: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field UserId", wireType)
			}
			m.UserId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.UserId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Token", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Token = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipProtoGameJiuMi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *F2C_Login) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProtoGameJiuMi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: F2C_Login: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: F2C_Login: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipProtoGameJiuMi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *S2F_SyncMyFriendList) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProtoGameJiuMi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: S2F_SyncMyFriendList: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: S2F_SyncMyFriendList: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType == 0 {
				var v int32
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowProtoGameJiuMi
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int32(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				m.Friends = append(m.Friends, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowProtoGameJiuMi
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthProtoGameJiuMi
				}
				postIndex := iNdEx + packedLen
				if postIndex < 0 {
					return ErrInvalidLengthProtoGameJiuMi
				}
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				var elementCount int
				var count int
				for _, integer := range dAtA[iNdEx:postIndex] {
					if integer < 128 {
						count++
					}
				}
				elementCount = count
				if elementCount != 0 && len(m.Friends) == 0 {
					m.Friends = make([]int32, 0, elementCount)
				}
				for iNdEx < postIndex {
					var v int32
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowProtoGameJiuMi
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= int32(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					m.Friends = append(m.Friends, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field Friends", wireType)
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field UserId", wireType)
			}
			m.UserId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.UserId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType == 0 {
				var v int32
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowProtoGameJiuMi
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int32(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				m.BlockList = append(m.BlockList, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowProtoGameJiuMi
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthProtoGameJiuMi
				}
				postIndex := iNdEx + packedLen
				if postIndex < 0 {
					return ErrInvalidLengthProtoGameJiuMi
				}
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				var elementCount int
				var count int
				for _, integer := range dAtA[iNdEx:postIndex] {
					if integer < 128 {
						count++
					}
				}
				elementCount = count
				if elementCount != 0 && len(m.BlockList) == 0 {
					m.BlockList = make([]int32, 0, elementCount)
				}
				for iNdEx < postIndex {
					var v int32
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowProtoGameJiuMi
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= int32(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					m.BlockList = append(m.BlockList, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field BlockList", wireType)
			}
		default:
			iNdEx = preIndex
			skippy, err := skipProtoGameJiuMi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *S2F_AddBlock) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProtoGameJiuMi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: S2F_AddBlock: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: S2F_AddBlock: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field UserId", wireType)
			}
			m.UserId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.UserId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TargetId", wireType)
			}
			m.TargetId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.TargetId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipProtoGameJiuMi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *S2F_DelBlock) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProtoGameJiuMi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: S2F_DelBlock: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: S2F_DelBlock: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field UserId", wireType)
			}
			m.UserId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.UserId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TargetId", wireType)
			}
			m.TargetId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.TargetId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipProtoGameJiuMi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *S2F_ChannelSpeak) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProtoGameJiuMi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: S2F_ChannelSpeak: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: S2F_ChannelSpeak: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field UserId", wireType)
			}
			m.UserId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.UserId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field NickName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.NickName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Msg", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Msg = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SpeakChannel", wireType)
			}
			m.SpeakChannel = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.SpeakChannel |= ESpeakChannel(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Receiver", wireType)
			}
			m.Receiver = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Receiver |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipProtoGameJiuMi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *F2C_ChannelSpeak) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProtoGameJiuMi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: F2C_ChannelSpeak: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: F2C_ChannelSpeak: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field UserId", wireType)
			}
			m.UserId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.UserId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field NickName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.NickName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Msg", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Msg = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ReceiverId", wireType)
			}
			m.ReceiverId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ReceiverId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SpeakChannel", wireType)
			}
			m.SpeakChannel = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.SpeakChannel |= ESpeakChannel(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field FaceId", wireType)
			}
			m.FaceId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.FaceId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 7:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field FrameId", wireType)
			}
			m.FrameId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.FrameId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipProtoGameJiuMi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *C2F_ChannelSpeak) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProtoGameJiuMi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: C2F_ChannelSpeak: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: C2F_ChannelSpeak: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Msg", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Msg = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SpeakChannel", wireType)
			}
			m.SpeakChannel = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.SpeakChannel |= ESpeakChannel(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Receiver", wireType)
			}
			m.Receiver = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Receiver |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipProtoGameJiuMi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *F2C_ChannelSpeakResult) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProtoGameJiuMi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: F2C_ChannelSpeakResult: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: F2C_ChannelSpeakResult: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Result", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Result == nil {
				m.Result = &FailNotice{}
			}
			if err := m.Result.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipProtoGameJiuMi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *A2S_SystemNotice) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProtoGameJiuMi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: A2S_SystemNotice: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: A2S_SystemNotice: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field BeginTime", wireType)
			}
			m.BeginTime = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.BeginTime |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field EndTime", wireType)
			}
			m.EndTime = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.EndTime |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RepeatTimes", wireType)
			}
			m.RepeatTimes = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.RepeatTimes |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Interval", wireType)
			}
			m.Interval = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Interval |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Msg", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Msg = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipProtoGameJiuMi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *S2F_EnterScene) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProtoGameJiuMi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: S2F_EnterScene: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: S2F_EnterScene: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field UserId", wireType)
			}
			m.UserId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.UserId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SceneId", wireType)
			}
			m.SceneId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.SceneId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipProtoGameJiuMi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *XUser) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProtoGameJiuMi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: _user: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: _user: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field UserId", wireType)
			}
			m.UserId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.UserId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field OpenId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.OpenId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PhoneNo", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PhoneNo = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field NickName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.NickName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Level", wireType)
			}
			m.Level = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Level |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Exp", wireType)
			}
			m.Exp = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Exp |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 7:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field FaceId", wireType)
			}
			m.FaceId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.FaceId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 8:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field FaceFrameId", wireType)
			}
			m.FaceFrameId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.FaceFrameId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 9:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Energy", wireType)
			}
			m.Energy = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Energy |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 10:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Charm", wireType)
			}
			m.Charm = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Charm |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 11:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Shell", wireType)
			}
			m.Shell = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Shell |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 12:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Pearl", wireType)
			}
			m.Pearl = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Pearl |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 13:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PearlBind", wireType)
			}
			m.PearlBind = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.PearlBind |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 14:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field GameId", wireType)
			}
			m.GameId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.GameId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 15:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field IDCard", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.IDCard = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 16:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RealName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.RealName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 17:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ActivePointDaily", wireType)
			}
			m.ActivePointDaily = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ActivePointDaily |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 18:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ActivePointWeek", wireType)
			}
			m.ActivePointWeek = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ActivePointWeek |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 19:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field BanTalk", wireType)
			}
			m.BanTalk = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.BanTalk |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 20:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field LastChangeNameTime", wireType)
			}
			m.LastChangeNameTime = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.LastChangeNameTime |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 21:
			if wireType == 0 {
				var v int32
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowProtoGameJiuMi
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int32(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				m.SyntheticList = append(m.SyntheticList, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowProtoGameJiuMi
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthProtoGameJiuMi
				}
				postIndex := iNdEx + packedLen
				if postIndex < 0 {
					return ErrInvalidLengthProtoGameJiuMi
				}
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				var elementCount int
				var count int
				for _, integer := range dAtA[iNdEx:postIndex] {
					if integer < 128 {
						count++
					}
				}
				elementCount = count
				if elementCount != 0 && len(m.SyntheticList) == 0 {
					m.SyntheticList = make([]int32, 0, elementCount)
				}
				for iNdEx < postIndex {
					var v int32
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowProtoGameJiuMi
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= int32(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					m.SyntheticList = append(m.SyntheticList, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field SyntheticList", wireType)
			}
		case 22:
			if wireType == 0 {
				var v int32
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowProtoGameJiuMi
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int32(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				m.ClothesList = append(m.ClothesList, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowProtoGameJiuMi
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthProtoGameJiuMi
				}
				postIndex := iNdEx + packedLen
				if postIndex < 0 {
					return ErrInvalidLengthProtoGameJiuMi
				}
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				var elementCount int
				var count int
				for _, integer := range dAtA[iNdEx:postIndex] {
					if integer < 128 {
						count++
					}
				}
				elementCount = count
				if elementCount != 0 && len(m.ClothesList) == 0 {
					m.ClothesList = make([]int32, 0, elementCount)
				}
				for iNdEx < postIndex {
					var v int32
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowProtoGameJiuMi
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= int32(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					m.ClothesList = append(m.ClothesList, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field ClothesList", wireType)
			}
		case 23:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field WearingClothesId", wireType)
			}
			m.WearingClothesId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.WearingClothesId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 24:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field BulletinBoardId", wireType)
			}
			m.BulletinBoardId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.BulletinBoardId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 25:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PayTotal", wireType)
			}
			m.PayTotal = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.PayTotal |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 26:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field AlreadyRegistered", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.AlreadyRegistered = bool(v != 0)
		case 41:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ManorName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ManorName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipProtoGameJiuMi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *C2S_GuestLogin) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProtoGameJiuMi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: C2S_GuestLogin: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: C2S_GuestLogin: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MachineId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.MachineId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field OpenId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.OpenId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field UserId", wireType)
			}
			m.UserId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.UserId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Password", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Password = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field IpAddr", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.IpAddr = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Channel", wireType)
			}
			m.Channel = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Channel |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DeviceType", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.DeviceType = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 8:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field GameId", wireType)
			}
			m.GameId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.GameId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 9:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MainVer", wireType)
			}
			m.MainVer = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MainVer |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 10:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field EvaluationVer", wireType)
			}
			m.EvaluationVer = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.EvaluationVer |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 11:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field HotfixVer", wireType)
			}
			m.HotfixVer = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.HotfixVer |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipProtoGameJiuMi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *C2S_GameLogout) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProtoGameJiuMi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: C2S_GameLogout: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: C2S_GameLogout: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field UserId", wireType)
			}
			m.UserId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.UserId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipProtoGameJiuMi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *C2S_Register) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProtoGameJiuMi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: C2S_Register: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: C2S_Register: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClothesId", wireType)
			}
			m.ClothesId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ClothesId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field NickName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.NickName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ManorName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ManorName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipProtoGameJiuMi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *S2C_Register) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProtoGameJiuMi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: S2C_Register: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: S2C_Register: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Ret", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Ret == nil {
				m.Ret = &OperationResult{}
			}
			if err := m.Ret.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipProtoGameJiuMi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *C2S_String) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProtoGameJiuMi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: C2S_String: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: C2S_String: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Str", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Str = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipProtoGameJiuMi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *C2SInt32) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProtoGameJiuMi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: C2S_int32: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: C2S_int32: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field data", wireType)
			}
			m.Data = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Data |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipProtoGameJiuMi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *C2S_Empty) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProtoGameJiuMi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: C2S_Empty: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: C2S_Empty: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipProtoGameJiuMi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *FailNotice) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProtoGameJiuMi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: FailNotice: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: FailNotice: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field FailCode", wireType)
			}
			m.FailCode = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.FailCode |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Param", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Param = append(m.Param, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field FailMsg", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.FailMsg = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipProtoGameJiuMi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *OperationResult) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProtoGameJiuMi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: OperationResult: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: OperationResult: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field IsSuccess", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.IsSuccess = bool(v != 0)
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ErrCode", wireType)
			}
			m.ErrCode = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ErrCode |= Enum_ErrorCode(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Msg", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Msg == nil {
				m.Msg = &FailNotice{}
			}
			if err := m.Msg.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipProtoGameJiuMi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *XItem) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProtoGameJiuMi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: _item: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: _item: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Uuid", wireType)
			}
			m.Uuid = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Uuid |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ItemId", wireType)
			}
			m.ItemId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ItemId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field No", wireType)
			}
			m.No = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.No |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Extra", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Extra = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipProtoGameJiuMi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *FurnitureItem) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProtoGameJiuMi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: furnitureItem: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: furnitureItem: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ItemId", wireType)
			}
			m.ItemId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ItemId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field No", wireType)
			}
			m.No = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.No |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipProtoGameJiuMi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *S2C_AllItemInfo) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProtoGameJiuMi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: S2C_AllItemInfo: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: S2C_AllItemInfo: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType == 0 {
				var v int32
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowProtoGameJiuMi
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int32(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				m.SlotCellNo = append(m.SlotCellNo, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowProtoGameJiuMi
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthProtoGameJiuMi
				}
				postIndex := iNdEx + packedLen
				if postIndex < 0 {
					return ErrInvalidLengthProtoGameJiuMi
				}
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				var elementCount int
				var count int
				for _, integer := range dAtA[iNdEx:postIndex] {
					if integer < 128 {
						count++
					}
				}
				elementCount = count
				if elementCount != 0 && len(m.SlotCellNo) == 0 {
					m.SlotCellNo = make([]int32, 0, elementCount)
				}
				for iNdEx < postIndex {
					var v int32
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowProtoGameJiuMi
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= int32(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					m.SlotCellNo = append(m.SlotCellNo, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field SlotCellNo", wireType)
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Items", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Items = append(m.Items, &XItem{})
			if err := m.Items[len(m.Items)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Furniture", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Furniture = append(m.Furniture, &FurnitureItem{})
			if err := m.Furniture[len(m.Furniture)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType == 0 {
				var v int32
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowProtoGameJiuMi
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int32(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				m.FloorList = append(m.FloorList, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowProtoGameJiuMi
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthProtoGameJiuMi
				}
				postIndex := iNdEx + packedLen
				if postIndex < 0 {
					return ErrInvalidLengthProtoGameJiuMi
				}
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				var elementCount int
				var count int
				for _, integer := range dAtA[iNdEx:postIndex] {
					if integer < 128 {
						count++
					}
				}
				elementCount = count
				if elementCount != 0 && len(m.FloorList) == 0 {
					m.FloorList = make([]int32, 0, elementCount)
				}
				for iNdEx < postIndex {
					var v int32
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowProtoGameJiuMi
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= int32(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					m.FloorList = append(m.FloorList, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field FloorList", wireType)
			}
		default:
			iNdEx = preIndex
			skippy, err := skipProtoGameJiuMi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *C2S_UseItem) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProtoGameJiuMi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: C2S_UseItem: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: C2S_UseItem: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Item", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Item == nil {
				m.Item = &XItem{}
			}
			if err := m.Item.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Param", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Param = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipProtoGameJiuMi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *S2C_UpdateItem) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProtoGameJiuMi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: S2C_UpdateItem: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: S2C_UpdateItem: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Uuid", wireType)
			}
			m.Uuid = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Uuid |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ItemId", wireType)
			}
			m.ItemId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ItemId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CurrentNumber", wireType)
			}
			m.CurrentNumber = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CurrentNumber |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field OrigNumber", wireType)
			}
			m.OrigNumber = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.OrigNumber |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipProtoGameJiuMi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *S2C_BatchUpdateItem) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProtoGameJiuMi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: S2C_BatchUpdateItem: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: S2C_BatchUpdateItem: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Items", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Items = append(m.Items, &S2C_UpdateItem{})
			if err := m.Items[len(m.Items)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Reason", wireType)
			}
			m.Reason = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Reason |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipProtoGameJiuMi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *C2S_GetItemInfo) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProtoGameJiuMi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: C2S_GetItemInfo: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: C2S_GetItemInfo: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Uuid", wireType)
			}
			m.Uuid = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Uuid |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ItemId", wireType)
			}
			m.ItemId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ItemId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipProtoGameJiuMi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *S2C_GetItemInfo) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProtoGameJiuMi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: S2C_GetItemInfo: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: S2C_GetItemInfo: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Item", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Item == nil {
				m.Item = &XItem{}
			}
			if err := m.Item.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipProtoGameJiuMi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *S2C_SlotLevels) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProtoGameJiuMi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: S2C_SlotLevels: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: S2C_SlotLevels: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType == 0 {
				var v int32
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowProtoGameJiuMi
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int32(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				m.SlotCellNo = append(m.SlotCellNo, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowProtoGameJiuMi
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthProtoGameJiuMi
				}
				postIndex := iNdEx + packedLen
				if postIndex < 0 {
					return ErrInvalidLengthProtoGameJiuMi
				}
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				var elementCount int
				var count int
				for _, integer := range dAtA[iNdEx:postIndex] {
					if integer < 128 {
						count++
					}
				}
				elementCount = count
				if elementCount != 0 && len(m.SlotCellNo) == 0 {
					m.SlotCellNo = make([]int32, 0, elementCount)
				}
				for iNdEx < postIndex {
					var v int32
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowProtoGameJiuMi
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= int32(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					m.SlotCellNo = append(m.SlotCellNo, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field SlotCellNo", wireType)
			}
		default:
			iNdEx = preIndex
			skippy, err := skipProtoGameJiuMi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *S2C_BatchAddFurniture) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProtoGameJiuMi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: S2C_BatchAddFurniture: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: S2C_BatchAddFurniture: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Furniture", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Furniture = append(m.Furniture, &FurnitureItem{})
			if err := m.Furniture[len(m.Furniture)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Reason", wireType)
			}
			m.Reason = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Reason |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipProtoGameJiuMi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *XPuzzleInfo) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProtoGameJiuMi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: _puzzleInfo: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: _puzzleInfo: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PuzzleId", wireType)
			}
			m.PuzzleId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.PuzzleId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field BeginTime", wireType)
			}
			m.BeginTime = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.BeginTime |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ManureTimes", wireType)
			}
			m.ManureTimes = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ManureTimes |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field GrawRate", wireType)
			}
			m.GrawRate = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.GrawRate |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CollectedTimes", wireType)
			}
			m.CollectedTimes = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CollectedTimes |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SeedId", wireType)
			}
			m.SeedId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.SeedId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 7:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PuzzleType", wireType)
			}
			m.PuzzleType = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.PuzzleType |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 8:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field NextStageTime", wireType)
			}
			m.NextStageTime = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.NextStageTime |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 9:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Stage", wireType)
			}
			m.Stage = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Stage |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipProtoGameJiuMi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *C2S_Farm_GetFarmInfo) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProtoGameJiuMi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: C2S_Farm_GetFarmInfo: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: C2S_Farm_GetFarmInfo: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipProtoGameJiuMi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *S2C_Farm_GetFarmInfo) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProtoGameJiuMi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: S2C_Farm_GetFarmInfo: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: S2C_Farm_GetFarmInfo: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AllPuzzle", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AllPuzzle = append(m.AllPuzzle, &XPuzzleInfo{})
			if err := m.AllPuzzle[len(m.AllPuzzle)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType == 0 {
				var v int32
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowProtoGameJiuMi
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int32(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				m.EmptyPuzzleId = append(m.EmptyPuzzleId, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowProtoGameJiuMi
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthProtoGameJiuMi
				}
				postIndex := iNdEx + packedLen
				if postIndex < 0 {
					return ErrInvalidLengthProtoGameJiuMi
				}
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				var elementCount int
				var count int
				for _, integer := range dAtA[iNdEx:postIndex] {
					if integer < 128 {
						count++
					}
				}
				elementCount = count
				if elementCount != 0 && len(m.EmptyPuzzleId) == 0 {
					m.EmptyPuzzleId = make([]int32, 0, elementCount)
				}
				for iNdEx < postIndex {
					var v int32
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowProtoGameJiuMi
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= int32(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					m.EmptyPuzzleId = append(m.EmptyPuzzleId, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field EmptyPuzzleId", wireType)
			}
		default:
			iNdEx = preIndex
			skippy, err := skipProtoGameJiuMi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *C2S_Farm_Plant) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProtoGameJiuMi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: C2S_Farm_Plant: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: C2S_Farm_Plant: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PuzzleId", wireType)
			}
			m.PuzzleId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.PuzzleId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SeedId", wireType)
			}
			m.SeedId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.SeedId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipProtoGameJiuMi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *S2C_Farm_Plant) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProtoGameJiuMi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: S2C_Farm_Plant: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: S2C_Farm_Plant: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Result", wireType)
			}
			m.Result = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Result |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PuzzleId", wireType)
			}
			m.PuzzleId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.PuzzleId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ItemId", wireType)
			}
			m.ItemId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ItemId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipProtoGameJiuMi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *C2S_Farm_Manure) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProtoGameJiuMi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: C2S_Farm_Manure: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: C2S_Farm_Manure: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PuzzleId", wireType)
			}
			m.PuzzleId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.PuzzleId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field FertilizerId", wireType)
			}
			m.FertilizerId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.FertilizerId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipProtoGameJiuMi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *S2C_Farm_Manure) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProtoGameJiuMi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: S2C_Farm_Manure: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: S2C_Farm_Manure: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Result", wireType)
			}
			m.Result = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Result |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PuzzleId", wireType)
			}
			m.PuzzleId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.PuzzleId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ItemId", wireType)
			}
			m.ItemId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ItemId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipProtoGameJiuMi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *S2C_Farm_PuzzleInfo) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProtoGameJiuMi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: S2C_Farm_PuzzleInfo: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: S2C_Farm_PuzzleInfo: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Puzzle", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Puzzle == nil {
				m.Puzzle = &XPuzzleInfo{}
			}
			if err := m.Puzzle.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipProtoGameJiuMi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *S2C_Farm_SyncStatus) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProtoGameJiuMi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: S2C_Farm_SyncStatus: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: S2C_Farm_SyncStatus: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PuzzleId", wireType)
			}
			m.PuzzleId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.PuzzleId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Status", wireType)
			}
			m.Status = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Status |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field NextStageTime", wireType)
			}
			m.NextStageTime = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.NextStageTime |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipProtoGameJiuMi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *C2S_Farm_UnlockPuzzle) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProtoGameJiuMi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: C2S_Farm_UnlockPuzzle: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: C2S_Farm_UnlockPuzzle: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PuzzleType", wireType)
			}
			m.PuzzleType = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.PuzzleType |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PuzzleId", wireType)
			}
			m.PuzzleId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.PuzzleId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipProtoGameJiuMi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *S2C_Farm_UnlockPuzzle) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProtoGameJiuMi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: S2C_Farm_UnlockPuzzle: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: S2C_Farm_UnlockPuzzle: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Result", wireType)
			}
			m.Result = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Result |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PuzzleId", wireType)
			}
			m.PuzzleId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.PuzzleId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipProtoGameJiuMi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *C2S_Farm_Water) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProtoGameJiuMi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: C2S_Farm_Water: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: C2S_Farm_Water: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PuzzleId", wireType)
			}
			m.PuzzleId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.PuzzleId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipProtoGameJiuMi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *S2C_Farm_Water) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProtoGameJiuMi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: S2C_Farm_Water: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: S2C_Farm_Water: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Result", wireType)
			}
			m.Result = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Result |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PuzzleId", wireType)
			}
			m.PuzzleId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.PuzzleId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipProtoGameJiuMi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *C2S_Farm_Reap) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProtoGameJiuMi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: C2S_Farm_Reap: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: C2S_Farm_Reap: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PuzzleId", wireType)
			}
			m.PuzzleId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.PuzzleId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipProtoGameJiuMi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *S2C_Farm_Reap) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProtoGameJiuMi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: S2C_Farm_Reap: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: S2C_Farm_Reap: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Result", wireType)
			}
			m.Result = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Result |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PuzzleId", wireType)
			}
			m.PuzzleId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.PuzzleId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RewardId", wireType)
			}
			m.RewardId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.RewardId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RewardCount", wireType)
			}
			m.RewardCount = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.RewardCount |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipProtoGameJiuMi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *XPlantPuzzleInfo) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProtoGameJiuMi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: _plantPuzzleInfo: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: _plantPuzzleInfo: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PuzzleId", wireType)
			}
			m.PuzzleId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.PuzzleId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field BeginTime", wireType)
			}
			m.BeginTime = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.BeginTime |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CollectedTimes", wireType)
			}
			m.CollectedTimes = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CollectedTimes |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SeedId", wireType)
			}
			m.SeedId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.SeedId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field NextStageTime", wireType)
			}
			m.NextStageTime = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.NextStageTime |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Stage", wireType)
			}
			m.Stage = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Stage |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipProtoGameJiuMi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *S2C_PlantFarm_GetFarmInfo) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProtoGameJiuMi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: S2C_PlantFarm_GetFarmInfo: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: S2C_PlantFarm_GetFarmInfo: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field BuildUId", wireType)
			}
			m.BuildUId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.BuildUId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field BuildId", wireType)
			}
			m.BuildId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.BuildId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AllPuzzle", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AllPuzzle = append(m.AllPuzzle, &XPlantPuzzleInfo{})
			if err := m.AllPuzzle[len(m.AllPuzzle)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType == 0 {
				var v int32
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowProtoGameJiuMi
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int32(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				m.EmptyPuzzleId = append(m.EmptyPuzzleId, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowProtoGameJiuMi
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthProtoGameJiuMi
				}
				postIndex := iNdEx + packedLen
				if postIndex < 0 {
					return ErrInvalidLengthProtoGameJiuMi
				}
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				var elementCount int
				var count int
				for _, integer := range dAtA[iNdEx:postIndex] {
					if integer < 128 {
						count++
					}
				}
				elementCount = count
				if elementCount != 0 && len(m.EmptyPuzzleId) == 0 {
					m.EmptyPuzzleId = make([]int32, 0, elementCount)
				}
				for iNdEx < postIndex {
					var v int32
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowProtoGameJiuMi
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= int32(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					m.EmptyPuzzleId = append(m.EmptyPuzzleId, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field EmptyPuzzleId", wireType)
			}
		default:
			iNdEx = preIndex
			skippy, err := skipProtoGameJiuMi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *C2S_PlantFarm_Plant) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProtoGameJiuMi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: C2S_PlantFarm_Plant: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: C2S_PlantFarm_Plant: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field BuildUId", wireType)
			}
			m.BuildUId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.BuildUId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PuzzleId", wireType)
			}
			m.PuzzleId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.PuzzleId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SeedId", wireType)
			}
			m.SeedId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.SeedId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipProtoGameJiuMi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *S2C_PlantFarm_Plant) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProtoGameJiuMi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: S2C_PlantFarm_Plant: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: S2C_PlantFarm_Plant: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field BuildUId", wireType)
			}
			m.BuildUId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.BuildUId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Result", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Result == nil {
				m.Result = &OperationResult{}
			}
			if err := m.Result.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PuzzleId", wireType)
			}
			m.PuzzleId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.PuzzleId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ItemId", wireType)
			}
			m.ItemId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ItemId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipProtoGameJiuMi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *C2S_PlantFarm_PuzzleAction) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProtoGameJiuMi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: C2S_PlantFarm_PuzzleAction: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: C2S_PlantFarm_PuzzleAction: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field BuildUId", wireType)
			}
			m.BuildUId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.BuildUId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PuzzleId", wireType)
			}
			m.PuzzleId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.PuzzleId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Action", wireType)
			}
			m.Action = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Action |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipProtoGameJiuMi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *S2C_PlantFarm_PuzzleInfo) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProtoGameJiuMi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: S2C_PlantFarm_PuzzleInfo: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: S2C_PlantFarm_PuzzleInfo: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field BuildUId", wireType)
			}
			m.BuildUId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.BuildUId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Puzzle", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Puzzle == nil {
				m.Puzzle = &XPlantPuzzleInfo{}
			}
			if err := m.Puzzle.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipProtoGameJiuMi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *S2C_PlantFarm_Water) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProtoGameJiuMi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: S2C_PlantFarm_Water: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: S2C_PlantFarm_Water: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field BuildUId", wireType)
			}
			m.BuildUId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.BuildUId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Result", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Result == nil {
				m.Result = &OperationResult{}
			}
			if err := m.Result.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PuzzleId", wireType)
			}
			m.PuzzleId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.PuzzleId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipProtoGameJiuMi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *S2C_PlantFarm_Reap) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProtoGameJiuMi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: S2C_PlantFarm_Reap: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: S2C_PlantFarm_Reap: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field BuildUId", wireType)
			}
			m.BuildUId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.BuildUId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Result", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Result == nil {
				m.Result = &OperationResult{}
			}
			if err := m.Result.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PuzzleId", wireType)
			}
			m.PuzzleId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.PuzzleId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType == 0 {
				var v int32
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowProtoGameJiuMi
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int32(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				m.RewardIds = append(m.RewardIds, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowProtoGameJiuMi
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthProtoGameJiuMi
				}
				postIndex := iNdEx + packedLen
				if postIndex < 0 {
					return ErrInvalidLengthProtoGameJiuMi
				}
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				var elementCount int
				var count int
				for _, integer := range dAtA[iNdEx:postIndex] {
					if integer < 128 {
						count++
					}
				}
				elementCount = count
				if elementCount != 0 && len(m.RewardIds) == 0 {
					m.RewardIds = make([]int32, 0, elementCount)
				}
				for iNdEx < postIndex {
					var v int32
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowProtoGameJiuMi
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= int32(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					m.RewardIds = append(m.RewardIds, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field RewardIds", wireType)
			}
		case 5:
			if wireType == 0 {
				var v int32
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowProtoGameJiuMi
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int32(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				m.RewardCounts = append(m.RewardCounts, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowProtoGameJiuMi
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthProtoGameJiuMi
				}
				postIndex := iNdEx + packedLen
				if postIndex < 0 {
					return ErrInvalidLengthProtoGameJiuMi
				}
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				var elementCount int
				var count int
				for _, integer := range dAtA[iNdEx:postIndex] {
					if integer < 128 {
						count++
					}
				}
				elementCount = count
				if elementCount != 0 && len(m.RewardCounts) == 0 {
					m.RewardCounts = make([]int32, 0, elementCount)
				}
				for iNdEx < postIndex {
					var v int32
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowProtoGameJiuMi
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= int32(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					m.RewardCounts = append(m.RewardCounts, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field RewardCounts", wireType)
			}
		default:
			iNdEx = preIndex
			skippy, err := skipProtoGameJiuMi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *XAnimalPuzzleInfo) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProtoGameJiuMi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: _animalPuzzleInfo: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: _animalPuzzleInfo: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PuzzleId", wireType)
			}
			m.PuzzleId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.PuzzleId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field BeginTime", wireType)
			}
			m.BeginTime = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.BeginTime |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CollectedTimes", wireType)
			}
			m.CollectedTimes = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CollectedTimes |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SeedId", wireType)
			}
			m.SeedId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.SeedId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CurrentSatiety", wireType)
			}
			m.CurrentSatiety = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CurrentSatiety |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field NeedTotalSatiety", wireType)
			}
			m.NeedTotalSatiety = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.NeedTotalSatiety |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 7:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Stage", wireType)
			}
			m.Stage = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Stage |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipProtoGameJiuMi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *S2C_AnimalFarm_GetFarmInfo) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProtoGameJiuMi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: S2C_AnimalFarm_GetFarmInfo: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: S2C_AnimalFarm_GetFarmInfo: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field BuildUId", wireType)
			}
			m.BuildUId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.BuildUId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field BuildId", wireType)
			}
			m.BuildId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.BuildId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AllPuzzle", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AllPuzzle = append(m.AllPuzzle, &XAnimalPuzzleInfo{})
			if err := m.AllPuzzle[len(m.AllPuzzle)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType == 0 {
				var v int32
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowProtoGameJiuMi
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int32(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				m.EmptyPuzzleId = append(m.EmptyPuzzleId, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowProtoGameJiuMi
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthProtoGameJiuMi
				}
				postIndex := iNdEx + packedLen
				if postIndex < 0 {
					return ErrInvalidLengthProtoGameJiuMi
				}
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				var elementCount int
				var count int
				for _, integer := range dAtA[iNdEx:postIndex] {
					if integer < 128 {
						count++
					}
				}
				elementCount = count
				if elementCount != 0 && len(m.EmptyPuzzleId) == 0 {
					m.EmptyPuzzleId = make([]int32, 0, elementCount)
				}
				for iNdEx < postIndex {
					var v int32
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowProtoGameJiuMi
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= int32(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					m.EmptyPuzzleId = append(m.EmptyPuzzleId, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field EmptyPuzzleId", wireType)
			}
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Inventory", wireType)
			}
			m.Inventory = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Inventory |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipProtoGameJiuMi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *C2S_AnimalFarm_Plant) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProtoGameJiuMi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: C2S_AnimalFarm_Plant: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: C2S_AnimalFarm_Plant: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field BuildUId", wireType)
			}
			m.BuildUId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.BuildUId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PuzzleId", wireType)
			}
			m.PuzzleId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.PuzzleId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SeedId", wireType)
			}
			m.SeedId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.SeedId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipProtoGameJiuMi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *S2C_AnimalFarm_Plant) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProtoGameJiuMi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: S2C_AnimalFarm_Plant: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: S2C_AnimalFarm_Plant: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field BuildUId", wireType)
			}
			m.BuildUId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.BuildUId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Result", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Result == nil {
				m.Result = &OperationResult{}
			}
			if err := m.Result.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PuzzleId", wireType)
			}
			m.PuzzleId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.PuzzleId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ItemId", wireType)
			}
			m.ItemId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ItemId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipProtoGameJiuMi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *C2S_AnimalFarm_PuzzleAction) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProtoGameJiuMi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: C2S_AnimalFarm_PuzzleAction: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: C2S_AnimalFarm_PuzzleAction: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field BuildUId", wireType)
			}
			m.BuildUId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.BuildUId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PuzzleId", wireType)
			}
			m.PuzzleId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.PuzzleId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Action", wireType)
			}
			m.Action = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Action |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipProtoGameJiuMi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *S2C_AnimalFarm_PuzzleInfo) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProtoGameJiuMi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: S2C_AnimalFarm_PuzzleInfo: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: S2C_AnimalFarm_PuzzleInfo: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field BuildUId", wireType)
			}
			m.BuildUId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.BuildUId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Puzzle", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Puzzle == nil {
				m.Puzzle = &XAnimalPuzzleInfo{}
			}
			if err := m.Puzzle.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Inventory", wireType)
			}
			m.Inventory = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Inventory |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipProtoGameJiuMi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *S2C_AnimalFarm_Inventory) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProtoGameJiuMi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: S2C_AnimalFarm_Inventory: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: S2C_AnimalFarm_Inventory: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field BuildUId", wireType)
			}
			m.BuildUId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.BuildUId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Inventory", wireType)
			}
			m.Inventory = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Inventory |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipProtoGameJiuMi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *S2C_AnimalFarm_Reap) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProtoGameJiuMi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: S2C_AnimalFarm_Reap: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: S2C_AnimalFarm_Reap: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field BuildUId", wireType)
			}
			m.BuildUId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.BuildUId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Result", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Result == nil {
				m.Result = &OperationResult{}
			}
			if err := m.Result.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PuzzleId", wireType)
			}
			m.PuzzleId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.PuzzleId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType == 0 {
				var v int32
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowProtoGameJiuMi
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int32(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				m.RewardIds = append(m.RewardIds, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowProtoGameJiuMi
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthProtoGameJiuMi
				}
				postIndex := iNdEx + packedLen
				if postIndex < 0 {
					return ErrInvalidLengthProtoGameJiuMi
				}
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				var elementCount int
				var count int
				for _, integer := range dAtA[iNdEx:postIndex] {
					if integer < 128 {
						count++
					}
				}
				elementCount = count
				if elementCount != 0 && len(m.RewardIds) == 0 {
					m.RewardIds = make([]int32, 0, elementCount)
				}
				for iNdEx < postIndex {
					var v int32
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowProtoGameJiuMi
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= int32(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					m.RewardIds = append(m.RewardIds, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field RewardIds", wireType)
			}
		case 5:
			if wireType == 0 {
				var v int32
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowProtoGameJiuMi
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int32(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				m.RewardCounts = append(m.RewardCounts, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowProtoGameJiuMi
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthProtoGameJiuMi
				}
				postIndex := iNdEx + packedLen
				if postIndex < 0 {
					return ErrInvalidLengthProtoGameJiuMi
				}
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				var elementCount int
				var count int
				for _, integer := range dAtA[iNdEx:postIndex] {
					if integer < 128 {
						count++
					}
				}
				elementCount = count
				if elementCount != 0 && len(m.RewardCounts) == 0 {
					m.RewardCounts = make([]int32, 0, elementCount)
				}
				for iNdEx < postIndex {
					var v int32
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowProtoGameJiuMi
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= int32(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					m.RewardCounts = append(m.RewardCounts, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field RewardCounts", wireType)
			}
		default:
			iNdEx = preIndex
			skippy, err := skipProtoGameJiuMi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *XMission) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProtoGameJiuMi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: _mission: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: _mission: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Status", wireType)
			}
			m.Status = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Status |= Enum_MissionStatus(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType == 0 {
				var v int32
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowProtoGameJiuMi
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int32(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				m.CurrProcess = append(m.CurrProcess, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowProtoGameJiuMi
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthProtoGameJiuMi
				}
				postIndex := iNdEx + packedLen
				if postIndex < 0 {
					return ErrInvalidLengthProtoGameJiuMi
				}
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				var elementCount int
				var count int
				for _, integer := range dAtA[iNdEx:postIndex] {
					if integer < 128 {
						count++
					}
				}
				elementCount = count
				if elementCount != 0 && len(m.CurrProcess) == 0 {
					m.CurrProcess = make([]int32, 0, elementCount)
				}
				for iNdEx < postIndex {
					var v int32
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowProtoGameJiuMi
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= int32(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					m.CurrProcess = append(m.CurrProcess, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field CurrProcess", wireType)
			}
		case 4:
			if wireType == 0 {
				var v int32
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowProtoGameJiuMi
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int32(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				m.TotalProcess = append(m.TotalProcess, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowProtoGameJiuMi
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthProtoGameJiuMi
				}
				postIndex := iNdEx + packedLen
				if postIndex < 0 {
					return ErrInvalidLengthProtoGameJiuMi
				}
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				var elementCount int
				var count int
				for _, integer := range dAtA[iNdEx:postIndex] {
					if integer < 128 {
						count++
					}
				}
				elementCount = count
				if elementCount != 0 && len(m.TotalProcess) == 0 {
					m.TotalProcess = make([]int32, 0, elementCount)
				}
				for iNdEx < postIndex {
					var v int32
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowProtoGameJiuMi
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= int32(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					m.TotalProcess = append(m.TotalProcess, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field TotalProcess", wireType)
			}
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CompleteTimes", wireType)
			}
			m.CompleteTimes = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CompleteTimes |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipProtoGameJiuMi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *C2S_AllMissionInfo) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProtoGameJiuMi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: C2S_AllMissionInfo: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: C2S_AllMissionInfo: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipProtoGameJiuMi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *S2C_AllMissionInfo) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProtoGameJiuMi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: S2C_AllMissionInfo: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: S2C_AllMissionInfo: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Missions", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Missions = append(m.Missions, &XMission{})
			if err := m.Missions[len(m.Missions)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipProtoGameJiuMi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *C2S_OneMissionInfo) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProtoGameJiuMi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: C2S_OneMissionInfo: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: C2S_OneMissionInfo: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipProtoGameJiuMi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *S2C_OneMissionInfo) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProtoGameJiuMi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: S2C_OneMissionInfo: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: S2C_OneMissionInfo: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Mission", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Mission == nil {
				m.Mission = &XMission{}
			}
			if err := m.Mission.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipProtoGameJiuMi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *C2S_AcceptMission) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProtoGameJiuMi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: C2S_AcceptMission: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: C2S_AcceptMission: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipProtoGameJiuMi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *S2C_AcceptMission) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProtoGameJiuMi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: S2C_AcceptMission: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: S2C_AcceptMission: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Ret", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Ret == nil {
				m.Ret = &OperationResult{}
			}
			if err := m.Ret.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipProtoGameJiuMi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *C2S_ReportMission) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProtoGameJiuMi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: C2S_ReportMission: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: C2S_ReportMission: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipProtoGameJiuMi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *S2C_ReportMission) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProtoGameJiuMi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: S2C_ReportMission: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: S2C_ReportMission: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Ret", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Ret == nil {
				m.Ret = &OperationResult{}
			}
			if err := m.Ret.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipProtoGameJiuMi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *C2S_GetMissionReward) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProtoGameJiuMi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: C2S_GetMissionReward: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: C2S_GetMissionReward: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipProtoGameJiuMi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *S2C_GetMissionReward) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProtoGameJiuMi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: S2C_GetMissionReward: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: S2C_GetMissionReward: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Ret", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Ret == nil {
				m.Ret = &OperationResult{}
			}
			if err := m.Ret.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipProtoGameJiuMi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *S2C_MissionCanAcceptList) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProtoGameJiuMi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: S2C_MissionCanAcceptList: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: S2C_MissionCanAcceptList: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType == 0 {
				var v int32
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowProtoGameJiuMi
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int32(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				m.MissionId = append(m.MissionId, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowProtoGameJiuMi
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthProtoGameJiuMi
				}
				postIndex := iNdEx + packedLen
				if postIndex < 0 {
					return ErrInvalidLengthProtoGameJiuMi
				}
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				var elementCount int
				var count int
				for _, integer := range dAtA[iNdEx:postIndex] {
					if integer < 128 {
						count++
					}
				}
				elementCount = count
				if elementCount != 0 && len(m.MissionId) == 0 {
					m.MissionId = make([]int32, 0, elementCount)
				}
				for iNdEx < postIndex {
					var v int32
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowProtoGameJiuMi
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= int32(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					m.MissionId = append(m.MissionId, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field MissionId", wireType)
			}
		default:
			iNdEx = preIndex
			skippy, err := skipProtoGameJiuMi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *XFurniture) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProtoGameJiuMi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: _furniture: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: _furniture: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Pos", wireType)
			}
			m.Pos = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Pos |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Dir", wireType)
			}
			m.Dir = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Dir |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipProtoGameJiuMi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *XTheme) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProtoGameJiuMi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: _theme: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: _theme: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Name = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Unlock", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Unlock = bool(v != 0)
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Furniturelist", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Furniturelist = append(m.Furniturelist, &XFurniture{})
			if err := m.Furniturelist[len(m.Furniturelist)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipProtoGameJiuMi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *XHomeInfo) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProtoGameJiuMi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: _homeInfo: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: _homeInfo: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Level", wireType)
			}
			m.Level = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Level |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CurrThemeId", wireType)
			}
			m.CurrThemeId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CurrThemeId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipProtoGameJiuMi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *C2S_GetHomeInfo) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProtoGameJiuMi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: C2S_GetHomeInfo: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: C2S_GetHomeInfo: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipProtoGameJiuMi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *S2C_GetHomeInfo) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProtoGameJiuMi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: S2C_GetHomeInfo: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: S2C_GetHomeInfo: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Home", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Home == nil {
				m.Home = &XHomeInfo{}
			}
			if err := m.Home.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipProtoGameJiuMi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *C2S_GetAllThemesInfo) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProtoGameJiuMi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: C2S_GetAllThemesInfo: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: C2S_GetAllThemesInfo: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipProtoGameJiuMi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *S2C_GetAllThemesInfo) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProtoGameJiuMi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: S2C_GetAllThemesInfo: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: S2C_GetAllThemesInfo: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Themes", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Themes = append(m.Themes, &XTheme{})
			if err := m.Themes[len(m.Themes)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipProtoGameJiuMi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *C2S_GetSingleThemeInfo) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProtoGameJiuMi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: C2S_GetSingleThemeInfo: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: C2S_GetSingleThemeInfo: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipProtoGameJiuMi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *S2C_GetSingleThemeInfo) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProtoGameJiuMi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: S2C_GetSingleThemeInfo: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: S2C_GetSingleThemeInfo: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Theme", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Theme == nil {
				m.Theme = &XTheme{}
			}
			if err := m.Theme.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipProtoGameJiuMi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *C2S_SaveThemeInfo) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProtoGameJiuMi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: C2S_SaveThemeInfo: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: C2S_SaveThemeInfo: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Theme", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Theme == nil {
				m.Theme = &XTheme{}
			}
			if err := m.Theme.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipProtoGameJiuMi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *C2S_HomeUp) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProtoGameJiuMi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: C2S_HomeUp: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: C2S_HomeUp: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipProtoGameJiuMi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *C2S_ChangeThemeName) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProtoGameJiuMi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: C2S_ChangeThemeName: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: C2S_ChangeThemeName: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Name = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipProtoGameJiuMi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *C2S_UnlockTheme) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProtoGameJiuMi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: C2S_UnlockTheme: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: C2S_UnlockTheme: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipProtoGameJiuMi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *C2S_Forest_CutTree) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProtoGameJiuMi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: C2S_Forest_CutTree: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: C2S_Forest_CutTree: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TreeId", wireType)
			}
			m.TreeId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.TreeId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipProtoGameJiuMi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *S2C_Forest_CutTree) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProtoGameJiuMi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: S2C_Forest_CutTree: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: S2C_Forest_CutTree: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TreeId", wireType)
			}
			m.TreeId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.TreeId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Ret", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Ret == nil {
				m.Ret = &OperationResult{}
			}
			if err := m.Ret.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType == 0 {
				var v int32
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowProtoGameJiuMi
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int32(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				m.ItemId = append(m.ItemId, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowProtoGameJiuMi
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthProtoGameJiuMi
				}
				postIndex := iNdEx + packedLen
				if postIndex < 0 {
					return ErrInvalidLengthProtoGameJiuMi
				}
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				var elementCount int
				var count int
				for _, integer := range dAtA[iNdEx:postIndex] {
					if integer < 128 {
						count++
					}
				}
				elementCount = count
				if elementCount != 0 && len(m.ItemId) == 0 {
					m.ItemId = make([]int32, 0, elementCount)
				}
				for iNdEx < postIndex {
					var v int32
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowProtoGameJiuMi
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= int32(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					m.ItemId = append(m.ItemId, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field ItemId", wireType)
			}
		case 4:
			if wireType == 0 {
				var v int32
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowProtoGameJiuMi
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int32(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				m.ItemCount = append(m.ItemCount, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowProtoGameJiuMi
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthProtoGameJiuMi
				}
				postIndex := iNdEx + packedLen
				if postIndex < 0 {
					return ErrInvalidLengthProtoGameJiuMi
				}
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				var elementCount int
				var count int
				for _, integer := range dAtA[iNdEx:postIndex] {
					if integer < 128 {
						count++
					}
				}
				elementCount = count
				if elementCount != 0 && len(m.ItemCount) == 0 {
					m.ItemCount = make([]int32, 0, elementCount)
				}
				for iNdEx < postIndex {
					var v int32
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowProtoGameJiuMi
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= int32(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					m.ItemCount = append(m.ItemCount, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field ItemCount", wireType)
			}
		default:
			iNdEx = preIndex
			skippy, err := skipProtoGameJiuMi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *C2S_Mine_GetMaxLayer) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProtoGameJiuMi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: C2S_Mine_GetMaxLayer: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: C2S_Mine_GetMaxLayer: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipProtoGameJiuMi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *S2C_Mine_GetMaxLayer) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProtoGameJiuMi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: S2C_Mine_GetMaxLayer: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: S2C_Mine_GetMaxLayer: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MaxLayer", wireType)
			}
			m.MaxLayer = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MaxLayer |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipProtoGameJiuMi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *C2S_Mine_EnterLayer) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProtoGameJiuMi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: C2S_Mine_EnterLayer: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: C2S_Mine_EnterLayer: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Layer", wireType)
			}
			m.Layer = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Layer |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipProtoGameJiuMi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *S2C_Mine_EnterLayer) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProtoGameJiuMi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: S2C_Mine_EnterLayer: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: S2C_Mine_EnterLayer: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Layer", wireType)
			}
			m.Layer = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Layer |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ErrCode", wireType)
			}
			m.ErrCode = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ErrCode |= Enum_Mine_EnterCode(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field StartIndex", wireType)
			}
			m.StartIndex = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.StartIndex |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field NeedEnergy", wireType)
			}
			m.NeedEnergy = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.NeedEnergy |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipProtoGameJiuMi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *C2S_Mine_Dig) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProtoGameJiuMi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: C2S_Mine_Dig: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: C2S_Mine_Dig: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Index", wireType)
			}
			m.Index = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Index |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipProtoGameJiuMi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *S2C_Mine_Dig) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProtoGameJiuMi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: S2C_Mine_Dig: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: S2C_Mine_Dig: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Index", wireType)
			}
			m.Index = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Index |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ErrCode", wireType)
			}
			m.ErrCode = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ErrCode |= Enum_Mine_DigCode(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ItemId", wireType)
			}
			m.ItemId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ItemId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ItemCount", wireType)
			}
			m.ItemCount = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ItemCount |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RewardType", wireType)
			}
			m.RewardType = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.RewardType |= Enum_Mine_RewardType(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Rewardid", wireType)
			}
			m.Rewardid = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Rewardid |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipProtoGameJiuMi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *C2S_Mine_GetReward) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProtoGameJiuMi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: C2S_Mine_GetReward: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: C2S_Mine_GetReward: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Index", wireType)
			}
			m.Index = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Index |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipProtoGameJiuMi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *S2C_Mine_GetReward) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProtoGameJiuMi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: S2C_Mine_GetReward: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: S2C_Mine_GetReward: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Index", wireType)
			}
			m.Index = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Index |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ErrCode", wireType)
			}
			m.ErrCode = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ErrCode |= Enum_Mine_GetRewardCode(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ItemId", wireType)
			}
			m.ItemId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ItemId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ItemCount", wireType)
			}
			m.ItemCount = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ItemCount |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipProtoGameJiuMi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *C2S_GetUserAllValue) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProtoGameJiuMi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: C2S_GetUserAllValue: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: C2S_GetUserAllValue: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipProtoGameJiuMi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *S2C_GetUserAllValue) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProtoGameJiuMi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: S2C_GetUserAllValue: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: S2C_GetUserAllValue: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UserValue", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.UserValue == nil {
				m.UserValue = &XUser{}
			}
			if err := m.UserValue.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipProtoGameJiuMi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *C2S_ChangeUserIntAttr) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProtoGameJiuMi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: C2S_ChangeUserIntAttr: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: C2S_ChangeUserIntAttr: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field AttrSort", wireType)
			}
			m.AttrSort = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.AttrSort |= Enum_UserAttr(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ChangeToValue", wireType)
			}
			m.ChangeToValue = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ChangeToValue |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipProtoGameJiuMi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *S2C_ChangeUserIntAttr) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProtoGameJiuMi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: S2C_ChangeUserIntAttr: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: S2C_ChangeUserIntAttr: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Ret", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Ret == nil {
				m.Ret = &OperationResult{}
			}
			if err := m.Ret.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field AttrSort", wireType)
			}
			m.AttrSort = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.AttrSort |= Enum_UserAttr(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CurValue", wireType)
			}
			m.CurValue = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CurValue |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field OrigValue", wireType)
			}
			m.OrigValue = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.OrigValue |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Reason", wireType)
			}
			m.Reason = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Reason |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipProtoGameJiuMi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *C2S_ChangeUserStrAttr) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProtoGameJiuMi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: C2S_ChangeUserStrAttr: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: C2S_ChangeUserStrAttr: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field AttrSort", wireType)
			}
			m.AttrSort = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.AttrSort |= Enum_UserAttr(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ChangeToValue", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ChangeToValue = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipProtoGameJiuMi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *S2C_ChangeUserStrAttr) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProtoGameJiuMi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: S2C_ChangeUserStrAttr: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: S2C_ChangeUserStrAttr: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Ret", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Ret == nil {
				m.Ret = &OperationResult{}
			}
			if err := m.Ret.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field AttrSort", wireType)
			}
			m.AttrSort = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.AttrSort |= Enum_UserAttr(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CurValue", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CurValue = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field OrigValue", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.OrigValue = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Reason", wireType)
			}
			m.Reason = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Reason |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipProtoGameJiuMi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *S2C_AddAttrList) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProtoGameJiuMi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: S2C_AddAttrList: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: S2C_AddAttrList: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field AttrSort", wireType)
			}
			m.AttrSort = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.AttrSort |= Enum_UserAttr(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType == 0 {
				var v int32
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowProtoGameJiuMi
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int32(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				m.ChangeValues = append(m.ChangeValues, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowProtoGameJiuMi
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthProtoGameJiuMi
				}
				postIndex := iNdEx + packedLen
				if postIndex < 0 {
					return ErrInvalidLengthProtoGameJiuMi
				}
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				var elementCount int
				var count int
				for _, integer := range dAtA[iNdEx:postIndex] {
					if integer < 128 {
						count++
					}
				}
				elementCount = count
				if elementCount != 0 && len(m.ChangeValues) == 0 {
					m.ChangeValues = make([]int32, 0, elementCount)
				}
				for iNdEx < postIndex {
					var v int32
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowProtoGameJiuMi
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= int32(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					m.ChangeValues = append(m.ChangeValues, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field ChangeValues", wireType)
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Reason", wireType)
			}
			m.Reason = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Reason |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipProtoGameJiuMi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *C2S_StorePosition) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProtoGameJiuMi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: C2S_StorePosition: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: C2S_StorePosition: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field X", wireType)
			}
			m.X = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.X |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Y", wireType)
			}
			m.Y = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Y |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipProtoGameJiuMi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ShopItem) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProtoGameJiuMi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ShopItem: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ShopItem: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Restriction", wireType)
			}
			m.Restriction = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Restriction |= Enum_Shop_Restriction(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ResetTimeStamp", wireType)
			}
			m.ResetTimeStamp = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ResetTimeStamp |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field IsTimeLimit", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.IsTimeLimit = bool(v != 0)
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CurrentTurnBuyNo", wireType)
			}
			m.CurrentTurnBuyNo = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CurrentTurnBuyNo |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MaxLimit", wireType)
			}
			m.MaxLimit = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MaxLimit |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 7:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PurchasePrice", wireType)
			}
			m.PurchasePrice = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.PurchasePrice |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 8:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field StartTime", wireType)
			}
			m.StartTime = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.StartTime |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 9:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field EndTime", wireType)
			}
			m.EndTime = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.EndTime |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 10:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field WebChargeId", wireType)
			}
			m.WebChargeId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.WebChargeId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 11:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field WebOrder", wireType)
			}
			m.WebOrder = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.WebOrder |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipProtoGameJiuMi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *HasBuyItem) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProtoGameJiuMi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: HasBuyItem: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: HasBuyItem: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field HasBuy", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.HasBuy = bool(v != 0)
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field WebChargeId", wireType)
			}
			m.WebChargeId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.WebChargeId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field WebOrder", wireType)
			}
			m.WebOrder = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.WebOrder |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipProtoGameJiuMi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *S2C_Shop_GetAllItems) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProtoGameJiuMi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: S2C_Shop_GetAllItems: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: S2C_Shop_GetAllItems: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ChargePearl", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ChargePearl = append(m.ChargePearl, &HasBuyItem{})
			if err := m.ChargePearl[len(m.ChargePearl)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field GiftList", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.GiftList = append(m.GiftList, &ShopItem{})
			if err := m.GiftList[len(m.GiftList)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MonthCard", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.MonthCard = append(m.MonthCard, &HasBuyItem{})
			if err := m.MonthCard[len(m.MonthCard)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipProtoGameJiuMi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *C2S_Shop_Buy) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProtoGameJiuMi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: C2S_Shop_Buy: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: C2S_Shop_Buy: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClientPrice", wireType)
			}
			m.ClientPrice = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ClientPrice |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipProtoGameJiuMi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *BuyResult) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProtoGameJiuMi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: BuyResult: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: BuyResult: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ResetTimeStamp", wireType)
			}
			m.ResetTimeStamp = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ResetTimeStamp |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CurrentTurnBuyNo", wireType)
			}
			m.CurrentTurnBuyNo = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CurrentTurnBuyNo |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipProtoGameJiuMi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *S2C_Shop_Buy) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProtoGameJiuMi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: S2C_Shop_Buy: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: S2C_Shop_Buy: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Result", wireType)
			}
			m.Result = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Result |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Notice", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Notice == nil {
				m.Notice = &FailNotice{}
			}
			if err := m.Notice.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Buyres", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Buyres == nil {
				m.Buyres = &BuyResult{}
			}
			if err := m.Buyres.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipProtoGameJiuMi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *C2S_Recharge_GetGift) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProtoGameJiuMi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: C2S_Recharge_GetGift: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: C2S_Recharge_GetGift: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field OrderId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.OrderId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipProtoGameJiuMi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *S2C_Recharge_GetGift) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProtoGameJiuMi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: S2C_Recharge_GetGift: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: S2C_Recharge_GetGift: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field OrderId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.OrderId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field GiftId", wireType)
			}
			m.GiftId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.GiftId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ErrCode", wireType)
			}
			m.ErrCode = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ErrCode |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Notice", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Notice == nil {
				m.Notice = &FailNotice{}
			}
			if err := m.Notice.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipProtoGameJiuMi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *C2S_Recharge_GetGiftConfirm) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProtoGameJiuMi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: C2S_Recharge_GetGiftConfirm: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: C2S_Recharge_GetGiftConfirm: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field OrderId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.OrderId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipProtoGameJiuMi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *C2S_Vip_ExpireDate) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProtoGameJiuMi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: C2S_Vip_ExpireDate: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: C2S_Vip_ExpireDate: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipProtoGameJiuMi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *S2C_Vip_ExpireDate) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProtoGameJiuMi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: S2C_Vip_ExpireDate: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: S2C_Vip_ExpireDate: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType == 0 {
				var v int32
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowProtoGameJiuMi
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int32(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				m.CardListId = append(m.CardListId, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowProtoGameJiuMi
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthProtoGameJiuMi
				}
				postIndex := iNdEx + packedLen
				if postIndex < 0 {
					return ErrInvalidLengthProtoGameJiuMi
				}
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				var elementCount int
				var count int
				for _, integer := range dAtA[iNdEx:postIndex] {
					if integer < 128 {
						count++
					}
				}
				elementCount = count
				if elementCount != 0 && len(m.CardListId) == 0 {
					m.CardListId = make([]int32, 0, elementCount)
				}
				for iNdEx < postIndex {
					var v int32
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowProtoGameJiuMi
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= int32(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					m.CardListId = append(m.CardListId, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field CardListId", wireType)
			}
		case 2:
			if wireType == 0 {
				var v int32
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowProtoGameJiuMi
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int32(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				m.ExpireDate = append(m.ExpireDate, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowProtoGameJiuMi
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthProtoGameJiuMi
				}
				postIndex := iNdEx + packedLen
				if postIndex < 0 {
					return ErrInvalidLengthProtoGameJiuMi
				}
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				var elementCount int
				var count int
				for _, integer := range dAtA[iNdEx:postIndex] {
					if integer < 128 {
						count++
					}
				}
				elementCount = count
				if elementCount != 0 && len(m.ExpireDate) == 0 {
					m.ExpireDate = make([]int32, 0, elementCount)
				}
				for iNdEx < postIndex {
					var v int32
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowProtoGameJiuMi
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= int32(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					m.ExpireDate = append(m.ExpireDate, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field ExpireDate", wireType)
			}
		default:
			iNdEx = preIndex
			skippy, err := skipProtoGameJiuMi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *S2C_Vip_BuyReward) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProtoGameJiuMi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: S2C_Vip_BuyReward: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: S2C_Vip_BuyReward: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CardId", wireType)
			}
			m.CardId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CardId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipProtoGameJiuMi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *S2C_Vip_DailyReward) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProtoGameJiuMi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: S2C_Vip_DailyReward: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: S2C_Vip_DailyReward: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType == 0 {
				var v int32
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowProtoGameJiuMi
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int32(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				m.CardListId = append(m.CardListId, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowProtoGameJiuMi
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthProtoGameJiuMi
				}
				postIndex := iNdEx + packedLen
				if postIndex < 0 {
					return ErrInvalidLengthProtoGameJiuMi
				}
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				var elementCount int
				var count int
				for _, integer := range dAtA[iNdEx:postIndex] {
					if integer < 128 {
						count++
					}
				}
				elementCount = count
				if elementCount != 0 && len(m.CardListId) == 0 {
					m.CardListId = make([]int32, 0, elementCount)
				}
				for iNdEx < postIndex {
					var v int32
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowProtoGameJiuMi
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= int32(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					m.CardListId = append(m.CardListId, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field CardListId", wireType)
			}
		default:
			iNdEx = preIndex
			skippy, err := skipProtoGameJiuMi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *S2C_AntiAddictInfo) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProtoGameJiuMi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: S2C_AntiAddictInfo: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: S2C_AntiAddictInfo: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TotalPlayTime", wireType)
			}
			m.TotalPlayTime = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.TotalPlayTime |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TodayPlayTime", wireType)
			}
			m.TodayPlayTime = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.TodayPlayTime |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Age", wireType)
			}
			m.Age = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Age |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TodayPay", wireType)
			}
			m.TodayPay = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.TodayPay |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MonthPay", wireType)
			}
			m.MonthPay = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MonthPay |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field LastPayDate", wireType)
			}
			m.LastPayDate = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.LastPayDate |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipProtoGameJiuMi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *C2S_VerifiedIDCard) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProtoGameJiuMi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: C2S_VerifiedIDCard: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: C2S_VerifiedIDCard: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Name = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field IdCard", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.IdCard = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Phone", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Phone = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipProtoGameJiuMi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *S2C_Functions) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProtoGameJiuMi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: S2C_Functions: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: S2C_Functions: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType == 0 {
				var v int32
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowProtoGameJiuMi
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int32(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				m.Code = append(m.Code, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowProtoGameJiuMi
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthProtoGameJiuMi
				}
				postIndex := iNdEx + packedLen
				if postIndex < 0 {
					return ErrInvalidLengthProtoGameJiuMi
				}
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				var elementCount int
				var count int
				for _, integer := range dAtA[iNdEx:postIndex] {
					if integer < 128 {
						count++
					}
				}
				elementCount = count
				if elementCount != 0 && len(m.Code) == 0 {
					m.Code = make([]int32, 0, elementCount)
				}
				for iNdEx < postIndex {
					var v int32
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowProtoGameJiuMi
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= int32(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					m.Code = append(m.Code, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field Code", wireType)
			}
		case 2:
			if wireType == 0 {
				var v int32
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowProtoGameJiuMi
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int32(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				m.Begin = append(m.Begin, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowProtoGameJiuMi
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthProtoGameJiuMi
				}
				postIndex := iNdEx + packedLen
				if postIndex < 0 {
					return ErrInvalidLengthProtoGameJiuMi
				}
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				var elementCount int
				var count int
				for _, integer := range dAtA[iNdEx:postIndex] {
					if integer < 128 {
						count++
					}
				}
				elementCount = count
				if elementCount != 0 && len(m.Begin) == 0 {
					m.Begin = make([]int32, 0, elementCount)
				}
				for iNdEx < postIndex {
					var v int32
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowProtoGameJiuMi
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= int32(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					m.Begin = append(m.Begin, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field Begin", wireType)
			}
		case 3:
			if wireType == 0 {
				var v int32
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowProtoGameJiuMi
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int32(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				m.End = append(m.End, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowProtoGameJiuMi
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthProtoGameJiuMi
				}
				postIndex := iNdEx + packedLen
				if postIndex < 0 {
					return ErrInvalidLengthProtoGameJiuMi
				}
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				var elementCount int
				var count int
				for _, integer := range dAtA[iNdEx:postIndex] {
					if integer < 128 {
						count++
					}
				}
				elementCount = count
				if elementCount != 0 && len(m.End) == 0 {
					m.End = make([]int32, 0, elementCount)
				}
				for iNdEx < postIndex {
					var v int32
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowProtoGameJiuMi
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= int32(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					m.End = append(m.End, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field End", wireType)
			}
		default:
			iNdEx = preIndex
			skippy, err := skipProtoGameJiuMi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *S2C_ShowNotice) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProtoGameJiuMi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: S2C_ShowNotice: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: S2C_ShowNotice: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ShowType", wireType)
			}
			m.ShowType = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ShowType |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Notice", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Notice = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipProtoGameJiuMi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *XConfig) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProtoGameJiuMi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: _config: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: _config: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Key", wireType)
			}
			m.Key = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Key |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Value", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Value = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipProtoGameJiuMi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *S2C_SyncConfig) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProtoGameJiuMi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: S2C_SyncConfig: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: S2C_SyncConfig: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Config", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Config = append(m.Config, &XConfig{})
			if err := m.Config[len(m.Config)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipProtoGameJiuMi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Attachment_Item) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProtoGameJiuMi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Attachment_Item: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Attachment_Item: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Number", wireType)
			}
			m.Number = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Number |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipProtoGameJiuMi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *EmailItem) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProtoGameJiuMi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: EmailItem: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: EmailItem: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Sender", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Sender = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Title", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Title = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Content", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Content = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SendTime", wireType)
			}
			m.SendTime = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.SendTime |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field InvalidTime", wireType)
			}
			m.InvalidTime = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.InvalidTime |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Attachment", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Attachment = append(m.Attachment, &Attachment_Item{})
			if err := m.Attachment[len(m.Attachment)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 8:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Status", wireType)
			}
			m.Status = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Status |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipProtoGameJiuMi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *SimpleEmailItem) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProtoGameJiuMi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: SimpleEmailItem: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: SimpleEmailItem: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Title", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Title = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Sender", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Sender = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Status", wireType)
			}
			m.Status = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Status |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SendTime", wireType)
			}
			m.SendTime = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.SendTime |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field InvalidTime", wireType)
			}
			m.InvalidTime = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.InvalidTime |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 7:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field HaveAttachment", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.HaveAttachment = bool(v != 0)
		default:
			iNdEx = preIndex
			skippy, err := skipProtoGameJiuMi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *S2C_SimpleEmailItemList) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProtoGameJiuMi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: S2C_SimpleEmailItemList: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: S2C_SimpleEmailItemList: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SimpleItems", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SimpleItems = append(m.SimpleItems, &SimpleEmailItem{})
			if err := m.SimpleItems[len(m.SimpleItems)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipProtoGameJiuMi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *S2C_EmailOpResult) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProtoGameJiuMi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: S2C_EmailOpResult: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: S2C_EmailOpResult: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Res", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Res == nil {
				m.Res = &OperationResult{}
			}
			if err := m.Res.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Op", wireType)
			}
			m.Op = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Op |= Enum_Email_Operation(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipProtoGameJiuMi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *C2S_EmailOp) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProtoGameJiuMi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: C2S_EmailOp: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: C2S_EmailOp: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Op", wireType)
			}
			m.Op = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Op |= Enum_Email_Operation(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipProtoGameJiuMi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *FriendInfo) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProtoGameJiuMi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: friendInfo: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: friendInfo: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CharmPoint", wireType)
			}
			m.CharmPoint = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CharmPoint |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Info", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Info == nil {
				m.Info = &FriendSimpleInfo{}
			}
			if err := m.Info.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipProtoGameJiuMi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *FriendSimpleInfo) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProtoGameJiuMi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: friendSimpleInfo: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: friendSimpleInfo: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field UserId", wireType)
			}
			m.UserId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.UserId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field NickName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.NickName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Remarks", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Remarks = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Lv", wireType)
			}
			m.Lv = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Lv |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field GameId", wireType)
			}
			m.GameId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.GameId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field State", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.State = bool(v != 0)
		case 7:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field OfflineDate", wireType)
			}
			m.OfflineDate = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.OfflineDate |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 8:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Icon", wireType)
			}
			m.Icon = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Icon |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 9:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Frame", wireType)
			}
			m.Frame = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Frame |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 10:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field IsFriendSendMeEnergy", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.IsFriendSendMeEnergy = bool(v != 0)
		case 11:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field IsGetFriendSendMeEnergy", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.IsGetFriendSendMeEnergy = bool(v != 0)
		case 12:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field IsSendFriendEnergy", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.IsSendFriendEnergy = bool(v != 0)
		case 13:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ManorName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ManorName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipProtoGameJiuMi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *BlockPerson) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProtoGameJiuMi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: blockPerson: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: blockPerson: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field UserId", wireType)
			}
			m.UserId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.UserId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cloth", wireType)
			}
			m.Cloth = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cloth |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Frame", wireType)
			}
			m.Frame = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Frame |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field NickName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.NickName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipProtoGameJiuMi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *S2C_Friend_GetList) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProtoGameJiuMi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: S2C_Friend_GetList: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: S2C_Friend_GetList: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Friends", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Friends = append(m.Friends, &FriendSimpleInfo{})
			if err := m.Friends[len(m.Friends)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field GetFriendEnergyNo", wireType)
			}
			m.GetFriendEnergyNo = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.GetFriendEnergyNo |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field BlockList", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.BlockList = append(m.BlockList, &BlockPerson{})
			if err := m.BlockList[len(m.BlockList)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipProtoGameJiuMi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *C2S_Friend_Apply) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProtoGameJiuMi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: C2S_Friend_Apply: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: C2S_Friend_Apply: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field UserId", wireType)
			}
			m.UserId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.UserId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Remarks", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Remarks = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipProtoGameJiuMi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *S2C_Friend_Apply) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProtoGameJiuMi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: S2C_Friend_Apply: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: S2C_Friend_Apply: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SenderId", wireType)
			}
			m.SenderId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.SenderId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ReceiverId", wireType)
			}
			m.ReceiverId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ReceiverId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Result", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Result == nil {
				m.Result = &OperationResult{}
			}
			if err := m.Result.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipProtoGameJiuMi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *C2S_Friend_Delete) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProtoGameJiuMi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: C2S_Friend_Delete: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: C2S_Friend_Delete: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field UserId", wireType)
			}
			m.UserId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.UserId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipProtoGameJiuMi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *S2C_Friend_Delete) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProtoGameJiuMi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: S2C_Friend_Delete: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: S2C_Friend_Delete: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field UserId", wireType)
			}
			m.UserId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.UserId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Result", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Result == nil {
				m.Result = &OperationResult{}
			}
			if err := m.Result.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipProtoGameJiuMi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *C2S_Friend_Chat) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProtoGameJiuMi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: C2S_Friend_Chat: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: C2S_Friend_Chat: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field UserId", wireType)
			}
			m.UserId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.UserId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MsgId", wireType)
			}
			m.MsgId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MsgId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Msg", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Msg = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipProtoGameJiuMi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *S2C_Friend_Chat) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProtoGameJiuMi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: S2C_Friend_Chat: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: S2C_Friend_Chat: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MsgId", wireType)
			}
			m.MsgId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MsgId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Ret", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Ret == nil {
				m.Ret = &OperationResult{}
			}
			if err := m.Ret.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipProtoGameJiuMi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ChatInfo) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProtoGameJiuMi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: chatInfo: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: chatInfo: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SenderId", wireType)
			}
			m.SenderId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.SenderId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Msg", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Msg = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SendDate", wireType)
			}
			m.SendDate = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.SendDate |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipProtoGameJiuMi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *S2C_Friend_OnLineMsg) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProtoGameJiuMi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: S2C_Friend_OnLineMsg: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: S2C_Friend_OnLineMsg: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Msg", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Msg == nil {
				m.Msg = &ChatInfo{}
			}
			if err := m.Msg.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipProtoGameJiuMi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *S2C_Friend_OfflineMsg) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProtoGameJiuMi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: S2C_Friend_OfflineMsg: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: S2C_Friend_OfflineMsg: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Msg", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Msg = append(m.Msg, &ChatInfo{})
			if err := m.Msg[len(m.Msg)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipProtoGameJiuMi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *C2S_Friend_Remarks) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProtoGameJiuMi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: C2S_Friend_Remarks: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: C2S_Friend_Remarks: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field UserId", wireType)
			}
			m.UserId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.UserId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Remarks", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Remarks = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipProtoGameJiuMi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *S2C_Friend_Remarks) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProtoGameJiuMi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: S2C_Friend_Remarks: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: S2C_Friend_Remarks: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field UserId", wireType)
			}
			m.UserId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.UserId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Remarks", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Remarks = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Result", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Result == nil {
				m.Result = &OperationResult{}
			}
			if err := m.Result.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipProtoGameJiuMi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *S2C_Friend_Recommend) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProtoGameJiuMi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: S2C_Friend_Recommend: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: S2C_Friend_Recommend: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Friends", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Friends = append(m.Friends, &FriendSimpleInfo{})
			if err := m.Friends[len(m.Friends)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipProtoGameJiuMi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *S2C_Friend_State) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProtoGameJiuMi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: S2C_Friend_State: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: S2C_Friend_State: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Info", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Info == nil {
				m.Info = &FriendInfo{}
			}
			if err := m.Info.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipProtoGameJiuMi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *C2S_Friend_Card) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProtoGameJiuMi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: C2S_Friend_Card: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: C2S_Friend_Card: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field UserId", wireType)
			}
			m.UserId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.UserId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipProtoGameJiuMi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *S2C_Friend_Card) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProtoGameJiuMi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: S2C_Friend_Card: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: S2C_Friend_Card: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Friend", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Friend == nil {
				m.Friend = &FriendInfo{}
			}
			if err := m.Friend.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipProtoGameJiuMi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *C2S_Friend_Search) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProtoGameJiuMi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: C2S_Friend_Search: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: C2S_Friend_Search: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field GameId", wireType)
			}
			m.GameId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.GameId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field NickName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.NickName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipProtoGameJiuMi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *S2C_Friend_Search) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProtoGameJiuMi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: S2C_Friend_Search: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: S2C_Friend_Search: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Friends", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Friends = append(m.Friends, &FriendInfo{})
			if err := m.Friends[len(m.Friends)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipProtoGameJiuMi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *C2S_Friend_DealApply) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProtoGameJiuMi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: C2S_Friend_DealApply: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: C2S_Friend_DealApply: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType == 0 {
				var v int32
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowProtoGameJiuMi
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int32(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				m.UserId = append(m.UserId, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowProtoGameJiuMi
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthProtoGameJiuMi
				}
				postIndex := iNdEx + packedLen
				if postIndex < 0 {
					return ErrInvalidLengthProtoGameJiuMi
				}
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				var elementCount int
				var count int
				for _, integer := range dAtA[iNdEx:postIndex] {
					if integer < 128 {
						count++
					}
				}
				elementCount = count
				if elementCount != 0 && len(m.UserId) == 0 {
					m.UserId = make([]int32, 0, elementCount)
				}
				for iNdEx < postIndex {
					var v int32
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowProtoGameJiuMi
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= int32(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					m.UserId = append(m.UserId, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field UserId", wireType)
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Result", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Result = bool(v != 0)
		default:
			iNdEx = preIndex
			skippy, err := skipProtoGameJiuMi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *S2C_Friend_DealApplyPass) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProtoGameJiuMi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: S2C_Friend_DealApplyPass: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: S2C_Friend_DealApplyPass: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Result", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Result == nil {
				m.Result = &OperationResult{}
			}
			if err := m.Result.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Friends", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Friends = append(m.Friends, &FriendInfo{})
			if err := m.Friends[len(m.Friends)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipProtoGameJiuMi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *S2C_Friend_DealApplyIgnore) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProtoGameJiuMi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: S2C_Friend_DealApplyIgnore: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: S2C_Friend_DealApplyIgnore: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Result", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Result == nil {
				m.Result = &OperationResult{}
			}
			if err := m.Result.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType == 0 {
				var v int32
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowProtoGameJiuMi
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int32(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				m.FriendIds = append(m.FriendIds, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowProtoGameJiuMi
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthProtoGameJiuMi
				}
				postIndex := iNdEx + packedLen
				if postIndex < 0 {
					return ErrInvalidLengthProtoGameJiuMi
				}
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				var elementCount int
				var count int
				for _, integer := range dAtA[iNdEx:postIndex] {
					if integer < 128 {
						count++
					}
				}
				elementCount = count
				if elementCount != 0 && len(m.FriendIds) == 0 {
					m.FriendIds = make([]int32, 0, elementCount)
				}
				for iNdEx < postIndex {
					var v int32
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowProtoGameJiuMi
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= int32(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					m.FriendIds = append(m.FriendIds, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field FriendIds", wireType)
			}
		default:
			iNdEx = preIndex
			skippy, err := skipProtoGameJiuMi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *S2C_Friend_ApplyList) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProtoGameJiuMi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: S2C_Friend_ApplyList: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: S2C_Friend_ApplyList: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Applications", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Applications = append(m.Applications, &FriendSimpleInfo{})
			if err := m.Applications[len(m.Applications)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipProtoGameJiuMi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *C2S_Friend_SendEnergy) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProtoGameJiuMi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: C2S_Friend_SendEnergy: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: C2S_Friend_SendEnergy: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field UserId", wireType)
			}
			m.UserId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.UserId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipProtoGameJiuMi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *S2C_Friend_SendEnergy) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProtoGameJiuMi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: S2C_Friend_SendEnergy: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: S2C_Friend_SendEnergy: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SenderId", wireType)
			}
			m.SenderId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.SenderId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RecvId", wireType)
			}
			m.RecvId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.RecvId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Result", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Result == nil {
				m.Result = &OperationResult{}
			}
			if err := m.Result.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipProtoGameJiuMi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *S2C_Friend_SendEnergyAll) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProtoGameJiuMi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: S2C_Friend_SendEnergyAll: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: S2C_Friend_SendEnergyAll: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType == 0 {
				var v int32
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowProtoGameJiuMi
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int32(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				m.UserIds = append(m.UserIds, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowProtoGameJiuMi
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthProtoGameJiuMi
				}
				postIndex := iNdEx + packedLen
				if postIndex < 0 {
					return ErrInvalidLengthProtoGameJiuMi
				}
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				var elementCount int
				var count int
				for _, integer := range dAtA[iNdEx:postIndex] {
					if integer < 128 {
						count++
					}
				}
				elementCount = count
				if elementCount != 0 && len(m.UserIds) == 0 {
					m.UserIds = make([]int32, 0, elementCount)
				}
				for iNdEx < postIndex {
					var v int32
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowProtoGameJiuMi
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= int32(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					m.UserIds = append(m.UserIds, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field UserIds", wireType)
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Result", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Result == nil {
				m.Result = &OperationResult{}
			}
			if err := m.Result.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipProtoGameJiuMi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *S2C_Friend_GetEnergyAll) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProtoGameJiuMi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: S2C_Friend_GetEnergyAll: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: S2C_Friend_GetEnergyAll: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType == 0 {
				var v int32
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowProtoGameJiuMi
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int32(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				m.UserIds = append(m.UserIds, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowProtoGameJiuMi
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthProtoGameJiuMi
				}
				postIndex := iNdEx + packedLen
				if postIndex < 0 {
					return ErrInvalidLengthProtoGameJiuMi
				}
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				var elementCount int
				var count int
				for _, integer := range dAtA[iNdEx:postIndex] {
					if integer < 128 {
						count++
					}
				}
				elementCount = count
				if elementCount != 0 && len(m.UserIds) == 0 {
					m.UserIds = make([]int32, 0, elementCount)
				}
				for iNdEx < postIndex {
					var v int32
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowProtoGameJiuMi
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= int32(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					m.UserIds = append(m.UserIds, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field UserIds", wireType)
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Result", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Result == nil {
				m.Result = &OperationResult{}
			}
			if err := m.Result.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipProtoGameJiuMi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *S2C_Friend_GetEnergy) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProtoGameJiuMi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: S2C_Friend_GetEnergy: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: S2C_Friend_GetEnergy: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field UserId", wireType)
			}
			m.UserId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.UserId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Result", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Result == nil {
				m.Result = &OperationResult{}
			}
			if err := m.Result.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipProtoGameJiuMi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *C2S_Friend_GetEnergy) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProtoGameJiuMi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: C2S_Friend_GetEnergy: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: C2S_Friend_GetEnergy: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field UserId", wireType)
			}
			m.UserId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.UserId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipProtoGameJiuMi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *C2S_Friend_AddBlock) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProtoGameJiuMi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: C2S_Friend_AddBlock: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: C2S_Friend_AddBlock: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field UserId", wireType)
			}
			m.UserId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.UserId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cloth", wireType)
			}
			m.Cloth = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cloth |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Frame", wireType)
			}
			m.Frame = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Frame |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field NickName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.NickName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipProtoGameJiuMi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *S2C_Friend_AddBlock) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProtoGameJiuMi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: S2C_Friend_AddBlock: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: S2C_Friend_AddBlock: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field UserId", wireType)
			}
			m.UserId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.UserId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Result", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Result == nil {
				m.Result = &OperationResult{}
			}
			if err := m.Result.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipProtoGameJiuMi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *C2S_Friend_DelBlock) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProtoGameJiuMi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: C2S_Friend_DelBlock: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: C2S_Friend_DelBlock: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field UserId", wireType)
			}
			m.UserId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.UserId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipProtoGameJiuMi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *S2C_Friend_DelBlock) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProtoGameJiuMi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: S2C_Friend_DelBlock: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: S2C_Friend_DelBlock: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field UserId", wireType)
			}
			m.UserId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.UserId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Result", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Result == nil {
				m.Result = &OperationResult{}
			}
			if err := m.Result.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipProtoGameJiuMi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *SceneUser) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProtoGameJiuMi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: sceneUser: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: sceneUser: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field UserId", wireType)
			}
			m.UserId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.UserId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Name = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClothesId", wireType)
			}
			m.ClothesId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ClothesId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Level", wireType)
			}
			m.Level = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Level |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipProtoGameJiuMi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *PosInfo) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProtoGameJiuMi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: posInfo: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: posInfo: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field UserId", wireType)
			}
			m.UserId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.UserId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 1 {
				return fmt.Errorf("proto: wrong wireType = %d for field PosX", wireType)
			}
			var v uint64
			if (iNdEx + 8) > l {
				return io.ErrUnexpectedEOF
			}
			v = uint64(encoding_binary.LittleEndian.Uint64(dAtA[iNdEx:]))
			iNdEx += 8
			m.PosX = float64(math.Float64frombits(v))
		case 3:
			if wireType != 1 {
				return fmt.Errorf("proto: wrong wireType = %d for field PosZ", wireType)
			}
			var v uint64
			if (iNdEx + 8) > l {
				return io.ErrUnexpectedEOF
			}
			v = uint64(encoding_binary.LittleEndian.Uint64(dAtA[iNdEx:]))
			iNdEx += 8
			m.PosZ = float64(math.Float64frombits(v))
		case 4:
			if wireType != 1 {
				return fmt.Errorf("proto: wrong wireType = %d for field DirX", wireType)
			}
			var v uint64
			if (iNdEx + 8) > l {
				return io.ErrUnexpectedEOF
			}
			v = uint64(encoding_binary.LittleEndian.Uint64(dAtA[iNdEx:]))
			iNdEx += 8
			m.DirX = float64(math.Float64frombits(v))
		case 5:
			if wireType != 1 {
				return fmt.Errorf("proto: wrong wireType = %d for field DirZ", wireType)
			}
			var v uint64
			if (iNdEx + 8) > l {
				return io.ErrUnexpectedEOF
			}
			v = uint64(encoding_binary.LittleEndian.Uint64(dAtA[iNdEx:]))
			iNdEx += 8
			m.DirZ = float64(math.Float64frombits(v))
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field FindWay", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.FindWay = bool(v != 0)
		default:
			iNdEx = preIndex
			skippy, err := skipProtoGameJiuMi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *C2S_Syn_EnterScene) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProtoGameJiuMi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: C2S_Syn_EnterScene: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: C2S_Syn_EnterScene: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TemplateId", wireType)
			}
			m.TemplateId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.TemplateId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Index", wireType)
			}
			m.Index = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Index |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipProtoGameJiuMi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *S2C_Syn_EnterScene) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProtoGameJiuMi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: S2C_Syn_EnterScene: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: S2C_Syn_EnterScene: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SceneId", wireType)
			}
			m.SceneId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.SceneId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Result", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Result == nil {
				m.Result = &OperationResult{}
			}
			if err := m.Result.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipProtoGameJiuMi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *C2S_Syn_SceneData) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProtoGameJiuMi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: C2S_Syn_SceneData: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: C2S_Syn_SceneData: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SceneId", wireType)
			}
			m.SceneId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.SceneId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipProtoGameJiuMi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *S2C_Syn_SceneData) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProtoGameJiuMi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: S2C_Syn_SceneData: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: S2C_Syn_SceneData: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field BaseData", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.BaseData = append(m.BaseData, &SceneUser{})
			if err := m.BaseData[len(m.BaseData)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Posdata", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Posdata = append(m.Posdata, &PosInfo{})
			if err := m.Posdata[len(m.Posdata)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipProtoGameJiuMi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *S2C_Syn_Info) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProtoGameJiuMi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: S2C_Syn_Info: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: S2C_Syn_Info: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field data", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Data == nil {
				m.Data = &SceneUser{}
			}
			if err := m.Data.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipProtoGameJiuMi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *S2C_Syn_Pos) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProtoGameJiuMi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: S2C_Syn_Pos: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: S2C_Syn_Pos: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field data", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Data == nil {
				m.Data = &PosInfo{}
			}
			if err := m.Data.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipProtoGameJiuMi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *C2S_Syn_Move) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProtoGameJiuMi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: C2S_Syn_Move: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: C2S_Syn_Move: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field data", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Data == nil {
				m.Data = &PosInfo{}
			}
			if err := m.Data.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipProtoGameJiuMi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *C2S_Syn_ModifyRecvMsgStatus) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProtoGameJiuMi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: C2S_Syn_ModifyRecvMsgStatus: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: C2S_Syn_ModifyRecvMsgStatus: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Status", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Status = bool(v != 0)
		default:
			iNdEx = preIndex
			skippy, err := skipProtoGameJiuMi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *S2C_Syn_LeaveScene) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProtoGameJiuMi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: S2C_Syn_LeaveScene: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: S2C_Syn_LeaveScene: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field UserId", wireType)
			}
			m.UserId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.UserId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipProtoGameJiuMi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Mouse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProtoGameJiuMi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: mouse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: mouse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MouseId", wireType)
			}
			m.MouseId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MouseId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MouseType", wireType)
			}
			m.MouseType = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MouseType |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipProtoGameJiuMi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *C2S_Mouse_EnterHole) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProtoGameJiuMi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: C2S_Mouse_EnterHole: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: C2S_Mouse_EnterHole: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipProtoGameJiuMi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *S2C_Mouse_EnterHole) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProtoGameJiuMi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: S2C_Mouse_EnterHole: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: S2C_Mouse_EnterHole: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Result", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Result == nil {
				m.Result = &OperationResult{}
			}
			if err := m.Result.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipProtoGameJiuMi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *S2C_Mouse_NewMouse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProtoGameJiuMi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: S2C_Mouse_NewMouse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: S2C_Mouse_NewMouse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MouseList", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.MouseList = append(m.MouseList, &Mouse{})
			if err := m.MouseList[len(m.MouseList)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipProtoGameJiuMi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *C2S_Mouse_Hit) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProtoGameJiuMi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: C2S_Mouse_Hit: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: C2S_Mouse_Hit: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MouseId", wireType)
			}
			m.MouseId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MouseId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipProtoGameJiuMi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *C2S_Mouse_Eat) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProtoGameJiuMi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: C2S_Mouse_Eat: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: C2S_Mouse_Eat: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MouseId", wireType)
			}
			m.MouseId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MouseId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipProtoGameJiuMi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *C2S_Mouse_Bomb) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProtoGameJiuMi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: C2S_Mouse_Bomb: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: C2S_Mouse_Bomb: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipProtoGameJiuMi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *S2C_Mouse_Over) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProtoGameJiuMi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: S2C_Mouse_Over: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: S2C_Mouse_Over: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipProtoGameJiuMi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Fish) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProtoGameJiuMi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: fish: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: fish: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field FishId", wireType)
			}
			m.FishId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.FishId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TemplateId", wireType)
			}
			m.TemplateId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.TemplateId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field LifeTime", wireType)
			}
			m.LifeTime = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.LifeTime |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipProtoGameJiuMi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *C2S_Fish_SitDown) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProtoGameJiuMi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: C2S_Fish_SitDown: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: C2S_Fish_SitDown: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field FishPondId", wireType)
			}
			m.FishPondId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.FishPondId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipProtoGameJiuMi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *S2C_Fish_SitDown) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProtoGameJiuMi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: S2C_Fish_SitDown: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: S2C_Fish_SitDown: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Result", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Result == nil {
				m.Result = &OperationResult{}
			}
			if err := m.Result.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipProtoGameJiuMi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *C2S_Fish_StandUp) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProtoGameJiuMi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: C2S_Fish_StandUp: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: C2S_Fish_StandUp: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipProtoGameJiuMi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *C2S_Fish_GetAllFish) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProtoGameJiuMi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: C2S_Fish_GetAllFish: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: C2S_Fish_GetAllFish: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipProtoGameJiuMi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *S2C_Fish_GetAllFish) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProtoGameJiuMi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: S2C_Fish_GetAllFish: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: S2C_Fish_GetAllFish: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field FishList", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.FishList = append(m.FishList, &Fish{})
			if err := m.FishList[len(m.FishList)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipProtoGameJiuMi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *C2S_Fish_PullHook) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProtoGameJiuMi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: C2S_Fish_PullHook: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: C2S_Fish_PullHook: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field FishId", wireType)
			}
			m.FishId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.FishId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipProtoGameJiuMi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *S2C_Fish_PullHook) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProtoGameJiuMi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: S2C_Fish_PullHook: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: S2C_Fish_PullHook: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field FishId", wireType)
			}
			m.FishId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.FishId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Result", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Result == nil {
				m.Result = &OperationResult{}
			}
			if err := m.Result.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ItemId", wireType)
			}
			m.ItemId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ItemId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipProtoGameJiuMi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *S2C_Fish_NewFish) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProtoGameJiuMi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: S2C_Fish_NewFish: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: S2C_Fish_NewFish: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field NewFish", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.NewFish == nil {
				m.NewFish = &Fish{}
			}
			if err := m.NewFish.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipProtoGameJiuMi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ManorBuilding) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProtoGameJiuMi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ManorBuilding: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ManorBuilding: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Uid", wireType)
			}
			m.Uid = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Uid |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field BuildId", wireType)
			}
			m.BuildId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.BuildId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PosX", wireType)
			}
			m.PosX = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.PosX |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PosY", wireType)
			}
			m.PosY = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.PosY |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Orientation", wireType)
			}
			m.Orientation = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Orientation |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field HasFinishBuild", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.HasFinishBuild = bool(v != 0)
		case 7:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field BuildEndTime", wireType)
			}
			m.BuildEndTime = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.BuildEndTime |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipProtoGameJiuMi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ManorStock) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProtoGameJiuMi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ManorStock: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ManorStock: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field BuildId", wireType)
			}
			m.BuildId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.BuildId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field No", wireType)
			}
			m.No = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.No |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipProtoGameJiuMi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *S2C_Manor_AllInfo) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProtoGameJiuMi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: S2C_Manor_AllInfo: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: S2C_Manor_AllInfo: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field BuildingList", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.BuildingList = append(m.BuildingList, &ManorBuilding{})
			if err := m.BuildingList[len(m.BuildingList)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field FreshList", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.FreshList = append(m.FreshList, &ManorStock{})
			if err := m.FreshList[len(m.FreshList)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field JunkList", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.JunkList = append(m.JunkList, &ManorStock{})
			if err := m.JunkList[len(m.JunkList)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field OwnerId", wireType)
			}
			m.OwnerId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.OwnerId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ManorName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ManorName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipProtoGameJiuMi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *C2S_Manor_SaveAllPos) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProtoGameJiuMi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: C2S_Manor_SaveAllPos: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: C2S_Manor_SaveAllPos: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field BuildingList", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.BuildingList = append(m.BuildingList, &ManorBuilding{})
			if err := m.BuildingList[len(m.BuildingList)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipProtoGameJiuMi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *C2S_Manor_ChangeOne) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProtoGameJiuMi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: C2S_Manor_ChangeOne: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: C2S_Manor_ChangeOne: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Uid", wireType)
			}
			m.Uid = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Uid |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field BuildId", wireType)
			}
			m.BuildId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.BuildId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Action", wireType)
			}
			m.Action = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Action |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PosX", wireType)
			}
			m.PosX = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.PosX |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PosY", wireType)
			}
			m.PosY = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.PosY |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Orientation", wireType)
			}
			m.Orientation = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Orientation |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipProtoGameJiuMi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *S2C_Manor_ChangeOne) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProtoGameJiuMi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: S2C_Manor_ChangeOne: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: S2C_Manor_ChangeOne: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Res", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Res == nil {
				m.Res = &OperationResult{}
			}
			if err := m.Res.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field BuildResult", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.BuildResult == nil {
				m.BuildResult = &ManorBuilding{}
			}
			if err := m.BuildResult.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Action", wireType)
			}
			m.Action = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Action |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipProtoGameJiuMi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *S2C_Manor_BuyBuilding) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProtoGameJiuMi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: S2C_Manor_BuyBuilding: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: S2C_Manor_BuyBuilding: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Res", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Res == nil {
				m.Res = &OperationResult{}
			}
			if err := m.Res.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field BuildId", wireType)
			}
			m.BuildId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.BuildId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field BuildUid", wireType)
			}
			m.BuildUid = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.BuildUid |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipProtoGameJiuMi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *XAnything) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProtoGameJiuMi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: _Anything: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: _Anything: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Count", wireType)
			}
			m.Count = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Count |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipProtoGameJiuMi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *C2S_Anything_Add) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProtoGameJiuMi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: C2S_Anything_Add: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: C2S_Anything_Add: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field data", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Data = append(m.Data, &XAnything{})
			if err := m.Data[len(m.Data)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipProtoGameJiuMi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *S2C_Anything_Add) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProtoGameJiuMi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: S2C_Anything_Add: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: S2C_Anything_Add: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Ret", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Ret == nil {
				m.Ret = &OperationResult{}
			}
			if err := m.Ret.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipProtoGameJiuMi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *C2S_Anything_Sub) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProtoGameJiuMi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: C2S_Anything_Sub: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: C2S_Anything_Sub: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field data", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Data = append(m.Data, &XAnything{})
			if err := m.Data[len(m.Data)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipProtoGameJiuMi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *S2C_Anything_Sub) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProtoGameJiuMi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: S2C_Anything_Sub: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: S2C_Anything_Sub: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Ret", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Ret == nil {
				m.Ret = &OperationResult{}
			}
			if err := m.Ret.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipProtoGameJiuMi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *XCustomizeVarBool) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProtoGameJiuMi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: _customizeVarBool: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: _customizeVarBool: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Name = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Value", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Value = bool(v != 0)
		default:
			iNdEx = preIndex
			skippy, err := skipProtoGameJiuMi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *XCustomizeVarDouble) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProtoGameJiuMi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: _customizeVarDouble: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: _customizeVarDouble: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Name = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 1 {
				return fmt.Errorf("proto: wrong wireType = %d for field Value", wireType)
			}
			var v uint64
			if (iNdEx + 8) > l {
				return io.ErrUnexpectedEOF
			}
			v = uint64(encoding_binary.LittleEndian.Uint64(dAtA[iNdEx:]))
			iNdEx += 8
			m.Value = float64(math.Float64frombits(v))
		default:
			iNdEx = preIndex
			skippy, err := skipProtoGameJiuMi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *XCustomizeVarString) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProtoGameJiuMi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: _customizeVarString: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: _customizeVarString: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Name = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Value", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Value = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipProtoGameJiuMi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *C2S_CustomizeVar_GetAll) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProtoGameJiuMi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: C2S_CustomizeVar_GetAll: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: C2S_CustomizeVar_GetAll: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipProtoGameJiuMi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *S2C_CustomizeVar_GetAll) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProtoGameJiuMi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: S2C_CustomizeVar_GetAll: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: S2C_CustomizeVar_GetAll: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DataBool", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.DataBool = append(m.DataBool, &XCustomizeVarBool{})
			if err := m.DataBool[len(m.DataBool)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DataDouble", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.DataDouble = append(m.DataDouble, &XCustomizeVarDouble{})
			if err := m.DataDouble[len(m.DataDouble)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DataString", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.DataString = append(m.DataString, &XCustomizeVarString{})
			if err := m.DataString[len(m.DataString)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipProtoGameJiuMi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *C2S_CustomizeVar_GetBoolValue) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProtoGameJiuMi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: C2S_CustomizeVar_GetBoolValue: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: C2S_CustomizeVar_GetBoolValue: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field UserId", wireType)
			}
			m.UserId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.UserId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Name = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field DefaultValue", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.DefaultValue = bool(v != 0)
		default:
			iNdEx = preIndex
			skippy, err := skipProtoGameJiuMi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *S2C_CustomizeVar_GetBoolValue) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProtoGameJiuMi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: S2C_CustomizeVar_GetBoolValue: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: S2C_CustomizeVar_GetBoolValue: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field UserId", wireType)
			}
			m.UserId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.UserId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field data", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Data == nil {
				m.Data = &XCustomizeVarBool{}
			}
			if err := m.Data.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipProtoGameJiuMi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *C2S_CustomizeVar_GetDoubleValue) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProtoGameJiuMi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: C2S_CustomizeVar_GetDoubleValue: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: C2S_CustomizeVar_GetDoubleValue: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field UserId", wireType)
			}
			m.UserId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.UserId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Name = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 1 {
				return fmt.Errorf("proto: wrong wireType = %d for field DefaultValue", wireType)
			}
			var v uint64
			if (iNdEx + 8) > l {
				return io.ErrUnexpectedEOF
			}
			v = uint64(encoding_binary.LittleEndian.Uint64(dAtA[iNdEx:]))
			iNdEx += 8
			m.DefaultValue = float64(math.Float64frombits(v))
		default:
			iNdEx = preIndex
			skippy, err := skipProtoGameJiuMi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *S2C_CustomizeVar_GetDoubleValue) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProtoGameJiuMi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: S2C_CustomizeVar_GetDoubleValue: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: S2C_CustomizeVar_GetDoubleValue: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field UserId", wireType)
			}
			m.UserId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.UserId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field data", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Data == nil {
				m.Data = &XCustomizeVarDouble{}
			}
			if err := m.Data.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipProtoGameJiuMi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *C2S_CustomizeVar_GetStringValue) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProtoGameJiuMi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: C2S_CustomizeVar_GetStringValue: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: C2S_CustomizeVar_GetStringValue: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field UserId", wireType)
			}
			m.UserId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.UserId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Name = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DefaultValue", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.DefaultValue = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipProtoGameJiuMi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *S2C_CustomizeVar_GetStringValue) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProtoGameJiuMi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: S2C_CustomizeVar_GetStringValue: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: S2C_CustomizeVar_GetStringValue: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field UserId", wireType)
			}
			m.UserId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.UserId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field data", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Data == nil {
				m.Data = &XCustomizeVarString{}
			}
			if err := m.Data.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipProtoGameJiuMi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *C2S_CustomizeVar_SetBoolValue) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProtoGameJiuMi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: C2S_CustomizeVar_SetBoolValue: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: C2S_CustomizeVar_SetBoolValue: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field data", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Data == nil {
				m.Data = &XCustomizeVarBool{}
			}
			if err := m.Data.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipProtoGameJiuMi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *C2S_CustomizeVar_SetDoubleValue) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProtoGameJiuMi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: C2S_CustomizeVar_SetDoubleValue: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: C2S_CustomizeVar_SetDoubleValue: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field data", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Data == nil {
				m.Data = &XCustomizeVarDouble{}
			}
			if err := m.Data.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipProtoGameJiuMi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *C2S_CustomizeVar_SetStringValue) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProtoGameJiuMi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: C2S_CustomizeVar_SetStringValue: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: C2S_CustomizeVar_SetStringValue: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field data", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Data == nil {
				m.Data = &XCustomizeVarString{}
			}
			if err := m.Data.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipProtoGameJiuMi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthProtoGameJiuMi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipProtoGameJiuMi(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowProtoGameJiuMi
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowProtoGameJiuMi
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthProtoGameJiuMi
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupProtoGameJiuMi
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthProtoGameJiuMi
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthProtoGameJiuMi        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowProtoGameJiuMi          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupProtoGameJiuMi = fmt.Errorf("proto: unexpected end of group")
)
