// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: protoGameServer.proto

package protocol

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type C2S_Test_RT struct {
	Index                int64    `protobuf:"varint,1,opt,name=index,proto3" json:"index,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *C2S_Test_RT) Reset()         { *m = C2S_Test_RT{} }
func (m *C2S_Test_RT) String() string { return proto.CompactTextString(m) }
func (*C2S_Test_RT) ProtoMessage()    {}
func (*C2S_Test_RT) Descriptor() ([]byte, []int) {
	return fileDescriptor_88cc3d0b27d75a2e, []int{0}
}
func (m *C2S_Test_RT) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *C2S_Test_RT) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_C2S_Test_RT.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *C2S_Test_RT) XXX_Merge(src proto.Message) {
	xxx_messageInfo_C2S_Test_RT.Merge(m, src)
}
func (m *C2S_Test_RT) XXX_Size() int {
	return m.Size()
}
func (m *C2S_Test_RT) XXX_DiscardUnknown() {
	xxx_messageInfo_C2S_Test_RT.DiscardUnknown(m)
}

var xxx_messageInfo_C2S_Test_RT proto.InternalMessageInfo

func (m *C2S_Test_RT) GetIndex() int64 {
	if m != nil {
		return m.Index
	}
	return 0
}

type S2C_Test_RT struct {
	Index                int64    `protobuf:"varint,1,opt,name=index,proto3" json:"index,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *S2C_Test_RT) Reset()         { *m = S2C_Test_RT{} }
func (m *S2C_Test_RT) String() string { return proto.CompactTextString(m) }
func (*S2C_Test_RT) ProtoMessage()    {}
func (*S2C_Test_RT) Descriptor() ([]byte, []int) {
	return fileDescriptor_88cc3d0b27d75a2e, []int{1}
}
func (m *S2C_Test_RT) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *S2C_Test_RT) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_S2C_Test_RT.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *S2C_Test_RT) XXX_Merge(src proto.Message) {
	xxx_messageInfo_S2C_Test_RT.Merge(m, src)
}
func (m *S2C_Test_RT) XXX_Size() int {
	return m.Size()
}
func (m *S2C_Test_RT) XXX_DiscardUnknown() {
	xxx_messageInfo_S2C_Test_RT.DiscardUnknown(m)
}

var xxx_messageInfo_S2C_Test_RT proto.InternalMessageInfo

func (m *S2C_Test_RT) GetIndex() int64 {
	if m != nil {
		return m.Index
	}
	return 0
}

type C2S_Test_Nothing_WithReply struct {
	Index                int64    `protobuf:"varint,1,opt,name=index,proto3" json:"index,omitempty"`
	Msg                  string   `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *C2S_Test_Nothing_WithReply) Reset()         { *m = C2S_Test_Nothing_WithReply{} }
func (m *C2S_Test_Nothing_WithReply) String() string { return proto.CompactTextString(m) }
func (*C2S_Test_Nothing_WithReply) ProtoMessage()    {}
func (*C2S_Test_Nothing_WithReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_88cc3d0b27d75a2e, []int{2}
}
func (m *C2S_Test_Nothing_WithReply) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *C2S_Test_Nothing_WithReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_C2S_Test_Nothing_WithReply.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *C2S_Test_Nothing_WithReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_C2S_Test_Nothing_WithReply.Merge(m, src)
}
func (m *C2S_Test_Nothing_WithReply) XXX_Size() int {
	return m.Size()
}
func (m *C2S_Test_Nothing_WithReply) XXX_DiscardUnknown() {
	xxx_messageInfo_C2S_Test_Nothing_WithReply.DiscardUnknown(m)
}

var xxx_messageInfo_C2S_Test_Nothing_WithReply proto.InternalMessageInfo

func (m *C2S_Test_Nothing_WithReply) GetIndex() int64 {
	if m != nil {
		return m.Index
	}
	return 0
}

func (m *C2S_Test_Nothing_WithReply) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

type S2C_Test_Nothing_WithReply struct {
	Index                int64    `protobuf:"varint,1,opt,name=index,proto3" json:"index,omitempty"`
	Msg                  string   `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *S2C_Test_Nothing_WithReply) Reset()         { *m = S2C_Test_Nothing_WithReply{} }
func (m *S2C_Test_Nothing_WithReply) String() string { return proto.CompactTextString(m) }
func (*S2C_Test_Nothing_WithReply) ProtoMessage()    {}
func (*S2C_Test_Nothing_WithReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_88cc3d0b27d75a2e, []int{3}
}
func (m *S2C_Test_Nothing_WithReply) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *S2C_Test_Nothing_WithReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_S2C_Test_Nothing_WithReply.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *S2C_Test_Nothing_WithReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_S2C_Test_Nothing_WithReply.Merge(m, src)
}
func (m *S2C_Test_Nothing_WithReply) XXX_Size() int {
	return m.Size()
}
func (m *S2C_Test_Nothing_WithReply) XXX_DiscardUnknown() {
	xxx_messageInfo_S2C_Test_Nothing_WithReply.DiscardUnknown(m)
}

var xxx_messageInfo_S2C_Test_Nothing_WithReply proto.InternalMessageInfo

func (m *S2C_Test_Nothing_WithReply) GetIndex() int64 {
	if m != nil {
		return m.Index
	}
	return 0
}

func (m *S2C_Test_Nothing_WithReply) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

type C2S_Test_Nothing_WithOutReply struct {
	Index                int64    `protobuf:"varint,1,opt,name=index,proto3" json:"index,omitempty"`
	Msg                  string   `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *C2S_Test_Nothing_WithOutReply) Reset()         { *m = C2S_Test_Nothing_WithOutReply{} }
func (m *C2S_Test_Nothing_WithOutReply) String() string { return proto.CompactTextString(m) }
func (*C2S_Test_Nothing_WithOutReply) ProtoMessage()    {}
func (*C2S_Test_Nothing_WithOutReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_88cc3d0b27d75a2e, []int{4}
}
func (m *C2S_Test_Nothing_WithOutReply) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *C2S_Test_Nothing_WithOutReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_C2S_Test_Nothing_WithOutReply.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *C2S_Test_Nothing_WithOutReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_C2S_Test_Nothing_WithOutReply.Merge(m, src)
}
func (m *C2S_Test_Nothing_WithOutReply) XXX_Size() int {
	return m.Size()
}
func (m *C2S_Test_Nothing_WithOutReply) XXX_DiscardUnknown() {
	xxx_messageInfo_C2S_Test_Nothing_WithOutReply.DiscardUnknown(m)
}

var xxx_messageInfo_C2S_Test_Nothing_WithOutReply proto.InternalMessageInfo

func (m *C2S_Test_Nothing_WithOutReply) GetIndex() int64 {
	if m != nil {
		return m.Index
	}
	return 0
}

func (m *C2S_Test_Nothing_WithOutReply) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

//通过TOKEN登陆游戏服务器,machineId,token,srvid必须要
type C2S_LoginWithToken struct {
	MachineId            string   `protobuf:"bytes,1,opt,name=machineId,proto3" json:"machineId,omitempty"`
	Token                string   `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
	SrvId                int32    `protobuf:"varint,3,opt,name=srvId,proto3" json:"srvId,omitempty"`
	Channel              int32    `protobuf:"varint,4,opt,name=channel,proto3" json:"channel,omitempty"`
	GameId               int32    `protobuf:"varint,5,opt,name=gameId,proto3" json:"gameId,omitempty"`
	MainVer              int32    `protobuf:"varint,6,opt,name=mainVer,proto3" json:"mainVer,omitempty"`
	EvaluationVer        int32    `protobuf:"varint,7,opt,name=evaluationVer,proto3" json:"evaluationVer,omitempty"`
	HotfixVer            int32    `protobuf:"varint,8,opt,name=hotfixVer,proto3" json:"hotfixVer,omitempty"`
	Phone                string   `protobuf:"bytes,9,opt,name=phone,proto3" json:"phone,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *C2S_LoginWithToken) Reset()         { *m = C2S_LoginWithToken{} }
func (m *C2S_LoginWithToken) String() string { return proto.CompactTextString(m) }
func (*C2S_LoginWithToken) ProtoMessage()    {}
func (*C2S_LoginWithToken) Descriptor() ([]byte, []int) {
	return fileDescriptor_88cc3d0b27d75a2e, []int{5}
}
func (m *C2S_LoginWithToken) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *C2S_LoginWithToken) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_C2S_LoginWithToken.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *C2S_LoginWithToken) XXX_Merge(src proto.Message) {
	xxx_messageInfo_C2S_LoginWithToken.Merge(m, src)
}
func (m *C2S_LoginWithToken) XXX_Size() int {
	return m.Size()
}
func (m *C2S_LoginWithToken) XXX_DiscardUnknown() {
	xxx_messageInfo_C2S_LoginWithToken.DiscardUnknown(m)
}

var xxx_messageInfo_C2S_LoginWithToken proto.InternalMessageInfo

func (m *C2S_LoginWithToken) GetMachineId() string {
	if m != nil {
		return m.MachineId
	}
	return ""
}

func (m *C2S_LoginWithToken) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *C2S_LoginWithToken) GetSrvId() int32 {
	if m != nil {
		return m.SrvId
	}
	return 0
}

func (m *C2S_LoginWithToken) GetChannel() int32 {
	if m != nil {
		return m.Channel
	}
	return 0
}

func (m *C2S_LoginWithToken) GetGameId() int32 {
	if m != nil {
		return m.GameId
	}
	return 0
}

func (m *C2S_LoginWithToken) GetMainVer() int32 {
	if m != nil {
		return m.MainVer
	}
	return 0
}

func (m *C2S_LoginWithToken) GetEvaluationVer() int32 {
	if m != nil {
		return m.EvaluationVer
	}
	return 0
}

func (m *C2S_LoginWithToken) GetHotfixVer() int32 {
	if m != nil {
		return m.HotfixVer
	}
	return 0
}

func (m *C2S_LoginWithToken) GetPhone() string {
	if m != nil {
		return m.Phone
	}
	return ""
}

// 登录成功
type S2C_GameLoginResult struct {
	Success              bool     `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Err                  string   `protobuf:"bytes,3,opt,name=err,proto3" json:"err,omitempty"`
	Code                 int32    `protobuf:"varint,4,opt,name=code,proto3" json:"code,omitempty"`
	ServerTimeNow        uint64   `protobuf:"varint,5,opt,name=serverTimeNow,proto3" json:"serverTimeNow,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *S2C_GameLoginResult) Reset()         { *m = S2C_GameLoginResult{} }
func (m *S2C_GameLoginResult) String() string { return proto.CompactTextString(m) }
func (*S2C_GameLoginResult) ProtoMessage()    {}
func (*S2C_GameLoginResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_88cc3d0b27d75a2e, []int{6}
}
func (m *S2C_GameLoginResult) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *S2C_GameLoginResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_S2C_GameLoginResult.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *S2C_GameLoginResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_S2C_GameLoginResult.Merge(m, src)
}
func (m *S2C_GameLoginResult) XXX_Size() int {
	return m.Size()
}
func (m *S2C_GameLoginResult) XXX_DiscardUnknown() {
	xxx_messageInfo_S2C_GameLoginResult.DiscardUnknown(m)
}

var xxx_messageInfo_S2C_GameLoginResult proto.InternalMessageInfo

func (m *S2C_GameLoginResult) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

func (m *S2C_GameLoginResult) GetErr() string {
	if m != nil {
		return m.Err
	}
	return ""
}

func (m *S2C_GameLoginResult) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *S2C_GameLoginResult) GetServerTimeNow() uint64 {
	if m != nil {
		return m.ServerTimeNow
	}
	return 0
}

type Message struct {
	Msg                  string   `protobuf:"bytes,1,opt,name=msg,proto3" json:"msg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Message) Reset()         { *m = Message{} }
func (m *Message) String() string { return proto.CompactTextString(m) }
func (*Message) ProtoMessage()    {}
func (*Message) Descriptor() ([]byte, []int) {
	return fileDescriptor_88cc3d0b27d75a2e, []int{7}
}
func (m *Message) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Message) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Message.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Message) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Message.Merge(m, src)
}
func (m *Message) XXX_Size() int {
	return m.Size()
}
func (m *Message) XXX_DiscardUnknown() {
	xxx_messageInfo_Message.DiscardUnknown(m)
}

var xxx_messageInfo_Message proto.InternalMessageInfo

func (m *Message) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

func init() {
	proto.RegisterType((*C2S_Test_RT)(nil), "protocol.C2S_Test_RT")
	proto.RegisterType((*S2C_Test_RT)(nil), "protocol.S2C_Test_RT")
	proto.RegisterType((*C2S_Test_Nothing_WithReply)(nil), "protocol.C2S_Test_Nothing_WithReply")
	proto.RegisterType((*S2C_Test_Nothing_WithReply)(nil), "protocol.S2C_Test_Nothing_WithReply")
	proto.RegisterType((*C2S_Test_Nothing_WithOutReply)(nil), "protocol.C2S_Test_Nothing_WithOutReply")
	proto.RegisterType((*C2S_LoginWithToken)(nil), "protocol.C2S_LoginWithToken")
	proto.RegisterType((*S2C_GameLoginResult)(nil), "protocol.S2C_GameLoginResult")
	proto.RegisterType((*Message)(nil), "protocol.Message")
}

func init() { proto.RegisterFile("protoGameServer.proto", fileDescriptor_88cc3d0b27d75a2e) }

var fileDescriptor_88cc3d0b27d75a2e = []byte{
	// 397 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x52, 0xcb, 0xca, 0xd3, 0x40,
	0x14, 0x76, 0xfe, 0x5e, 0x33, 0x22, 0x94, 0xf1, 0x42, 0xf0, 0x12, 0x4a, 0x75, 0xd1, 0x95, 0x8b,
	0xfa, 0x06, 0x56, 0x28, 0x05, 0xad, 0x30, 0x0d, 0xba, 0x2c, 0x63, 0x72, 0x4c, 0x06, 0x93, 0x99,
	0x92, 0x99, 0xd4, 0x8a, 0x5b, 0x1f, 0xc2, 0x47, 0x72, 0xe9, 0x23, 0x48, 0x7d, 0x11, 0x39, 0x27,
	0x69, 0x4b, 0xa1, 0x20, 0xba, 0xca, 0x7c, 0xdf, 0x39, 0xe7, 0xcb, 0x77, 0x2e, 0xfc, 0xfe, 0xb6,
	0xb2, 0xde, 0x2e, 0x54, 0x09, 0x6b, 0xa8, 0x76, 0x50, 0x3d, 0x27, 0x2c, 0x86, 0xf4, 0x49, 0x6c,
	0x31, 0x79, 0xca, 0x6f, 0xcf, 0x67, 0xeb, 0x4d, 0x0c, 0xce, 0x6f, 0x64, 0x2c, 0xee, 0xf1, 0x9e,
	0x36, 0x29, 0xec, 0x43, 0x36, 0x66, 0xd3, 0x8e, 0x6c, 0x00, 0x26, 0xad, 0x67, 0xf3, 0xbf, 0x24,
	0xbd, 0xe2, 0x0f, 0x4f, 0x4a, 0x2b, 0xeb, 0x73, 0x6d, 0xb2, 0xcd, 0x7b, 0xed, 0x73, 0x09, 0xdb,
	0xe2, 0xcb, 0xf5, 0x1a, 0x31, 0xe2, 0x9d, 0xd2, 0x65, 0xe1, 0xcd, 0x98, 0x4d, 0x03, 0x89, 0x4f,
	0x54, 0x39, 0xfd, 0xea, 0xff, 0x55, 0x16, 0xfc, 0xc9, 0x55, 0x2f, 0x6f, 0x6b, 0xff, 0x6f, 0x42,
	0xdf, 0x6e, 0xb8, 0x40, 0xa5, 0xd7, 0x36, 0xd3, 0x06, 0x15, 0x62, 0xfb, 0x09, 0x8c, 0x78, 0xcc,
	0x83, 0x52, 0x25, 0xb9, 0x36, 0xb0, 0x4c, 0x49, 0x22, 0x90, 0x67, 0x02, 0xc5, 0x3d, 0xa6, 0xb5,
	0x42, 0x0d, 0x40, 0xd6, 0x55, 0xbb, 0x65, 0x1a, 0x76, 0xc6, 0x6c, 0xda, 0x93, 0x0d, 0x10, 0x21,
	0x1f, 0x24, 0xb9, 0x32, 0x06, 0x8a, 0xb0, 0x4b, 0xfc, 0x11, 0x8a, 0x07, 0xbc, 0x9f, 0xa9, 0x12,
	0x7f, 0xd0, 0xa3, 0x40, 0x8b, 0xb0, 0xa2, 0x54, 0xda, 0xbc, 0x83, 0x2a, 0xec, 0x37, 0x15, 0x2d,
	0x14, 0xcf, 0xf8, 0x1d, 0xd8, 0xa9, 0xa2, 0x56, 0x5e, 0x5b, 0x8a, 0x0f, 0x28, 0x7e, 0x49, 0xa2,
	0xf7, 0xdc, 0xfa, 0x8f, 0x7a, 0x8f, 0x19, 0x43, 0xca, 0x38, 0x13, 0xe8, 0x72, 0x9b, 0x5b, 0x03,
	0x61, 0xd0, 0x78, 0x27, 0x30, 0xf9, 0xca, 0xef, 0xe2, 0x56, 0xf0, 0x8e, 0x68, 0x12, 0x12, 0x5c,
	0x5d, 0x78, 0xb4, 0xe2, 0xea, 0x24, 0x01, 0xe7, 0x68, 0x08, 0x43, 0x79, 0x84, 0x38, 0x49, 0xa8,
	0x2a, 0x6a, 0x35, 0x90, 0xf8, 0x14, 0x82, 0x77, 0x13, 0x9b, 0x42, 0xdb, 0x25, 0xbd, 0xd1, 0xb0,
	0xa3, 0xb3, 0x8c, 0x75, 0x09, 0x2b, 0xfb, 0x99, 0x3a, 0xed, 0xca, 0x4b, 0x72, 0xf2, 0x88, 0x0f,
	0xde, 0x80, 0x73, 0x2a, 0x83, 0xe3, 0x82, 0xd8, 0x69, 0x41, 0x2f, 0x47, 0x3f, 0x0e, 0x11, 0xfb,
	0x79, 0x88, 0xd8, 0xaf, 0x43, 0xc4, 0xbe, 0xff, 0x8e, 0x6e, 0x7d, 0xe8, 0xd3, 0x6d, 0xbf, 0xf8,
	0x13, 0x00, 0x00, 0xff, 0xff, 0x3b, 0x91, 0x31, 0x41, 0xfb, 0x02, 0x00, 0x00,
}

func (m *C2S_Test_RT) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *C2S_Test_RT) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *C2S_Test_RT) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Index != 0 {
		i = encodeVarintProtoGameServer(dAtA, i, uint64(m.Index))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *S2C_Test_RT) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *S2C_Test_RT) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *S2C_Test_RT) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Index != 0 {
		i = encodeVarintProtoGameServer(dAtA, i, uint64(m.Index))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *C2S_Test_Nothing_WithReply) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *C2S_Test_Nothing_WithReply) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *C2S_Test_Nothing_WithReply) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Msg) > 0 {
		i -= len(m.Msg)
		copy(dAtA[i:], m.Msg)
		i = encodeVarintProtoGameServer(dAtA, i, uint64(len(m.Msg)))
		i--
		dAtA[i] = 0x12
	}
	if m.Index != 0 {
		i = encodeVarintProtoGameServer(dAtA, i, uint64(m.Index))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *S2C_Test_Nothing_WithReply) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *S2C_Test_Nothing_WithReply) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *S2C_Test_Nothing_WithReply) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Msg) > 0 {
		i -= len(m.Msg)
		copy(dAtA[i:], m.Msg)
		i = encodeVarintProtoGameServer(dAtA, i, uint64(len(m.Msg)))
		i--
		dAtA[i] = 0x12
	}
	if m.Index != 0 {
		i = encodeVarintProtoGameServer(dAtA, i, uint64(m.Index))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *C2S_Test_Nothing_WithOutReply) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *C2S_Test_Nothing_WithOutReply) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *C2S_Test_Nothing_WithOutReply) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Msg) > 0 {
		i -= len(m.Msg)
		copy(dAtA[i:], m.Msg)
		i = encodeVarintProtoGameServer(dAtA, i, uint64(len(m.Msg)))
		i--
		dAtA[i] = 0x12
	}
	if m.Index != 0 {
		i = encodeVarintProtoGameServer(dAtA, i, uint64(m.Index))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *C2S_LoginWithToken) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *C2S_LoginWithToken) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *C2S_LoginWithToken) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Phone) > 0 {
		i -= len(m.Phone)
		copy(dAtA[i:], m.Phone)
		i = encodeVarintProtoGameServer(dAtA, i, uint64(len(m.Phone)))
		i--
		dAtA[i] = 0x4a
	}
	if m.HotfixVer != 0 {
		i = encodeVarintProtoGameServer(dAtA, i, uint64(m.HotfixVer))
		i--
		dAtA[i] = 0x40
	}
	if m.EvaluationVer != 0 {
		i = encodeVarintProtoGameServer(dAtA, i, uint64(m.EvaluationVer))
		i--
		dAtA[i] = 0x38
	}
	if m.MainVer != 0 {
		i = encodeVarintProtoGameServer(dAtA, i, uint64(m.MainVer))
		i--
		dAtA[i] = 0x30
	}
	if m.GameId != 0 {
		i = encodeVarintProtoGameServer(dAtA, i, uint64(m.GameId))
		i--
		dAtA[i] = 0x28
	}
	if m.Channel != 0 {
		i = encodeVarintProtoGameServer(dAtA, i, uint64(m.Channel))
		i--
		dAtA[i] = 0x20
	}
	if m.SrvId != 0 {
		i = encodeVarintProtoGameServer(dAtA, i, uint64(m.SrvId))
		i--
		dAtA[i] = 0x18
	}
	if len(m.Token) > 0 {
		i -= len(m.Token)
		copy(dAtA[i:], m.Token)
		i = encodeVarintProtoGameServer(dAtA, i, uint64(len(m.Token)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.MachineId) > 0 {
		i -= len(m.MachineId)
		copy(dAtA[i:], m.MachineId)
		i = encodeVarintProtoGameServer(dAtA, i, uint64(len(m.MachineId)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *S2C_GameLoginResult) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *S2C_GameLoginResult) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *S2C_GameLoginResult) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.ServerTimeNow != 0 {
		i = encodeVarintProtoGameServer(dAtA, i, uint64(m.ServerTimeNow))
		i--
		dAtA[i] = 0x28
	}
	if m.Code != 0 {
		i = encodeVarintProtoGameServer(dAtA, i, uint64(m.Code))
		i--
		dAtA[i] = 0x20
	}
	if len(m.Err) > 0 {
		i -= len(m.Err)
		copy(dAtA[i:], m.Err)
		i = encodeVarintProtoGameServer(dAtA, i, uint64(len(m.Err)))
		i--
		dAtA[i] = 0x1a
	}
	if m.Success {
		i--
		if m.Success {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *Message) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Message) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Message) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Msg) > 0 {
		i -= len(m.Msg)
		copy(dAtA[i:], m.Msg)
		i = encodeVarintProtoGameServer(dAtA, i, uint64(len(m.Msg)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func encodeVarintProtoGameServer(dAtA []byte, offset int, v uint64) int {
	offset -= sovProtoGameServer(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *C2S_Test_RT) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Index != 0 {
		n += 1 + sovProtoGameServer(uint64(m.Index))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *S2C_Test_RT) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Index != 0 {
		n += 1 + sovProtoGameServer(uint64(m.Index))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *C2S_Test_Nothing_WithReply) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Index != 0 {
		n += 1 + sovProtoGameServer(uint64(m.Index))
	}
	l = len(m.Msg)
	if l > 0 {
		n += 1 + l + sovProtoGameServer(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *S2C_Test_Nothing_WithReply) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Index != 0 {
		n += 1 + sovProtoGameServer(uint64(m.Index))
	}
	l = len(m.Msg)
	if l > 0 {
		n += 1 + l + sovProtoGameServer(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *C2S_Test_Nothing_WithOutReply) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Index != 0 {
		n += 1 + sovProtoGameServer(uint64(m.Index))
	}
	l = len(m.Msg)
	if l > 0 {
		n += 1 + l + sovProtoGameServer(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *C2S_LoginWithToken) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.MachineId)
	if l > 0 {
		n += 1 + l + sovProtoGameServer(uint64(l))
	}
	l = len(m.Token)
	if l > 0 {
		n += 1 + l + sovProtoGameServer(uint64(l))
	}
	if m.SrvId != 0 {
		n += 1 + sovProtoGameServer(uint64(m.SrvId))
	}
	if m.Channel != 0 {
		n += 1 + sovProtoGameServer(uint64(m.Channel))
	}
	if m.GameId != 0 {
		n += 1 + sovProtoGameServer(uint64(m.GameId))
	}
	if m.MainVer != 0 {
		n += 1 + sovProtoGameServer(uint64(m.MainVer))
	}
	if m.EvaluationVer != 0 {
		n += 1 + sovProtoGameServer(uint64(m.EvaluationVer))
	}
	if m.HotfixVer != 0 {
		n += 1 + sovProtoGameServer(uint64(m.HotfixVer))
	}
	l = len(m.Phone)
	if l > 0 {
		n += 1 + l + sovProtoGameServer(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *S2C_GameLoginResult) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Success {
		n += 2
	}
	l = len(m.Err)
	if l > 0 {
		n += 1 + l + sovProtoGameServer(uint64(l))
	}
	if m.Code != 0 {
		n += 1 + sovProtoGameServer(uint64(m.Code))
	}
	if m.ServerTimeNow != 0 {
		n += 1 + sovProtoGameServer(uint64(m.ServerTimeNow))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *Message) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Msg)
	if l > 0 {
		n += 1 + l + sovProtoGameServer(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func sovProtoGameServer(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozProtoGameServer(x uint64) (n int) {
	return sovProtoGameServer(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *C2S_Test_RT) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProtoGameServer
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: C2S_Test_RT: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: C2S_Test_RT: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Index", wireType)
			}
			m.Index = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameServer
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Index |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipProtoGameServer(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthProtoGameServer
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *S2C_Test_RT) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProtoGameServer
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: S2C_Test_RT: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: S2C_Test_RT: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Index", wireType)
			}
			m.Index = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameServer
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Index |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipProtoGameServer(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthProtoGameServer
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *C2S_Test_Nothing_WithReply) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProtoGameServer
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: C2S_Test_Nothing_WithReply: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: C2S_Test_Nothing_WithReply: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Index", wireType)
			}
			m.Index = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameServer
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Index |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Msg", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameServer
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthProtoGameServer
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthProtoGameServer
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Msg = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipProtoGameServer(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthProtoGameServer
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *S2C_Test_Nothing_WithReply) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProtoGameServer
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: S2C_Test_Nothing_WithReply: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: S2C_Test_Nothing_WithReply: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Index", wireType)
			}
			m.Index = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameServer
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Index |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Msg", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameServer
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthProtoGameServer
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthProtoGameServer
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Msg = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipProtoGameServer(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthProtoGameServer
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *C2S_Test_Nothing_WithOutReply) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProtoGameServer
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: C2S_Test_Nothing_WithOutReply: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: C2S_Test_Nothing_WithOutReply: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Index", wireType)
			}
			m.Index = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameServer
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Index |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Msg", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameServer
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthProtoGameServer
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthProtoGameServer
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Msg = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipProtoGameServer(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthProtoGameServer
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *C2S_LoginWithToken) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProtoGameServer
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: C2S_LoginWithToken: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: C2S_LoginWithToken: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MachineId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameServer
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthProtoGameServer
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthProtoGameServer
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.MachineId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Token", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameServer
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthProtoGameServer
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthProtoGameServer
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Token = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SrvId", wireType)
			}
			m.SrvId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameServer
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.SrvId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Channel", wireType)
			}
			m.Channel = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameServer
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Channel |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field GameId", wireType)
			}
			m.GameId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameServer
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.GameId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MainVer", wireType)
			}
			m.MainVer = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameServer
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MainVer |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 7:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field EvaluationVer", wireType)
			}
			m.EvaluationVer = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameServer
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.EvaluationVer |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 8:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field HotfixVer", wireType)
			}
			m.HotfixVer = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameServer
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.HotfixVer |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 9:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Phone", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameServer
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthProtoGameServer
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthProtoGameServer
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Phone = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipProtoGameServer(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthProtoGameServer
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *S2C_GameLoginResult) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProtoGameServer
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: S2C_GameLoginResult: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: S2C_GameLoginResult: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Success", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameServer
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Success = bool(v != 0)
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Err", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameServer
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthProtoGameServer
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthProtoGameServer
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Err = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Code", wireType)
			}
			m.Code = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameServer
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Code |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ServerTimeNow", wireType)
			}
			m.ServerTimeNow = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameServer
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ServerTimeNow |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipProtoGameServer(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthProtoGameServer
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Message) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProtoGameServer
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Message: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Message: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Msg", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtoGameServer
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthProtoGameServer
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthProtoGameServer
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Msg = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipProtoGameServer(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthProtoGameServer
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipProtoGameServer(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowProtoGameServer
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowProtoGameServer
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowProtoGameServer
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthProtoGameServer
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupProtoGameServer
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthProtoGameServer
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthProtoGameServer        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowProtoGameServer          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupProtoGameServer = fmt.Errorf("proto: unexpected end of group")
)
